{"ast":null,"code":"import { Vue } from '../vue'; // @vue/component\n\nexport var formSelectionMixin = Vue.extend({\n  computed: {\n    selectionStart: {\n      // Expose selectionStart for formatters, etc\n      cache: false,\n\n      /* istanbul ignore next */\n      get: function get() {\n        return this.$refs.input.selectionStart;\n      },\n\n      /* istanbul ignore next */\n      set: function set(val) {\n        this.$refs.input.selectionStart = val;\n      }\n    },\n    selectionEnd: {\n      // Expose selectionEnd for formatters, etc\n      cache: false,\n\n      /* istanbul ignore next */\n      get: function get() {\n        return this.$refs.input.selectionEnd;\n      },\n\n      /* istanbul ignore next */\n      set: function set(val) {\n        this.$refs.input.selectionEnd = val;\n      }\n    },\n    selectionDirection: {\n      // Expose selectionDirection for formatters, etc\n      cache: false,\n\n      /* istanbul ignore next */\n      get: function get() {\n        return this.$refs.input.selectionDirection;\n      },\n\n      /* istanbul ignore next */\n      set: function set(val) {\n        this.$refs.input.selectionDirection = val;\n      }\n    }\n  },\n  methods: {\n    /* istanbul ignore next */\n    select: function select() {\n      var _this$$refs$input; // For external handler that may want a select() method\n\n\n      (_this$$refs$input = this.$refs.input).select.apply(_this$$refs$input, arguments);\n    },\n\n    /* istanbul ignore next */\n    setSelectionRange: function setSelectionRange() {\n      var _this$$refs$input2; // For external handler that may want a setSelectionRange(a,b,c) method\n\n\n      (_this$$refs$input2 = this.$refs.input).setSelectionRange.apply(_this$$refs$input2, arguments);\n    },\n\n    /* istanbul ignore next */\n    setRangeText: function setRangeText() {\n      var _this$$refs$input3; // For external handler that may want a setRangeText(a,b,c) method\n\n\n      (_this$$refs$input3 = this.$refs.input).setRangeText.apply(_this$$refs$input3, arguments);\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/Yago/Documents/Eclipse/Yago/farolshopping/src/frontend/farolshopping/node_modules/bootstrap-vue/esm/mixins/form-selection.js"],"names":["Vue","formSelectionMixin","extend","computed","selectionStart","cache","get","$refs","input","set","val","selectionEnd","selectionDirection","methods","select","_this$$refs$input","apply","arguments","setSelectionRange","_this$$refs$input2","setRangeText","_this$$refs$input3"],"mappings":"AAAA,SAASA,GAAT,QAAoB,QAApB,C,CAA8B;;AAE9B,OAAO,IAAIC,kBAAkB,GAAGD,GAAG,CAACE,MAAJ,CAAW;AACzCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,cAAc,EAAE;AACd;AACAC,MAAAA,KAAK,EAAE,KAFO;;AAId;AACAC,MAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,eAAO,KAAKC,KAAL,CAAWC,KAAX,CAAiBJ,cAAxB;AACD,OAPa;;AASd;AACAK,MAAAA,GAAG,EAAE,SAASA,GAAT,CAAaC,GAAb,EAAkB;AACrB,aAAKH,KAAL,CAAWC,KAAX,CAAiBJ,cAAjB,GAAkCM,GAAlC;AACD;AAZa,KADR;AAeRC,IAAAA,YAAY,EAAE;AACZ;AACAN,MAAAA,KAAK,EAAE,KAFK;;AAIZ;AACAC,MAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,eAAO,KAAKC,KAAL,CAAWC,KAAX,CAAiBG,YAAxB;AACD,OAPW;;AASZ;AACAF,MAAAA,GAAG,EAAE,SAASA,GAAT,CAAaC,GAAb,EAAkB;AACrB,aAAKH,KAAL,CAAWC,KAAX,CAAiBG,YAAjB,GAAgCD,GAAhC;AACD;AAZW,KAfN;AA6BRE,IAAAA,kBAAkB,EAAE;AAClB;AACAP,MAAAA,KAAK,EAAE,KAFW;;AAIlB;AACAC,MAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,eAAO,KAAKC,KAAL,CAAWC,KAAX,CAAiBI,kBAAxB;AACD,OAPiB;;AASlB;AACAH,MAAAA,GAAG,EAAE,SAASA,GAAT,CAAaC,GAAb,EAAkB;AACrB,aAAKH,KAAL,CAAWC,KAAX,CAAiBI,kBAAjB,GAAsCF,GAAtC;AACD;AAZiB;AA7BZ,GAD+B;AA6CzCG,EAAAA,OAAO,EAAE;AACP;AACAC,IAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,UAAIC,iBAAJ,CADwB,CAGxB;;;AACA,OAACA,iBAAiB,GAAG,KAAKR,KAAL,CAAWC,KAAhC,EAAuCM,MAAvC,CAA8CE,KAA9C,CAAoDD,iBAApD,EAAuEE,SAAvE;AACD,KAPM;;AASP;AACAC,IAAAA,iBAAiB,EAAE,SAASA,iBAAT,GAA6B;AAC9C,UAAIC,kBAAJ,CAD8C,CAG9C;;;AACA,OAACA,kBAAkB,GAAG,KAAKZ,KAAL,CAAWC,KAAjC,EAAwCU,iBAAxC,CAA0DF,KAA1D,CAAgEG,kBAAhE,EAAoFF,SAApF;AACD,KAfM;;AAiBP;AACAG,IAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpC,UAAIC,kBAAJ,CADoC,CAGpC;;;AACA,OAACA,kBAAkB,GAAG,KAAKd,KAAL,CAAWC,KAAjC,EAAwCY,YAAxC,CAAqDJ,KAArD,CAA2DK,kBAA3D,EAA+EJ,SAA/E;AACD;AAvBM;AA7CgC,CAAX,CAAzB","sourcesContent":["import { Vue } from '../vue'; // @vue/component\n\nexport var formSelectionMixin = Vue.extend({\n  computed: {\n    selectionStart: {\n      // Expose selectionStart for formatters, etc\n      cache: false,\n\n      /* istanbul ignore next */\n      get: function get() {\n        return this.$refs.input.selectionStart;\n      },\n\n      /* istanbul ignore next */\n      set: function set(val) {\n        this.$refs.input.selectionStart = val;\n      }\n    },\n    selectionEnd: {\n      // Expose selectionEnd for formatters, etc\n      cache: false,\n\n      /* istanbul ignore next */\n      get: function get() {\n        return this.$refs.input.selectionEnd;\n      },\n\n      /* istanbul ignore next */\n      set: function set(val) {\n        this.$refs.input.selectionEnd = val;\n      }\n    },\n    selectionDirection: {\n      // Expose selectionDirection for formatters, etc\n      cache: false,\n\n      /* istanbul ignore next */\n      get: function get() {\n        return this.$refs.input.selectionDirection;\n      },\n\n      /* istanbul ignore next */\n      set: function set(val) {\n        this.$refs.input.selectionDirection = val;\n      }\n    }\n  },\n  methods: {\n    /* istanbul ignore next */\n    select: function select() {\n      var _this$$refs$input;\n\n      // For external handler that may want a select() method\n      (_this$$refs$input = this.$refs.input).select.apply(_this$$refs$input, arguments);\n    },\n\n    /* istanbul ignore next */\n    setSelectionRange: function setSelectionRange() {\n      var _this$$refs$input2;\n\n      // For external handler that may want a setSelectionRange(a,b,c) method\n      (_this$$refs$input2 = this.$refs.input).setSelectionRange.apply(_this$$refs$input2, arguments);\n    },\n\n    /* istanbul ignore next */\n    setRangeText: function setRangeText() {\n      var _this$$refs$input3;\n\n      // For external handler that may want a setRangeText(a,b,c) method\n      (_this$$refs$input3 = this.$refs.input).setRangeText.apply(_this$$refs$input3, arguments);\n    }\n  }\n});"]},"metadata":{},"sourceType":"module"}