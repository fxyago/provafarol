{"ast":null,"code":"/* Form control contextual state class computation\n *\n * Returned class is either 'is-valid' or 'is-invalid' based on the 'state' prop\n * state can be one of five values:\n *  - true for is-valid\n *  - false for is-invalid\n *  - null for no contextual state\n */\nimport { Vue } from '../vue';\nimport { PROP_TYPE_BOOLEAN } from '../constants/props';\nimport { isBoolean } from '../utils/inspect';\nimport { makeProp, makePropsConfigurable } from '../utils/props'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  // Tri-state prop: true, false, null (or undefined)\n  state: makeProp(PROP_TYPE_BOOLEAN, null)\n}, 'formState'); // --- Mixin ---\n// @vue/component\n\nexport var formStateMixin = Vue.extend({\n  props: props,\n  computed: {\n    computedState: function computedState() {\n      // If not a boolean, ensure that value is null\n      return isBoolean(this.state) ? this.state : null;\n    },\n    stateClass: function stateClass() {\n      var state = this.computedState;\n      return state === true ? 'is-valid' : state === false ? 'is-invalid' : null;\n    },\n    computedAriaInvalid: function computedAriaInvalid() {\n      var ariaInvalid = this.ariaInvalid;\n\n      if (ariaInvalid === true || ariaInvalid === 'true' || ariaInvalid === '') {\n        return 'true';\n      }\n\n      return this.computedState === false ? 'true' : ariaInvalid;\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/Yago/Documents/Eclipse/Yago/farolshopping/src/frontend/farolshopping/node_modules/bootstrap-vue/esm/mixins/form-state.js"],"names":["Vue","PROP_TYPE_BOOLEAN","isBoolean","makeProp","makePropsConfigurable","props","state","formStateMixin","extend","computed","computedState","stateClass","computedAriaInvalid","ariaInvalid"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,GAAT,QAAoB,QAApB;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,EAAmBC,qBAAnB,QAAgD,gBAAhD,C,CAAkE;;AAElE,OAAO,IAAIC,KAAK,GAAGD,qBAAqB,CAAC;AACvC;AACAE,EAAAA,KAAK,EAAEH,QAAQ,CAACF,iBAAD,EAAoB,IAApB;AAFwB,CAAD,EAGrC,WAHqC,CAAjC,C,CAGU;AACjB;;AAEA,OAAO,IAAIM,cAAc,GAAGP,GAAG,CAACQ,MAAJ,CAAW;AACrCH,EAAAA,KAAK,EAAEA,KAD8B;AAErCI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,EAAE,SAASA,aAAT,GAAyB;AACtC;AACA,aAAOR,SAAS,CAAC,KAAKI,KAAN,CAAT,GAAwB,KAAKA,KAA7B,GAAqC,IAA5C;AACD,KAJO;AAKRK,IAAAA,UAAU,EAAE,SAASA,UAAT,GAAsB;AAChC,UAAIL,KAAK,GAAG,KAAKI,aAAjB;AACA,aAAOJ,KAAK,KAAK,IAAV,GAAiB,UAAjB,GAA8BA,KAAK,KAAK,KAAV,GAAkB,YAAlB,GAAiC,IAAtE;AACD,KARO;AASRM,IAAAA,mBAAmB,EAAE,SAASA,mBAAT,GAA+B;AAClD,UAAIC,WAAW,GAAG,KAAKA,WAAvB;;AAEA,UAAIA,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,MAAxC,IAAkDA,WAAW,KAAK,EAAtE,EAA0E;AACxE,eAAO,MAAP;AACD;;AAED,aAAO,KAAKH,aAAL,KAAuB,KAAvB,GAA+B,MAA/B,GAAwCG,WAA/C;AACD;AAjBO;AAF2B,CAAX,CAArB","sourcesContent":["/* Form control contextual state class computation\n *\n * Returned class is either 'is-valid' or 'is-invalid' based on the 'state' prop\n * state can be one of five values:\n *  - true for is-valid\n *  - false for is-invalid\n *  - null for no contextual state\n */\nimport { Vue } from '../vue';\nimport { PROP_TYPE_BOOLEAN } from '../constants/props';\nimport { isBoolean } from '../utils/inspect';\nimport { makeProp, makePropsConfigurable } from '../utils/props'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  // Tri-state prop: true, false, null (or undefined)\n  state: makeProp(PROP_TYPE_BOOLEAN, null)\n}, 'formState'); // --- Mixin ---\n// @vue/component\n\nexport var formStateMixin = Vue.extend({\n  props: props,\n  computed: {\n    computedState: function computedState() {\n      // If not a boolean, ensure that value is null\n      return isBoolean(this.state) ? this.state : null;\n    },\n    stateClass: function stateClass() {\n      var state = this.computedState;\n      return state === true ? 'is-valid' : state === false ? 'is-invalid' : null;\n    },\n    computedAriaInvalid: function computedAriaInvalid() {\n      var ariaInvalid = this.ariaInvalid;\n\n      if (ariaInvalid === true || ariaInvalid === 'true' || ariaInvalid === '') {\n        return 'true';\n      }\n\n      return this.computedState === false ? 'true' : ariaInvalid;\n    }\n  }\n});"]},"metadata":{},"sourceType":"module"}