{"ast":null,"code":"import \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n\n/**\n * Private ModalManager helper\n * Handles controlling modal stacking zIndexes and body adjustments/classes\n */\nimport { Vue } from '../../../vue';\nimport { IS_BROWSER } from '../../../constants/env';\nimport { HOOK_EVENT_NAME_BEFORE_DESTROY } from '../../../constants/events';\nimport { addClass, getAttr, getBCR, getCS, getStyle, hasAttr, removeAttr, removeClass, requestAF, selectAll, setAttr, setStyle } from '../../../utils/dom';\nimport { isNull } from '../../../utils/inspect';\nimport { toFloat, toInteger } from '../../../utils/number'; // --- Constants ---\n// Default modal backdrop z-index\n\nvar DEFAULT_ZINDEX = 1040; // Selectors for padding/margin adjustments\n\nvar SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top';\nvar SELECTOR_STICKY_CONTENT = '.sticky-top';\nvar SELECTOR_NAVBAR_TOGGLER = '.navbar-toggler'; // --- Main component ---\n// @vue/component\n\nvar ModalManager = /*#__PURE__*/Vue.extend({\n  data: function data() {\n    return {\n      modals: [],\n      baseZIndex: null,\n      scrollbarWidth: null,\n      isBodyOverflowing: false\n    };\n  },\n  computed: {\n    modalCount: function modalCount() {\n      return this.modals.length;\n    },\n    modalsAreOpen: function modalsAreOpen() {\n      return this.modalCount > 0;\n    }\n  },\n  watch: {\n    modalCount: function modalCount(newCount, oldCount) {\n      if (IS_BROWSER) {\n        this.getScrollbarWidth();\n\n        if (newCount > 0 && oldCount === 0) {\n          // Transitioning to modal(s) open\n          this.checkScrollbar();\n          this.setScrollbar();\n          addClass(document.body, 'modal-open');\n        } else if (newCount === 0 && oldCount > 0) {\n          // Transitioning to modal(s) closed\n          this.resetScrollbar();\n          removeClass(document.body, 'modal-open');\n        }\n\n        setAttr(document.body, 'data-modal-open-count', String(newCount));\n      }\n    },\n    modals: function modals(newValue) {\n      var _this = this;\n\n      this.checkScrollbar();\n      requestAF(function () {\n        _this.updateModals(newValue || []);\n      });\n    }\n  },\n  methods: {\n    // Public methods\n    registerModal: function registerModal(modal) {\n      var _this2 = this; // Register the modal if not already registered\n\n\n      if (modal && this.modals.indexOf(modal) === -1) {\n        // Add modal to modals array\n        this.modals.push(modal);\n        modal.$once(HOOK_EVENT_NAME_BEFORE_DESTROY, function () {\n          _this2.unregisterModal(modal);\n        });\n      }\n    },\n    unregisterModal: function unregisterModal(modal) {\n      var index = this.modals.indexOf(modal);\n\n      if (index > -1) {\n        // Remove modal from modals array\n        this.modals.splice(index, 1); // Reset the modal's data\n\n        if (!(modal._isBeingDestroyed || modal._isDestroyed)) {\n          this.resetModal(modal);\n        }\n      }\n    },\n    getBaseZIndex: function getBaseZIndex() {\n      if (isNull(this.baseZIndex) && IS_BROWSER) {\n        // Create a temporary `div.modal-backdrop` to get computed z-index\n        var div = document.createElement('div');\n        addClass(div, 'modal-backdrop');\n        addClass(div, 'd-none');\n        setStyle(div, 'display', 'none');\n        document.body.appendChild(div);\n        this.baseZIndex = toInteger(getCS(div).zIndex, DEFAULT_ZINDEX);\n        document.body.removeChild(div);\n      }\n\n      return this.baseZIndex || DEFAULT_ZINDEX;\n    },\n    getScrollbarWidth: function getScrollbarWidth() {\n      if (isNull(this.scrollbarWidth) && IS_BROWSER) {\n        // Create a temporary `div.measure-scrollbar` to get computed z-index\n        var div = document.createElement('div');\n        addClass(div, 'modal-scrollbar-measure');\n        document.body.appendChild(div);\n        this.scrollbarWidth = getBCR(div).width - div.clientWidth;\n        document.body.removeChild(div);\n      }\n\n      return this.scrollbarWidth || 0;\n    },\n    // Private methods\n    updateModals: function updateModals(modals) {\n      var _this3 = this;\n\n      var baseZIndex = this.getBaseZIndex();\n      var scrollbarWidth = this.getScrollbarWidth();\n      modals.forEach(function (modal, index) {\n        // We update data values on each modal\n        modal.zIndex = baseZIndex + index;\n        modal.scrollbarWidth = scrollbarWidth;\n        modal.isTop = index === _this3.modals.length - 1;\n        modal.isBodyOverflowing = _this3.isBodyOverflowing;\n      });\n    },\n    resetModal: function resetModal(modal) {\n      if (modal) {\n        modal.zIndex = this.getBaseZIndex();\n        modal.isTop = true;\n        modal.isBodyOverflowing = false;\n      }\n    },\n    checkScrollbar: function checkScrollbar() {\n      // Determine if the body element is overflowing\n      var _getBCR = getBCR(document.body),\n          left = _getBCR.left,\n          right = _getBCR.right;\n\n      this.isBodyOverflowing = left + right < window.innerWidth;\n    },\n    setScrollbar: function setScrollbar() {\n      var body = document.body; // Storage place to cache changes to margins and padding\n      // Note: This assumes the following element types are not added to the\n      // document after the modal has opened.\n\n      body._paddingChangedForModal = body._paddingChangedForModal || [];\n      body._marginChangedForModal = body._marginChangedForModal || [];\n\n      if (this.isBodyOverflowing) {\n        var scrollbarWidth = this.scrollbarWidth; // Adjust fixed content padding\n\n        /* istanbul ignore next: difficult to test in JSDOM */\n\n        selectAll(SELECTOR_FIXED_CONTENT).forEach(function (el) {\n          var actualPadding = getStyle(el, 'paddingRight') || '';\n          setAttr(el, 'data-padding-right', actualPadding);\n          setStyle(el, 'paddingRight', \"\".concat(toFloat(getCS(el).paddingRight, 0) + scrollbarWidth, \"px\"));\n\n          body._paddingChangedForModal.push(el);\n        }); // Adjust sticky content margin\n\n        /* istanbul ignore next: difficult to test in JSDOM */\n\n        selectAll(SELECTOR_STICKY_CONTENT).forEach(function (el)\n        /* istanbul ignore next */\n        {\n          var actualMargin = getStyle(el, 'marginRight') || '';\n          setAttr(el, 'data-margin-right', actualMargin);\n          setStyle(el, 'marginRight', \"\".concat(toFloat(getCS(el).marginRight, 0) - scrollbarWidth, \"px\"));\n\n          body._marginChangedForModal.push(el);\n        }); // Adjust <b-navbar-toggler> margin\n\n        /* istanbul ignore next: difficult to test in JSDOM */\n\n        selectAll(SELECTOR_NAVBAR_TOGGLER).forEach(function (el)\n        /* istanbul ignore next */\n        {\n          var actualMargin = getStyle(el, 'marginRight') || '';\n          setAttr(el, 'data-margin-right', actualMargin);\n          setStyle(el, 'marginRight', \"\".concat(toFloat(getCS(el).marginRight, 0) + scrollbarWidth, \"px\"));\n\n          body._marginChangedForModal.push(el);\n        }); // Adjust body padding\n\n        var actualPadding = getStyle(body, 'paddingRight') || '';\n        setAttr(body, 'data-padding-right', actualPadding);\n        setStyle(body, 'paddingRight', \"\".concat(toFloat(getCS(body).paddingRight, 0) + scrollbarWidth, \"px\"));\n      }\n    },\n    resetScrollbar: function resetScrollbar() {\n      var body = document.body;\n\n      if (body._paddingChangedForModal) {\n        // Restore fixed content padding\n        body._paddingChangedForModal.forEach(function (el) {\n          /* istanbul ignore next: difficult to test in JSDOM */\n          if (hasAttr(el, 'data-padding-right')) {\n            setStyle(el, 'paddingRight', getAttr(el, 'data-padding-right') || '');\n            removeAttr(el, 'data-padding-right');\n          }\n        });\n      }\n\n      if (body._marginChangedForModal) {\n        // Restore sticky content and navbar-toggler margin\n        body._marginChangedForModal.forEach(function (el) {\n          /* istanbul ignore next: difficult to test in JSDOM */\n          if (hasAttr(el, 'data-margin-right')) {\n            setStyle(el, 'marginRight', getAttr(el, 'data-margin-right') || '');\n            removeAttr(el, 'data-margin-right');\n          }\n        });\n      }\n\n      body._paddingChangedForModal = null;\n      body._marginChangedForModal = null; // Restore body padding\n\n      if (hasAttr(body, 'data-padding-right')) {\n        setStyle(body, 'paddingRight', getAttr(body, 'data-padding-right') || '');\n        removeAttr(body, 'data-padding-right');\n      }\n    }\n  }\n}); // Create and export our modal manager instance\n\nexport var modalManager = new ModalManager();","map":{"version":3,"sources":["C:/Users/Yago/Documents/Eclipse/Yago/farolshopping/src/frontend/farolshopping/node_modules/bootstrap-vue/esm/components/modal/helpers/modal-manager.js"],"names":["Vue","IS_BROWSER","HOOK_EVENT_NAME_BEFORE_DESTROY","addClass","getAttr","getBCR","getCS","getStyle","hasAttr","removeAttr","removeClass","requestAF","selectAll","setAttr","setStyle","isNull","toFloat","toInteger","DEFAULT_ZINDEX","SELECTOR_FIXED_CONTENT","SELECTOR_STICKY_CONTENT","SELECTOR_NAVBAR_TOGGLER","ModalManager","extend","data","modals","baseZIndex","scrollbarWidth","isBodyOverflowing","computed","modalCount","length","modalsAreOpen","watch","newCount","oldCount","getScrollbarWidth","checkScrollbar","setScrollbar","document","body","resetScrollbar","String","newValue","_this","updateModals","methods","registerModal","modal","_this2","indexOf","push","$once","unregisterModal","index","splice","_isBeingDestroyed","_isDestroyed","resetModal","getBaseZIndex","div","createElement","appendChild","zIndex","removeChild","width","clientWidth","_this3","forEach","isTop","_getBCR","left","right","window","innerWidth","_paddingChangedForModal","_marginChangedForModal","el","actualPadding","concat","paddingRight","actualMargin","marginRight","modalManager"],"mappings":"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","sourcesContent":["/**\n * Private ModalManager helper\n * Handles controlling modal stacking zIndexes and body adjustments/classes\n */\nimport { Vue } from '../../../vue';\nimport { IS_BROWSER } from '../../../constants/env';\nimport { HOOK_EVENT_NAME_BEFORE_DESTROY } from '../../../constants/events';\nimport { addClass, getAttr, getBCR, getCS, getStyle, hasAttr, removeAttr, removeClass, requestAF, selectAll, setAttr, setStyle } from '../../../utils/dom';\nimport { isNull } from '../../../utils/inspect';\nimport { toFloat, toInteger } from '../../../utils/number'; // --- Constants ---\n// Default modal backdrop z-index\n\nvar DEFAULT_ZINDEX = 1040; // Selectors for padding/margin adjustments\n\nvar SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top';\nvar SELECTOR_STICKY_CONTENT = '.sticky-top';\nvar SELECTOR_NAVBAR_TOGGLER = '.navbar-toggler'; // --- Main component ---\n// @vue/component\n\nvar ModalManager = /*#__PURE__*/Vue.extend({\n  data: function data() {\n    return {\n      modals: [],\n      baseZIndex: null,\n      scrollbarWidth: null,\n      isBodyOverflowing: false\n    };\n  },\n  computed: {\n    modalCount: function modalCount() {\n      return this.modals.length;\n    },\n    modalsAreOpen: function modalsAreOpen() {\n      return this.modalCount > 0;\n    }\n  },\n  watch: {\n    modalCount: function modalCount(newCount, oldCount) {\n      if (IS_BROWSER) {\n        this.getScrollbarWidth();\n\n        if (newCount > 0 && oldCount === 0) {\n          // Transitioning to modal(s) open\n          this.checkScrollbar();\n          this.setScrollbar();\n          addClass(document.body, 'modal-open');\n        } else if (newCount === 0 && oldCount > 0) {\n          // Transitioning to modal(s) closed\n          this.resetScrollbar();\n          removeClass(document.body, 'modal-open');\n        }\n\n        setAttr(document.body, 'data-modal-open-count', String(newCount));\n      }\n    },\n    modals: function modals(newValue) {\n      var _this = this;\n\n      this.checkScrollbar();\n      requestAF(function () {\n        _this.updateModals(newValue || []);\n      });\n    }\n  },\n  methods: {\n    // Public methods\n    registerModal: function registerModal(modal) {\n      var _this2 = this;\n\n      // Register the modal if not already registered\n      if (modal && this.modals.indexOf(modal) === -1) {\n        // Add modal to modals array\n        this.modals.push(modal);\n        modal.$once(HOOK_EVENT_NAME_BEFORE_DESTROY, function () {\n          _this2.unregisterModal(modal);\n        });\n      }\n    },\n    unregisterModal: function unregisterModal(modal) {\n      var index = this.modals.indexOf(modal);\n\n      if (index > -1) {\n        // Remove modal from modals array\n        this.modals.splice(index, 1); // Reset the modal's data\n\n        if (!(modal._isBeingDestroyed || modal._isDestroyed)) {\n          this.resetModal(modal);\n        }\n      }\n    },\n    getBaseZIndex: function getBaseZIndex() {\n      if (isNull(this.baseZIndex) && IS_BROWSER) {\n        // Create a temporary `div.modal-backdrop` to get computed z-index\n        var div = document.createElement('div');\n        addClass(div, 'modal-backdrop');\n        addClass(div, 'd-none');\n        setStyle(div, 'display', 'none');\n        document.body.appendChild(div);\n        this.baseZIndex = toInteger(getCS(div).zIndex, DEFAULT_ZINDEX);\n        document.body.removeChild(div);\n      }\n\n      return this.baseZIndex || DEFAULT_ZINDEX;\n    },\n    getScrollbarWidth: function getScrollbarWidth() {\n      if (isNull(this.scrollbarWidth) && IS_BROWSER) {\n        // Create a temporary `div.measure-scrollbar` to get computed z-index\n        var div = document.createElement('div');\n        addClass(div, 'modal-scrollbar-measure');\n        document.body.appendChild(div);\n        this.scrollbarWidth = getBCR(div).width - div.clientWidth;\n        document.body.removeChild(div);\n      }\n\n      return this.scrollbarWidth || 0;\n    },\n    // Private methods\n    updateModals: function updateModals(modals) {\n      var _this3 = this;\n\n      var baseZIndex = this.getBaseZIndex();\n      var scrollbarWidth = this.getScrollbarWidth();\n      modals.forEach(function (modal, index) {\n        // We update data values on each modal\n        modal.zIndex = baseZIndex + index;\n        modal.scrollbarWidth = scrollbarWidth;\n        modal.isTop = index === _this3.modals.length - 1;\n        modal.isBodyOverflowing = _this3.isBodyOverflowing;\n      });\n    },\n    resetModal: function resetModal(modal) {\n      if (modal) {\n        modal.zIndex = this.getBaseZIndex();\n        modal.isTop = true;\n        modal.isBodyOverflowing = false;\n      }\n    },\n    checkScrollbar: function checkScrollbar() {\n      // Determine if the body element is overflowing\n      var _getBCR = getBCR(document.body),\n          left = _getBCR.left,\n          right = _getBCR.right;\n\n      this.isBodyOverflowing = left + right < window.innerWidth;\n    },\n    setScrollbar: function setScrollbar() {\n      var body = document.body; // Storage place to cache changes to margins and padding\n      // Note: This assumes the following element types are not added to the\n      // document after the modal has opened.\n\n      body._paddingChangedForModal = body._paddingChangedForModal || [];\n      body._marginChangedForModal = body._marginChangedForModal || [];\n\n      if (this.isBodyOverflowing) {\n        var scrollbarWidth = this.scrollbarWidth; // Adjust fixed content padding\n\n        /* istanbul ignore next: difficult to test in JSDOM */\n\n        selectAll(SELECTOR_FIXED_CONTENT).forEach(function (el) {\n          var actualPadding = getStyle(el, 'paddingRight') || '';\n          setAttr(el, 'data-padding-right', actualPadding);\n          setStyle(el, 'paddingRight', \"\".concat(toFloat(getCS(el).paddingRight, 0) + scrollbarWidth, \"px\"));\n\n          body._paddingChangedForModal.push(el);\n        }); // Adjust sticky content margin\n\n        /* istanbul ignore next: difficult to test in JSDOM */\n\n        selectAll(SELECTOR_STICKY_CONTENT).forEach(function (el)\n        /* istanbul ignore next */\n        {\n          var actualMargin = getStyle(el, 'marginRight') || '';\n          setAttr(el, 'data-margin-right', actualMargin);\n          setStyle(el, 'marginRight', \"\".concat(toFloat(getCS(el).marginRight, 0) - scrollbarWidth, \"px\"));\n\n          body._marginChangedForModal.push(el);\n        }); // Adjust <b-navbar-toggler> margin\n\n        /* istanbul ignore next: difficult to test in JSDOM */\n\n        selectAll(SELECTOR_NAVBAR_TOGGLER).forEach(function (el)\n        /* istanbul ignore next */\n        {\n          var actualMargin = getStyle(el, 'marginRight') || '';\n          setAttr(el, 'data-margin-right', actualMargin);\n          setStyle(el, 'marginRight', \"\".concat(toFloat(getCS(el).marginRight, 0) + scrollbarWidth, \"px\"));\n\n          body._marginChangedForModal.push(el);\n        }); // Adjust body padding\n\n        var actualPadding = getStyle(body, 'paddingRight') || '';\n        setAttr(body, 'data-padding-right', actualPadding);\n        setStyle(body, 'paddingRight', \"\".concat(toFloat(getCS(body).paddingRight, 0) + scrollbarWidth, \"px\"));\n      }\n    },\n    resetScrollbar: function resetScrollbar() {\n      var body = document.body;\n\n      if (body._paddingChangedForModal) {\n        // Restore fixed content padding\n        body._paddingChangedForModal.forEach(function (el) {\n          /* istanbul ignore next: difficult to test in JSDOM */\n          if (hasAttr(el, 'data-padding-right')) {\n            setStyle(el, 'paddingRight', getAttr(el, 'data-padding-right') || '');\n            removeAttr(el, 'data-padding-right');\n          }\n        });\n      }\n\n      if (body._marginChangedForModal) {\n        // Restore sticky content and navbar-toggler margin\n        body._marginChangedForModal.forEach(function (el) {\n          /* istanbul ignore next: difficult to test in JSDOM */\n          if (hasAttr(el, 'data-margin-right')) {\n            setStyle(el, 'marginRight', getAttr(el, 'data-margin-right') || '');\n            removeAttr(el, 'data-margin-right');\n          }\n        });\n      }\n\n      body._paddingChangedForModal = null;\n      body._marginChangedForModal = null; // Restore body padding\n\n      if (hasAttr(body, 'data-padding-right')) {\n        setStyle(body, 'paddingRight', getAttr(body, 'data-padding-right') || '');\n        removeAttr(body, 'data-padding-right');\n      }\n    }\n  }\n}); // Create and export our modal manager instance\n\nexport var modalManager = new ModalManager();"]},"metadata":{},"sourceType":"module"}