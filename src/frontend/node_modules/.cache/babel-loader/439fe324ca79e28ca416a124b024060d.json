{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nvar _watch;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { Vue } from '../../vue';\nimport { NAME_COLLAPSE } from '../../constants/components';\nimport { CLASS_NAME_SHOW } from '../../constants/classes';\nimport { IS_BROWSER } from '../../constants/env';\nimport { EVENT_NAME_HIDDEN, EVENT_NAME_HIDE, EVENT_NAME_SHOW, EVENT_NAME_SHOWN, EVENT_OPTIONS_NO_CAPTURE } from '../../constants/events';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_STRING } from '../../constants/props';\nimport { SLOT_NAME_DEFAULT } from '../../constants/slots';\nimport { addClass, hasClass, removeClass, closest, matches, getCS } from '../../utils/dom';\nimport { getRootActionEventName, getRootEventName, eventOnOff } from '../../utils/events';\nimport { makeModelMixin } from '../../utils/model';\nimport { sortKeys } from '../../utils/object';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { idMixin, props as idProps } from '../../mixins/id';\nimport { listenOnRootMixin } from '../../mixins/listen-on-root';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { BVCollapse } from './helpers/bv-collapse'; // --- Constants ---\n\nvar ROOT_ACTION_EVENT_NAME_TOGGLE = getRootActionEventName(NAME_COLLAPSE, 'toggle');\nvar ROOT_ACTION_EVENT_NAME_REQUEST_STATE = getRootActionEventName(NAME_COLLAPSE, 'request-state');\nvar ROOT_EVENT_NAME_ACCORDION = getRootEventName(NAME_COLLAPSE, 'accordion');\nvar ROOT_EVENT_NAME_STATE = getRootEventName(NAME_COLLAPSE, 'state');\nvar ROOT_EVENT_NAME_SYNC_STATE = getRootEventName(NAME_COLLAPSE, 'sync-state');\n\nvar _makeModelMixin = makeModelMixin('visible', {\n  type: PROP_TYPE_BOOLEAN,\n  defaultValue: false\n}),\n    modelMixin = _makeModelMixin.mixin,\n    modelProps = _makeModelMixin.props,\n    MODEL_PROP_NAME = _makeModelMixin.prop,\n    MODEL_EVENT_NAME = _makeModelMixin.event; // --- Props ---\n\n\nexport var props = makePropsConfigurable(sortKeys(_objectSpread(_objectSpread(_objectSpread({}, idProps), modelProps), {}, {\n  // If `true` (and `visible` is `true` on mount), animate initially visible\n  accordion: makeProp(PROP_TYPE_STRING),\n  appear: makeProp(PROP_TYPE_BOOLEAN, false),\n  isNav: makeProp(PROP_TYPE_BOOLEAN, false),\n  tag: makeProp(PROP_TYPE_STRING, 'div')\n})), NAME_COLLAPSE); // --- Main component ---\n// @vue/component\n\nexport var BCollapse = /*#__PURE__*/Vue.extend({\n  name: NAME_COLLAPSE,\n  mixins: [idMixin, modelMixin, normalizeSlotMixin, listenOnRootMixin],\n  props: props,\n  data: function data() {\n    return {\n      show: this[MODEL_PROP_NAME],\n      transitioning: false\n    };\n  },\n  computed: {\n    classObject: function classObject() {\n      var transitioning = this.transitioning;\n      return {\n        'navbar-collapse': this.isNav,\n        collapse: !transitioning,\n        show: this.show && !transitioning\n      };\n    },\n    slotScope: function slotScope() {\n      var _this = this;\n\n      return {\n        visible: this.show,\n        close: function close() {\n          _this.show = false;\n        }\n      };\n    }\n  },\n  watch: (_watch = {}, _defineProperty(_watch, MODEL_PROP_NAME, function (newValue) {\n    if (newValue !== this.show) {\n      this.show = newValue;\n    }\n  }), _defineProperty(_watch, \"show\", function show(newValue, oldValue) {\n    if (newValue !== oldValue) {\n      this.emitState();\n    }\n  }), _watch),\n  created: function created() {\n    this.show = this[MODEL_PROP_NAME];\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.show = this[MODEL_PROP_NAME]; // Listen for toggle events to open/close us\n\n    this.listenOnRoot(ROOT_ACTION_EVENT_NAME_TOGGLE, this.handleToggleEvt); // Listen to other collapses for accordion events\n\n    this.listenOnRoot(ROOT_EVENT_NAME_ACCORDION, this.handleAccordionEvt);\n\n    if (this.isNav) {\n      // Set up handlers\n      this.setWindowEvents(true);\n      this.handleResize();\n    }\n\n    this.$nextTick(function () {\n      _this2.emitState();\n    }); // Listen for \"Sync state\" requests from `v-b-toggle`\n\n    this.listenOnRoot(ROOT_ACTION_EVENT_NAME_REQUEST_STATE, function (id) {\n      if (id === _this2.safeId()) {\n        _this2.$nextTick(_this2.emitSync);\n      }\n    });\n  },\n  updated: function updated() {\n    // Emit a private event every time this component updates to ensure\n    // the toggle button is in sync with the collapse's state\n    // It is emitted regardless if the visible state changes\n    this.emitSync();\n  },\n\n  /* istanbul ignore next */\n  deactivated: function deactivated() {\n    if (this.isNav) {\n      this.setWindowEvents(false);\n    }\n  },\n\n  /* istanbul ignore next */\n  activated: function activated() {\n    if (this.isNav) {\n      this.setWindowEvents(true);\n    }\n\n    this.emitSync();\n  },\n  beforeDestroy: function beforeDestroy() {\n    // Trigger state emit if needed\n    this.show = false;\n\n    if (this.isNav && IS_BROWSER) {\n      this.setWindowEvents(false);\n    }\n  },\n  methods: {\n    setWindowEvents: function setWindowEvents(on) {\n      eventOnOff(on, window, 'resize', this.handleResize, EVENT_OPTIONS_NO_CAPTURE);\n      eventOnOff(on, window, 'orientationchange', this.handleResize, EVENT_OPTIONS_NO_CAPTURE);\n    },\n    toggle: function toggle() {\n      this.show = !this.show;\n    },\n    onEnter: function onEnter() {\n      this.transitioning = true; // This should be moved out so we can add cancellable events\n\n      this.$emit(EVENT_NAME_SHOW);\n    },\n    onAfterEnter: function onAfterEnter() {\n      this.transitioning = false;\n      this.$emit(EVENT_NAME_SHOWN);\n    },\n    onLeave: function onLeave() {\n      this.transitioning = true; // This should be moved out so we can add cancellable events\n\n      this.$emit(EVENT_NAME_HIDE);\n    },\n    onAfterLeave: function onAfterLeave() {\n      this.transitioning = false;\n      this.$emit(EVENT_NAME_HIDDEN);\n    },\n    emitState: function emitState() {\n      var show = this.show,\n          accordion = this.accordion;\n      var id = this.safeId();\n      this.$emit(MODEL_EVENT_NAME, show); // Let `v-b-toggle` know the state of this collapse\n\n      this.emitOnRoot(ROOT_EVENT_NAME_STATE, id, show);\n\n      if (accordion && show) {\n        // Tell the other collapses in this accordion to close\n        this.emitOnRoot(ROOT_EVENT_NAME_ACCORDION, id, accordion);\n      }\n    },\n    emitSync: function emitSync() {\n      // Emit a private event every time this component updates to ensure\n      // the toggle button is in sync with the collapse's state\n      // It is emitted regardless if the visible state changes\n      this.emitOnRoot(ROOT_EVENT_NAME_SYNC_STATE, this.safeId(), this.show);\n    },\n    checkDisplayBlock: function checkDisplayBlock() {\n      // Check to see if the collapse has `display: block !important` set\n      // We can't set `display: none` directly on `this.$el`, as it would\n      // trigger a new transition to start (or cancel a current one)\n      var $el = this.$el;\n      var restore = hasClass($el, CLASS_NAME_SHOW);\n      removeClass($el, CLASS_NAME_SHOW);\n      var isBlock = getCS($el).display === 'block';\n\n      if (restore) {\n        addClass($el, CLASS_NAME_SHOW);\n      }\n\n      return isBlock;\n    },\n    clickHandler: function clickHandler(event) {\n      var el = event.target; // If we are in a nav/navbar, close the collapse when non-disabled link clicked\n\n      /* istanbul ignore next: can't test `getComputedStyle()` in JSDOM */\n\n      if (!this.isNav || !el || getCS(this.$el).display !== 'block') {\n        return;\n      } // Only close the collapse if it is not forced to be `display: block !important`\n\n\n      if ((matches(el, '.nav-link,.dropdown-item') || closest('.nav-link,.dropdown-item', el)) && !this.checkDisplayBlock()) {\n        this.show = false;\n      }\n    },\n    handleToggleEvt: function handleToggleEvt(id) {\n      if (id === this.safeId()) {\n        this.toggle();\n      }\n    },\n    handleAccordionEvt: function handleAccordionEvt(openedId, openAccordion) {\n      var accordion = this.accordion,\n          show = this.show;\n\n      if (!accordion || accordion !== openAccordion) {\n        return;\n      }\n\n      var isThis = openedId === this.safeId(); // Open this collapse if not shown or\n      // close this collapse if shown\n\n      if (isThis && !show || !isThis && show) {\n        this.toggle();\n      }\n    },\n    handleResize: function handleResize() {\n      // Handler for orientation/resize to set collapsed state in nav/navbar\n      this.show = getCS(this.$el).display === 'block';\n    }\n  },\n  render: function render(h) {\n    var appear = this.appear;\n    var $content = h(this.tag, {\n      class: this.classObject,\n      directives: [{\n        name: 'show',\n        value: this.show\n      }],\n      attrs: {\n        id: this.safeId()\n      },\n      on: {\n        click: this.clickHandler\n      }\n    }, this.normalizeSlot(SLOT_NAME_DEFAULT, this.slotScope));\n    return h(BVCollapse, {\n      props: {\n        appear: appear\n      },\n      on: {\n        enter: this.onEnter,\n        afterEnter: this.onAfterEnter,\n        leave: this.onLeave,\n        afterLeave: this.onAfterLeave\n      }\n    }, [$content]);\n  }\n});","map":{"version":3,"sources":["C:/Users/Yago/Documents/Eclipse/Yago/farolshopping/src/frontend/farolshopping/node_modules/bootstrap-vue/esm/components/collapse/collapse.js"],"names":["_watch","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","Vue","NAME_COLLAPSE","CLASS_NAME_SHOW","IS_BROWSER","EVENT_NAME_HIDDEN","EVENT_NAME_HIDE","EVENT_NAME_SHOW","EVENT_NAME_SHOWN","EVENT_OPTIONS_NO_CAPTURE","PROP_TYPE_BOOLEAN","PROP_TYPE_STRING","SLOT_NAME_DEFAULT","addClass","hasClass","removeClass","closest","matches","getCS","getRootActionEventName","getRootEventName","eventOnOff","makeModelMixin","sortKeys","makeProp","makePropsConfigurable","idMixin","props","idProps","listenOnRootMixin","normalizeSlotMixin","BVCollapse","ROOT_ACTION_EVENT_NAME_TOGGLE","ROOT_ACTION_EVENT_NAME_REQUEST_STATE","ROOT_EVENT_NAME_ACCORDION","ROOT_EVENT_NAME_STATE","ROOT_EVENT_NAME_SYNC_STATE","_makeModelMixin","type","defaultValue","modelMixin","mixin","modelProps","MODEL_PROP_NAME","prop","MODEL_EVENT_NAME","event","accordion","appear","isNav","tag","BCollapse","extend","name","mixins","data","show","transitioning","computed","classObject","collapse","slotScope","_this","visible","close","watch","newValue","oldValue","emitState","created","mounted","_this2","listenOnRoot","handleToggleEvt","handleAccordionEvt","setWindowEvents","handleResize","$nextTick","id","safeId","emitSync","updated","deactivated","activated","beforeDestroy","methods","on","window","toggle","onEnter","$emit","onAfterEnter","onLeave","onAfterLeave","emitOnRoot","checkDisplayBlock","$el","restore","isBlock","display","clickHandler","el","openedId","openAccordion","isThis","render","h","$content","class","directives","attrs","click","normalizeSlot","enter","afterEnter","leave","afterLeave"],"mappings":";;;;;;;;AAAA,IAAIA,MAAJ;;AAEA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIG,MAAM,CAACC,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGF,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,CAAd;AAAoD,QAAIC,cAAJ,EAAoBI,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,aAAOJ,MAAM,CAACK,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;AAAiE,KAAjG,CAAV;AAA8GP,IAAAA,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBT,IAAhB,EAAsBG,OAAtB;AAAiC;;AAAC,SAAOH,IAAP;AAAc;;AAErV,SAASU,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;AAAuD,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEf,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAUC,GAAV,EAAe;AAAEC,QAAAA,eAAe,CAACP,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;AAA4C,OAAnG;AAAuG,KAApH,MAA0H,IAAIhB,MAAM,CAACkB,yBAAX,EAAsC;AAAElB,MAAAA,MAAM,CAACmB,gBAAP,CAAwBT,MAAxB,EAAgCV,MAAM,CAACkB,yBAAP,CAAiCJ,MAAjC,CAAhC;AAA4E,KAApH,MAA0H;AAAElB,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAAEhB,QAAAA,MAAM,CAACoB,cAAP,CAAsBV,MAAtB,EAA8BM,GAA9B,EAAmChB,MAAM,CAACK,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,OAApI;AAAwI;AAAE;;AAAC,SAAON,MAAP;AAAgB;;AAEthB,SAASO,eAAT,CAAyBI,GAAzB,EAA8BL,GAA9B,EAAmCM,KAAnC,EAA0C;AAAE,MAAIN,GAAG,IAAIK,GAAX,EAAgB;AAAErB,IAAAA,MAAM,CAACoB,cAAP,CAAsBC,GAAtB,EAA2BL,GAA3B,EAAgC;AAAEM,MAAAA,KAAK,EAAEA,KAAT;AAAgBhB,MAAAA,UAAU,EAAE,IAA5B;AAAkCiB,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEH,IAAAA,GAAG,CAACL,GAAD,CAAH,GAAWM,KAAX;AAAmB;;AAAC,SAAOD,GAAP;AAAa;;AAEjN,SAASI,GAAT,QAAoB,WAApB;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,iBAAT,EAA4BC,eAA5B,EAA6CC,eAA7C,EAA8DC,gBAA9D,EAAgFC,wBAAhF,QAAgH,wBAAhH;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,uBAApD;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,WAA7B,EAA0CC,OAA1C,EAAmDC,OAAnD,EAA4DC,KAA5D,QAAyE,iBAAzE;AACA,SAASC,sBAAT,EAAiCC,gBAAjC,EAAmDC,UAAnD,QAAqE,oBAArE;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,QAAT,EAAmBC,qBAAnB,QAAgD,mBAAhD;AACA,SAASC,OAAT,EAAkBC,KAAK,IAAIC,OAA3B,QAA0C,iBAA1C;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,kBAAT,QAAmC,6BAAnC;AACA,SAASC,UAAT,QAA2B,uBAA3B,C,CAAoD;;AAEpD,IAAIC,6BAA6B,GAAGb,sBAAsB,CAACjB,aAAD,EAAgB,QAAhB,CAA1D;AACA,IAAI+B,oCAAoC,GAAGd,sBAAsB,CAACjB,aAAD,EAAgB,eAAhB,CAAjE;AACA,IAAIgC,yBAAyB,GAAGd,gBAAgB,CAAClB,aAAD,EAAgB,WAAhB,CAAhD;AACA,IAAIiC,qBAAqB,GAAGf,gBAAgB,CAAClB,aAAD,EAAgB,OAAhB,CAA5C;AACA,IAAIkC,0BAA0B,GAAGhB,gBAAgB,CAAClB,aAAD,EAAgB,YAAhB,CAAjD;;AAEA,IAAImC,eAAe,GAAGf,cAAc,CAAC,SAAD,EAAY;AAC9CgB,EAAAA,IAAI,EAAE5B,iBADwC;AAE9C6B,EAAAA,YAAY,EAAE;AAFgC,CAAZ,CAApC;AAAA,IAIIC,UAAU,GAAGH,eAAe,CAACI,KAJjC;AAAA,IAKIC,UAAU,GAAGL,eAAe,CAACV,KALjC;AAAA,IAMIgB,eAAe,GAAGN,eAAe,CAACO,IANtC;AAAA,IAOIC,gBAAgB,GAAGR,eAAe,CAACS,KAPvC,C,CAO8C;;;AAG9C,OAAO,IAAInB,KAAK,GAAGF,qBAAqB,CAACF,QAAQ,CAACtC,aAAa,CAACA,aAAa,CAACA,aAAa,CAAC,EAAD,EAAK2C,OAAL,CAAd,EAA6Bc,UAA7B,CAAd,EAAwD,EAAxD,EAA4D;AACzH;AACAK,EAAAA,SAAS,EAAEvB,QAAQ,CAACb,gBAAD,CAFsG;AAGzHqC,EAAAA,MAAM,EAAExB,QAAQ,CAACd,iBAAD,EAAoB,KAApB,CAHyG;AAIzHuC,EAAAA,KAAK,EAAEzB,QAAQ,CAACd,iBAAD,EAAoB,KAApB,CAJ0G;AAKzHwC,EAAAA,GAAG,EAAE1B,QAAQ,CAACb,gBAAD,EAAmB,KAAnB;AAL4G,CAA5D,CAAd,CAAT,EAMnCT,aANmC,CAAjC,C,CAMc;AACrB;;AAEA,OAAO,IAAIiD,SAAS,GAAG,aAAalD,GAAG,CAACmD,MAAJ,CAAW;AAC7CC,EAAAA,IAAI,EAAEnD,aADuC;AAE7CoD,EAAAA,MAAM,EAAE,CAAC5B,OAAD,EAAUc,UAAV,EAAsBV,kBAAtB,EAA0CD,iBAA1C,CAFqC;AAG7CF,EAAAA,KAAK,EAAEA,KAHsC;AAI7C4B,EAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,WAAO;AACLC,MAAAA,IAAI,EAAE,KAAKb,eAAL,CADD;AAELc,MAAAA,aAAa,EAAE;AAFV,KAAP;AAID,GAT4C;AAU7CC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAE,SAASA,WAAT,GAAuB;AAClC,UAAIF,aAAa,GAAG,KAAKA,aAAzB;AACA,aAAO;AACL,2BAAmB,KAAKR,KADnB;AAELW,QAAAA,QAAQ,EAAE,CAACH,aAFN;AAGLD,QAAAA,IAAI,EAAE,KAAKA,IAAL,IAAa,CAACC;AAHf,OAAP;AAKD,KARO;AASRI,IAAAA,SAAS,EAAE,SAASA,SAAT,GAAqB;AAC9B,UAAIC,KAAK,GAAG,IAAZ;;AAEA,aAAO;AACLC,QAAAA,OAAO,EAAE,KAAKP,IADT;AAELQ,QAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB;AACtBF,UAAAA,KAAK,CAACN,IAAN,GAAa,KAAb;AACD;AAJI,OAAP;AAMD;AAlBO,GAVmC;AA8B7CS,EAAAA,KAAK,GAAG9F,MAAM,GAAG,EAAT,EAAasB,eAAe,CAACtB,MAAD,EAASwE,eAAT,EAA0B,UAAUuB,QAAV,EAAoB;AAChF,QAAIA,QAAQ,KAAK,KAAKV,IAAtB,EAA4B;AAC1B,WAAKA,IAAL,GAAYU,QAAZ;AACD;AACF,GAJmC,CAA5B,EAIJzE,eAAe,CAACtB,MAAD,EAAS,MAAT,EAAiB,SAASqF,IAAT,CAAcU,QAAd,EAAwBC,QAAxB,EAAkC;AACpE,QAAID,QAAQ,KAAKC,QAAjB,EAA2B;AACzB,WAAKC,SAAL;AACD;AACF,GAJkB,CAJX,EAQJjG,MARC,CA9BwC;AAuC7CkG,EAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,SAAKb,IAAL,GAAY,KAAKb,eAAL,CAAZ;AACD,GAzC4C;AA0C7C2B,EAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,QAAIC,MAAM,GAAG,IAAb;;AAEA,SAAKf,IAAL,GAAY,KAAKb,eAAL,CAAZ,CAH0B,CAGS;;AAEnC,SAAK6B,YAAL,CAAkBxC,6BAAlB,EAAiD,KAAKyC,eAAtD,EAL0B,CAK8C;;AAExE,SAAKD,YAAL,CAAkBtC,yBAAlB,EAA6C,KAAKwC,kBAAlD;;AAEA,QAAI,KAAKzB,KAAT,EAAgB;AACd;AACA,WAAK0B,eAAL,CAAqB,IAArB;AACA,WAAKC,YAAL;AACD;;AAED,SAAKC,SAAL,CAAe,YAAY;AACzBN,MAAAA,MAAM,CAACH,SAAP;AACD,KAFD,EAf0B,CAiBtB;;AAEJ,SAAKI,YAAL,CAAkBvC,oCAAlB,EAAwD,UAAU6C,EAAV,EAAc;AACpE,UAAIA,EAAE,KAAKP,MAAM,CAACQ,MAAP,EAAX,EAA4B;AAC1BR,QAAAA,MAAM,CAACM,SAAP,CAAiBN,MAAM,CAACS,QAAxB;AACD;AACF,KAJD;AAKD,GAlE4C;AAmE7CC,EAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B;AACA;AACA;AACA,SAAKD,QAAL;AACD,GAxE4C;;AA0E7C;AACAE,EAAAA,WAAW,EAAE,SAASA,WAAT,GAAuB;AAClC,QAAI,KAAKjC,KAAT,EAAgB;AACd,WAAK0B,eAAL,CAAqB,KAArB;AACD;AACF,GA/E4C;;AAiF7C;AACAQ,EAAAA,SAAS,EAAE,SAASA,SAAT,GAAqB;AAC9B,QAAI,KAAKlC,KAAT,EAAgB;AACd,WAAK0B,eAAL,CAAqB,IAArB;AACD;;AAED,SAAKK,QAAL;AACD,GAxF4C;AAyF7CI,EAAAA,aAAa,EAAE,SAASA,aAAT,GAAyB;AACtC;AACA,SAAK5B,IAAL,GAAY,KAAZ;;AAEA,QAAI,KAAKP,KAAL,IAAc7C,UAAlB,EAA8B;AAC5B,WAAKuE,eAAL,CAAqB,KAArB;AACD;AACF,GAhG4C;AAiG7CU,EAAAA,OAAO,EAAE;AACPV,IAAAA,eAAe,EAAE,SAASA,eAAT,CAAyBW,EAAzB,EAA6B;AAC5CjE,MAAAA,UAAU,CAACiE,EAAD,EAAKC,MAAL,EAAa,QAAb,EAAuB,KAAKX,YAA5B,EAA0CnE,wBAA1C,CAAV;AACAY,MAAAA,UAAU,CAACiE,EAAD,EAAKC,MAAL,EAAa,mBAAb,EAAkC,KAAKX,YAAvC,EAAqDnE,wBAArD,CAAV;AACD,KAJM;AAKP+E,IAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,WAAKhC,IAAL,GAAY,CAAC,KAAKA,IAAlB;AACD,KAPM;AAQPiC,IAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,WAAKhC,aAAL,GAAqB,IAArB,CAD0B,CACC;;AAE3B,WAAKiC,KAAL,CAAWnF,eAAX;AACD,KAZM;AAaPoF,IAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpC,WAAKlC,aAAL,GAAqB,KAArB;AACA,WAAKiC,KAAL,CAAWlF,gBAAX;AACD,KAhBM;AAiBPoF,IAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,WAAKnC,aAAL,GAAqB,IAArB,CAD0B,CACC;;AAE3B,WAAKiC,KAAL,CAAWpF,eAAX;AACD,KArBM;AAsBPuF,IAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpC,WAAKpC,aAAL,GAAqB,KAArB;AACA,WAAKiC,KAAL,CAAWrF,iBAAX;AACD,KAzBM;AA0BP+D,IAAAA,SAAS,EAAE,SAASA,SAAT,GAAqB;AAC9B,UAAIZ,IAAI,GAAG,KAAKA,IAAhB;AAAA,UACIT,SAAS,GAAG,KAAKA,SADrB;AAEA,UAAI+B,EAAE,GAAG,KAAKC,MAAL,EAAT;AACA,WAAKW,KAAL,CAAW7C,gBAAX,EAA6BW,IAA7B,EAJ8B,CAIM;;AAEpC,WAAKsC,UAAL,CAAgB3D,qBAAhB,EAAuC2C,EAAvC,EAA2CtB,IAA3C;;AAEA,UAAIT,SAAS,IAAIS,IAAjB,EAAuB;AACrB;AACA,aAAKsC,UAAL,CAAgB5D,yBAAhB,EAA2C4C,EAA3C,EAA+C/B,SAA/C;AACD;AACF,KAtCM;AAuCPiC,IAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB;AAC5B;AACA;AACA;AACA,WAAKc,UAAL,CAAgB1D,0BAAhB,EAA4C,KAAK2C,MAAL,EAA5C,EAA2D,KAAKvB,IAAhE;AACD,KA5CM;AA6CPuC,IAAAA,iBAAiB,EAAE,SAASA,iBAAT,GAA6B;AAC9C;AACA;AACA;AACA,UAAIC,GAAG,GAAG,KAAKA,GAAf;AACA,UAAIC,OAAO,GAAGnF,QAAQ,CAACkF,GAAD,EAAM7F,eAAN,CAAtB;AACAY,MAAAA,WAAW,CAACiF,GAAD,EAAM7F,eAAN,CAAX;AACA,UAAI+F,OAAO,GAAGhF,KAAK,CAAC8E,GAAD,CAAL,CAAWG,OAAX,KAAuB,OAArC;;AAEA,UAAIF,OAAJ,EAAa;AACXpF,QAAAA,QAAQ,CAACmF,GAAD,EAAM7F,eAAN,CAAR;AACD;;AAED,aAAO+F,OAAP;AACD,KA3DM;AA4DPE,IAAAA,YAAY,EAAE,SAASA,YAAT,CAAsBtD,KAAtB,EAA6B;AACzC,UAAIuD,EAAE,GAAGvD,KAAK,CAAC5D,MAAf,CADyC,CAClB;;AAEvB;;AAEA,UAAI,CAAC,KAAK+D,KAAN,IAAe,CAACoD,EAAhB,IAAsBnF,KAAK,CAAC,KAAK8E,GAAN,CAAL,CAAgBG,OAAhB,KAA4B,OAAtD,EAA+D;AAC7D;AACD,OAPwC,CAOvC;;;AAGF,UAAI,CAAClF,OAAO,CAACoF,EAAD,EAAK,0BAAL,CAAP,IAA2CrF,OAAO,CAAC,0BAAD,EAA6BqF,EAA7B,CAAnD,KAAwF,CAAC,KAAKN,iBAAL,EAA7F,EAAuH;AACrH,aAAKvC,IAAL,GAAY,KAAZ;AACD;AACF,KAzEM;AA0EPiB,IAAAA,eAAe,EAAE,SAASA,eAAT,CAAyBK,EAAzB,EAA6B;AAC5C,UAAIA,EAAE,KAAK,KAAKC,MAAL,EAAX,EAA0B;AACxB,aAAKS,MAAL;AACD;AACF,KA9EM;AA+EPd,IAAAA,kBAAkB,EAAE,SAASA,kBAAT,CAA4B4B,QAA5B,EAAsCC,aAAtC,EAAqD;AACvE,UAAIxD,SAAS,GAAG,KAAKA,SAArB;AAAA,UACIS,IAAI,GAAG,KAAKA,IADhB;;AAGA,UAAI,CAACT,SAAD,IAAcA,SAAS,KAAKwD,aAAhC,EAA+C;AAC7C;AACD;;AAED,UAAIC,MAAM,GAAGF,QAAQ,KAAK,KAAKvB,MAAL,EAA1B,CARuE,CAQ9B;AACzC;;AAEA,UAAIyB,MAAM,IAAI,CAAChD,IAAX,IAAmB,CAACgD,MAAD,IAAWhD,IAAlC,EAAwC;AACtC,aAAKgC,MAAL;AACD;AACF,KA7FM;AA8FPZ,IAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpC;AACA,WAAKpB,IAAL,GAAYtC,KAAK,CAAC,KAAK8E,GAAN,CAAL,CAAgBG,OAAhB,KAA4B,OAAxC;AACD;AAjGM,GAjGoC;AAoM7CM,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC,CAAhB,EAAmB;AACzB,QAAI1D,MAAM,GAAG,KAAKA,MAAlB;AACA,QAAI2D,QAAQ,GAAGD,CAAC,CAAC,KAAKxD,GAAN,EAAW;AACzB0D,MAAAA,KAAK,EAAE,KAAKjD,WADa;AAEzBkD,MAAAA,UAAU,EAAE,CAAC;AACXxD,QAAAA,IAAI,EAAE,MADK;AAEXvD,QAAAA,KAAK,EAAE,KAAK0D;AAFD,OAAD,CAFa;AAMzBsD,MAAAA,KAAK,EAAE;AACLhC,QAAAA,EAAE,EAAE,KAAKC,MAAL;AADC,OANkB;AASzBO,MAAAA,EAAE,EAAE;AACFyB,QAAAA,KAAK,EAAE,KAAKX;AADV;AATqB,KAAX,EAYb,KAAKY,aAAL,CAAmBpG,iBAAnB,EAAsC,KAAKiD,SAA3C,CAZa,CAAhB;AAaA,WAAO6C,CAAC,CAAC3E,UAAD,EAAa;AACnBJ,MAAAA,KAAK,EAAE;AACLqB,QAAAA,MAAM,EAAEA;AADH,OADY;AAInBsC,MAAAA,EAAE,EAAE;AACF2B,QAAAA,KAAK,EAAE,KAAKxB,OADV;AAEFyB,QAAAA,UAAU,EAAE,KAAKvB,YAFf;AAGFwB,QAAAA,KAAK,EAAE,KAAKvB,OAHV;AAIFwB,QAAAA,UAAU,EAAE,KAAKvB;AAJf;AAJe,KAAb,EAUL,CAACc,QAAD,CAVK,CAAR;AAWD;AA9N4C,CAAX,CAA7B","sourcesContent":["var _watch;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Vue } from '../../vue';\nimport { NAME_COLLAPSE } from '../../constants/components';\nimport { CLASS_NAME_SHOW } from '../../constants/classes';\nimport { IS_BROWSER } from '../../constants/env';\nimport { EVENT_NAME_HIDDEN, EVENT_NAME_HIDE, EVENT_NAME_SHOW, EVENT_NAME_SHOWN, EVENT_OPTIONS_NO_CAPTURE } from '../../constants/events';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_STRING } from '../../constants/props';\nimport { SLOT_NAME_DEFAULT } from '../../constants/slots';\nimport { addClass, hasClass, removeClass, closest, matches, getCS } from '../../utils/dom';\nimport { getRootActionEventName, getRootEventName, eventOnOff } from '../../utils/events';\nimport { makeModelMixin } from '../../utils/model';\nimport { sortKeys } from '../../utils/object';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { idMixin, props as idProps } from '../../mixins/id';\nimport { listenOnRootMixin } from '../../mixins/listen-on-root';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { BVCollapse } from './helpers/bv-collapse'; // --- Constants ---\n\nvar ROOT_ACTION_EVENT_NAME_TOGGLE = getRootActionEventName(NAME_COLLAPSE, 'toggle');\nvar ROOT_ACTION_EVENT_NAME_REQUEST_STATE = getRootActionEventName(NAME_COLLAPSE, 'request-state');\nvar ROOT_EVENT_NAME_ACCORDION = getRootEventName(NAME_COLLAPSE, 'accordion');\nvar ROOT_EVENT_NAME_STATE = getRootEventName(NAME_COLLAPSE, 'state');\nvar ROOT_EVENT_NAME_SYNC_STATE = getRootEventName(NAME_COLLAPSE, 'sync-state');\n\nvar _makeModelMixin = makeModelMixin('visible', {\n  type: PROP_TYPE_BOOLEAN,\n  defaultValue: false\n}),\n    modelMixin = _makeModelMixin.mixin,\n    modelProps = _makeModelMixin.props,\n    MODEL_PROP_NAME = _makeModelMixin.prop,\n    MODEL_EVENT_NAME = _makeModelMixin.event; // --- Props ---\n\n\nexport var props = makePropsConfigurable(sortKeys(_objectSpread(_objectSpread(_objectSpread({}, idProps), modelProps), {}, {\n  // If `true` (and `visible` is `true` on mount), animate initially visible\n  accordion: makeProp(PROP_TYPE_STRING),\n  appear: makeProp(PROP_TYPE_BOOLEAN, false),\n  isNav: makeProp(PROP_TYPE_BOOLEAN, false),\n  tag: makeProp(PROP_TYPE_STRING, 'div')\n})), NAME_COLLAPSE); // --- Main component ---\n// @vue/component\n\nexport var BCollapse = /*#__PURE__*/Vue.extend({\n  name: NAME_COLLAPSE,\n  mixins: [idMixin, modelMixin, normalizeSlotMixin, listenOnRootMixin],\n  props: props,\n  data: function data() {\n    return {\n      show: this[MODEL_PROP_NAME],\n      transitioning: false\n    };\n  },\n  computed: {\n    classObject: function classObject() {\n      var transitioning = this.transitioning;\n      return {\n        'navbar-collapse': this.isNav,\n        collapse: !transitioning,\n        show: this.show && !transitioning\n      };\n    },\n    slotScope: function slotScope() {\n      var _this = this;\n\n      return {\n        visible: this.show,\n        close: function close() {\n          _this.show = false;\n        }\n      };\n    }\n  },\n  watch: (_watch = {}, _defineProperty(_watch, MODEL_PROP_NAME, function (newValue) {\n    if (newValue !== this.show) {\n      this.show = newValue;\n    }\n  }), _defineProperty(_watch, \"show\", function show(newValue, oldValue) {\n    if (newValue !== oldValue) {\n      this.emitState();\n    }\n  }), _watch),\n  created: function created() {\n    this.show = this[MODEL_PROP_NAME];\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.show = this[MODEL_PROP_NAME]; // Listen for toggle events to open/close us\n\n    this.listenOnRoot(ROOT_ACTION_EVENT_NAME_TOGGLE, this.handleToggleEvt); // Listen to other collapses for accordion events\n\n    this.listenOnRoot(ROOT_EVENT_NAME_ACCORDION, this.handleAccordionEvt);\n\n    if (this.isNav) {\n      // Set up handlers\n      this.setWindowEvents(true);\n      this.handleResize();\n    }\n\n    this.$nextTick(function () {\n      _this2.emitState();\n    }); // Listen for \"Sync state\" requests from `v-b-toggle`\n\n    this.listenOnRoot(ROOT_ACTION_EVENT_NAME_REQUEST_STATE, function (id) {\n      if (id === _this2.safeId()) {\n        _this2.$nextTick(_this2.emitSync);\n      }\n    });\n  },\n  updated: function updated() {\n    // Emit a private event every time this component updates to ensure\n    // the toggle button is in sync with the collapse's state\n    // It is emitted regardless if the visible state changes\n    this.emitSync();\n  },\n\n  /* istanbul ignore next */\n  deactivated: function deactivated() {\n    if (this.isNav) {\n      this.setWindowEvents(false);\n    }\n  },\n\n  /* istanbul ignore next */\n  activated: function activated() {\n    if (this.isNav) {\n      this.setWindowEvents(true);\n    }\n\n    this.emitSync();\n  },\n  beforeDestroy: function beforeDestroy() {\n    // Trigger state emit if needed\n    this.show = false;\n\n    if (this.isNav && IS_BROWSER) {\n      this.setWindowEvents(false);\n    }\n  },\n  methods: {\n    setWindowEvents: function setWindowEvents(on) {\n      eventOnOff(on, window, 'resize', this.handleResize, EVENT_OPTIONS_NO_CAPTURE);\n      eventOnOff(on, window, 'orientationchange', this.handleResize, EVENT_OPTIONS_NO_CAPTURE);\n    },\n    toggle: function toggle() {\n      this.show = !this.show;\n    },\n    onEnter: function onEnter() {\n      this.transitioning = true; // This should be moved out so we can add cancellable events\n\n      this.$emit(EVENT_NAME_SHOW);\n    },\n    onAfterEnter: function onAfterEnter() {\n      this.transitioning = false;\n      this.$emit(EVENT_NAME_SHOWN);\n    },\n    onLeave: function onLeave() {\n      this.transitioning = true; // This should be moved out so we can add cancellable events\n\n      this.$emit(EVENT_NAME_HIDE);\n    },\n    onAfterLeave: function onAfterLeave() {\n      this.transitioning = false;\n      this.$emit(EVENT_NAME_HIDDEN);\n    },\n    emitState: function emitState() {\n      var show = this.show,\n          accordion = this.accordion;\n      var id = this.safeId();\n      this.$emit(MODEL_EVENT_NAME, show); // Let `v-b-toggle` know the state of this collapse\n\n      this.emitOnRoot(ROOT_EVENT_NAME_STATE, id, show);\n\n      if (accordion && show) {\n        // Tell the other collapses in this accordion to close\n        this.emitOnRoot(ROOT_EVENT_NAME_ACCORDION, id, accordion);\n      }\n    },\n    emitSync: function emitSync() {\n      // Emit a private event every time this component updates to ensure\n      // the toggle button is in sync with the collapse's state\n      // It is emitted regardless if the visible state changes\n      this.emitOnRoot(ROOT_EVENT_NAME_SYNC_STATE, this.safeId(), this.show);\n    },\n    checkDisplayBlock: function checkDisplayBlock() {\n      // Check to see if the collapse has `display: block !important` set\n      // We can't set `display: none` directly on `this.$el`, as it would\n      // trigger a new transition to start (or cancel a current one)\n      var $el = this.$el;\n      var restore = hasClass($el, CLASS_NAME_SHOW);\n      removeClass($el, CLASS_NAME_SHOW);\n      var isBlock = getCS($el).display === 'block';\n\n      if (restore) {\n        addClass($el, CLASS_NAME_SHOW);\n      }\n\n      return isBlock;\n    },\n    clickHandler: function clickHandler(event) {\n      var el = event.target; // If we are in a nav/navbar, close the collapse when non-disabled link clicked\n\n      /* istanbul ignore next: can't test `getComputedStyle()` in JSDOM */\n\n      if (!this.isNav || !el || getCS(this.$el).display !== 'block') {\n        return;\n      } // Only close the collapse if it is not forced to be `display: block !important`\n\n\n      if ((matches(el, '.nav-link,.dropdown-item') || closest('.nav-link,.dropdown-item', el)) && !this.checkDisplayBlock()) {\n        this.show = false;\n      }\n    },\n    handleToggleEvt: function handleToggleEvt(id) {\n      if (id === this.safeId()) {\n        this.toggle();\n      }\n    },\n    handleAccordionEvt: function handleAccordionEvt(openedId, openAccordion) {\n      var accordion = this.accordion,\n          show = this.show;\n\n      if (!accordion || accordion !== openAccordion) {\n        return;\n      }\n\n      var isThis = openedId === this.safeId(); // Open this collapse if not shown or\n      // close this collapse if shown\n\n      if (isThis && !show || !isThis && show) {\n        this.toggle();\n      }\n    },\n    handleResize: function handleResize() {\n      // Handler for orientation/resize to set collapsed state in nav/navbar\n      this.show = getCS(this.$el).display === 'block';\n    }\n  },\n  render: function render(h) {\n    var appear = this.appear;\n    var $content = h(this.tag, {\n      class: this.classObject,\n      directives: [{\n        name: 'show',\n        value: this.show\n      }],\n      attrs: {\n        id: this.safeId()\n      },\n      on: {\n        click: this.clickHandler\n      }\n    }, this.normalizeSlot(SLOT_NAME_DEFAULT, this.slotScope));\n    return h(BVCollapse, {\n      props: {\n        appear: appear\n      },\n      on: {\n        enter: this.onEnter,\n        afterEnter: this.onAfterEnter,\n        leave: this.onLeave,\n        afterLeave: this.onAfterLeave\n      }\n    }, [$content]);\n  }\n});"]},"metadata":{},"sourceType":"module"}