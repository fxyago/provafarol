{"ast":null,"code":"// v-b-hover directive\nimport { IS_BROWSER } from '../../constants/env';\nimport { EVENT_OPTIONS_NO_CAPTURE } from '../../constants/events';\nimport { eventOnOff } from '../../utils/events';\nimport { isFunction } from '../../utils/inspect'; // --- Constants ---\n\nvar PROP = '__BV_hover_handler__';\nvar MOUSEENTER = 'mouseenter';\nvar MOUSELEAVE = 'mouseleave'; // --- Helper methods ---\n\nvar createListener = function createListener(handler) {\n  var listener = function listener(event) {\n    handler(event.type === MOUSEENTER, event);\n  };\n\n  listener.fn = handler;\n  return listener;\n};\n\nvar updateListeners = function updateListeners(on, el, listener) {\n  eventOnOff(on, el, MOUSEENTER, listener, EVENT_OPTIONS_NO_CAPTURE);\n  eventOnOff(on, el, MOUSELEAVE, listener, EVENT_OPTIONS_NO_CAPTURE);\n}; // --- Directive bind/unbind/update handler ---\n\n\nvar directive = function directive(el, _ref) {\n  var _ref$value = _ref.value,\n      handler = _ref$value === void 0 ? null : _ref$value;\n\n  if (IS_BROWSER) {\n    var listener = el[PROP];\n    var hasListener = isFunction(listener);\n    var handlerChanged = !(hasListener && listener.fn === handler);\n\n    if (hasListener && handlerChanged) {\n      updateListeners(false, el, listener);\n      delete el[PROP];\n    }\n\n    if (isFunction(handler) && handlerChanged) {\n      el[PROP] = createListener(handler);\n      updateListeners(true, el, el[PROP]);\n    }\n  }\n}; // VBHover directive\n\n\nexport var VBHover = {\n  bind: directive,\n  componentUpdated: directive,\n  unbind: function unbind(el) {\n    directive(el, {\n      value: null\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Yago/Documents/Eclipse/Yago/farolshopping/src/frontend/farolshopping/node_modules/bootstrap-vue/esm/directives/hover/hover.js"],"names":["IS_BROWSER","EVENT_OPTIONS_NO_CAPTURE","eventOnOff","isFunction","PROP","MOUSEENTER","MOUSELEAVE","createListener","handler","listener","event","type","fn","updateListeners","on","el","directive","_ref","_ref$value","value","hasListener","handlerChanged","VBHover","bind","componentUpdated","unbind"],"mappings":"AAAA;AACA,SAASA,UAAT,QAA2B,qBAA3B;AACA,SAASC,wBAAT,QAAyC,wBAAzC;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,UAAT,QAA2B,qBAA3B,C,CAAkD;;AAElD,IAAIC,IAAI,GAAG,sBAAX;AACA,IAAIC,UAAU,GAAG,YAAjB;AACA,IAAIC,UAAU,GAAG,YAAjB,C,CAA+B;;AAE/B,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,OAAxB,EAAiC;AACpD,MAAIC,QAAQ,GAAG,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACtCF,IAAAA,OAAO,CAACE,KAAK,CAACC,IAAN,KAAeN,UAAhB,EAA4BK,KAA5B,CAAP;AACD,GAFD;;AAIAD,EAAAA,QAAQ,CAACG,EAAT,GAAcJ,OAAd;AACA,SAAOC,QAAP;AACD,CAPD;;AASA,IAAII,eAAe,GAAG,SAASA,eAAT,CAAyBC,EAAzB,EAA6BC,EAA7B,EAAiCN,QAAjC,EAA2C;AAC/DP,EAAAA,UAAU,CAACY,EAAD,EAAKC,EAAL,EAASV,UAAT,EAAqBI,QAArB,EAA+BR,wBAA/B,CAAV;AACAC,EAAAA,UAAU,CAACY,EAAD,EAAKC,EAAL,EAAST,UAAT,EAAqBG,QAArB,EAA+BR,wBAA/B,CAAV;AACD,CAHD,C,CAGG;;;AAGH,IAAIe,SAAS,GAAG,SAASA,SAAT,CAAmBD,EAAnB,EAAuBE,IAAvB,EAA6B;AAC3C,MAAIC,UAAU,GAAGD,IAAI,CAACE,KAAtB;AAAA,MACIX,OAAO,GAAGU,UAAU,KAAK,KAAK,CAApB,GAAwB,IAAxB,GAA+BA,UAD7C;;AAGA,MAAIlB,UAAJ,EAAgB;AACd,QAAIS,QAAQ,GAAGM,EAAE,CAACX,IAAD,CAAjB;AACA,QAAIgB,WAAW,GAAGjB,UAAU,CAACM,QAAD,CAA5B;AACA,QAAIY,cAAc,GAAG,EAAED,WAAW,IAAIX,QAAQ,CAACG,EAAT,KAAgBJ,OAAjC,CAArB;;AAEA,QAAIY,WAAW,IAAIC,cAAnB,EAAmC;AACjCR,MAAAA,eAAe,CAAC,KAAD,EAAQE,EAAR,EAAYN,QAAZ,CAAf;AACA,aAAOM,EAAE,CAACX,IAAD,CAAT;AACD;;AAED,QAAID,UAAU,CAACK,OAAD,CAAV,IAAuBa,cAA3B,EAA2C;AACzCN,MAAAA,EAAE,CAACX,IAAD,CAAF,GAAWG,cAAc,CAACC,OAAD,CAAzB;AACAK,MAAAA,eAAe,CAAC,IAAD,EAAOE,EAAP,EAAWA,EAAE,CAACX,IAAD,CAAb,CAAf;AACD;AACF;AACF,CAnBD,C,CAmBG;;;AAGH,OAAO,IAAIkB,OAAO,GAAG;AACnBC,EAAAA,IAAI,EAAEP,SADa;AAEnBQ,EAAAA,gBAAgB,EAAER,SAFC;AAGnBS,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBV,EAAhB,EAAoB;AAC1BC,IAAAA,SAAS,CAACD,EAAD,EAAK;AACZI,MAAAA,KAAK,EAAE;AADK,KAAL,CAAT;AAGD;AAPkB,CAAd","sourcesContent":["// v-b-hover directive\nimport { IS_BROWSER } from '../../constants/env';\nimport { EVENT_OPTIONS_NO_CAPTURE } from '../../constants/events';\nimport { eventOnOff } from '../../utils/events';\nimport { isFunction } from '../../utils/inspect'; // --- Constants ---\n\nvar PROP = '__BV_hover_handler__';\nvar MOUSEENTER = 'mouseenter';\nvar MOUSELEAVE = 'mouseleave'; // --- Helper methods ---\n\nvar createListener = function createListener(handler) {\n  var listener = function listener(event) {\n    handler(event.type === MOUSEENTER, event);\n  };\n\n  listener.fn = handler;\n  return listener;\n};\n\nvar updateListeners = function updateListeners(on, el, listener) {\n  eventOnOff(on, el, MOUSEENTER, listener, EVENT_OPTIONS_NO_CAPTURE);\n  eventOnOff(on, el, MOUSELEAVE, listener, EVENT_OPTIONS_NO_CAPTURE);\n}; // --- Directive bind/unbind/update handler ---\n\n\nvar directive = function directive(el, _ref) {\n  var _ref$value = _ref.value,\n      handler = _ref$value === void 0 ? null : _ref$value;\n\n  if (IS_BROWSER) {\n    var listener = el[PROP];\n    var hasListener = isFunction(listener);\n    var handlerChanged = !(hasListener && listener.fn === handler);\n\n    if (hasListener && handlerChanged) {\n      updateListeners(false, el, listener);\n      delete el[PROP];\n    }\n\n    if (isFunction(handler) && handlerChanged) {\n      el[PROP] = createListener(handler);\n      updateListeners(true, el, el[PROP]);\n    }\n  }\n}; // VBHover directive\n\n\nexport var VBHover = {\n  bind: directive,\n  componentUpdated: directive,\n  unbind: function unbind(el) {\n    directive(el, {\n      value: null\n    });\n  }\n};"]},"metadata":{},"sourceType":"module"}