{"ast":null,"code":"import { Vue } from '../vue';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_STRING } from '../constants/props';\nimport { attemptFocus, isVisible, matches, requestAF, select } from '../utils/dom';\nimport { makeProp, makePropsConfigurable } from '../utils/props'; // --- Constants ---\n\nvar SELECTOR = 'input, textarea, select'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  autofocus: makeProp(PROP_TYPE_BOOLEAN, false),\n  disabled: makeProp(PROP_TYPE_BOOLEAN, false),\n  form: makeProp(PROP_TYPE_STRING),\n  id: makeProp(PROP_TYPE_STRING),\n  name: makeProp(PROP_TYPE_STRING),\n  required: makeProp(PROP_TYPE_BOOLEAN, false)\n}, 'formControls'); // --- Mixin ---\n// @vue/component\n\nexport var formControlMixin = Vue.extend({\n  props: props,\n  mounted: function mounted() {\n    this.handleAutofocus();\n  },\n\n  /* istanbul ignore next */\n  activated: function activated() {\n    this.handleAutofocus();\n  },\n  methods: {\n    handleAutofocus: function handleAutofocus() {\n      var _this = this;\n\n      this.$nextTick(function () {\n        requestAF(function () {\n          var el = _this.$el;\n\n          if (_this.autofocus && isVisible(el)) {\n            if (!matches(el, SELECTOR)) {\n              el = select(SELECTOR, el);\n            }\n\n            attemptFocus(el);\n          }\n        });\n      });\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/Yago/Documents/Eclipse/Yago/farolshopping/src/frontend/farolshopping/node_modules/bootstrap-vue/esm/mixins/form-control.js"],"names":["Vue","PROP_TYPE_BOOLEAN","PROP_TYPE_STRING","attemptFocus","isVisible","matches","requestAF","select","makeProp","makePropsConfigurable","SELECTOR","props","autofocus","disabled","form","id","name","required","formControlMixin","extend","mounted","handleAutofocus","activated","methods","_this","$nextTick","el","$el"],"mappings":"AAAA,SAASA,GAAT,QAAoB,QAApB;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,oBAApD;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,OAAlC,EAA2CC,SAA3C,EAAsDC,MAAtD,QAAoE,cAApE;AACA,SAASC,QAAT,EAAmBC,qBAAnB,QAAgD,gBAAhD,C,CAAkE;;AAElE,IAAIC,QAAQ,GAAG,yBAAf,C,CAA0C;;AAE1C,OAAO,IAAIC,KAAK,GAAGF,qBAAqB,CAAC;AACvCG,EAAAA,SAAS,EAAEJ,QAAQ,CAACP,iBAAD,EAAoB,KAApB,CADoB;AAEvCY,EAAAA,QAAQ,EAAEL,QAAQ,CAACP,iBAAD,EAAoB,KAApB,CAFqB;AAGvCa,EAAAA,IAAI,EAAEN,QAAQ,CAACN,gBAAD,CAHyB;AAIvCa,EAAAA,EAAE,EAAEP,QAAQ,CAACN,gBAAD,CAJ2B;AAKvCc,EAAAA,IAAI,EAAER,QAAQ,CAACN,gBAAD,CALyB;AAMvCe,EAAAA,QAAQ,EAAET,QAAQ,CAACP,iBAAD,EAAoB,KAApB;AANqB,CAAD,EAOrC,cAPqC,CAAjC,C,CAOa;AACpB;;AAEA,OAAO,IAAIiB,gBAAgB,GAAGlB,GAAG,CAACmB,MAAJ,CAAW;AACvCR,EAAAA,KAAK,EAAEA,KADgC;AAEvCS,EAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,SAAKC,eAAL;AACD,GAJsC;;AAMvC;AACAC,EAAAA,SAAS,EAAE,SAASA,SAAT,GAAqB;AAC9B,SAAKD,eAAL;AACD,GATsC;AAUvCE,EAAAA,OAAO,EAAE;AACPF,IAAAA,eAAe,EAAE,SAASA,eAAT,GAA2B;AAC1C,UAAIG,KAAK,GAAG,IAAZ;;AAEA,WAAKC,SAAL,CAAe,YAAY;AACzBnB,QAAAA,SAAS,CAAC,YAAY;AACpB,cAAIoB,EAAE,GAAGF,KAAK,CAACG,GAAf;;AAEA,cAAIH,KAAK,CAACZ,SAAN,IAAmBR,SAAS,CAACsB,EAAD,CAAhC,EAAsC;AACpC,gBAAI,CAACrB,OAAO,CAACqB,EAAD,EAAKhB,QAAL,CAAZ,EAA4B;AAC1BgB,cAAAA,EAAE,GAAGnB,MAAM,CAACG,QAAD,EAAWgB,EAAX,CAAX;AACD;;AAEDvB,YAAAA,YAAY,CAACuB,EAAD,CAAZ;AACD;AACF,SAVQ,CAAT;AAWD,OAZD;AAaD;AAjBM;AAV8B,CAAX,CAAvB","sourcesContent":["import { Vue } from '../vue';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_STRING } from '../constants/props';\nimport { attemptFocus, isVisible, matches, requestAF, select } from '../utils/dom';\nimport { makeProp, makePropsConfigurable } from '../utils/props'; // --- Constants ---\n\nvar SELECTOR = 'input, textarea, select'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  autofocus: makeProp(PROP_TYPE_BOOLEAN, false),\n  disabled: makeProp(PROP_TYPE_BOOLEAN, false),\n  form: makeProp(PROP_TYPE_STRING),\n  id: makeProp(PROP_TYPE_STRING),\n  name: makeProp(PROP_TYPE_STRING),\n  required: makeProp(PROP_TYPE_BOOLEAN, false)\n}, 'formControls'); // --- Mixin ---\n// @vue/component\n\nexport var formControlMixin = Vue.extend({\n  props: props,\n  mounted: function mounted() {\n    this.handleAutofocus();\n  },\n\n  /* istanbul ignore next */\n  activated: function activated() {\n    this.handleAutofocus();\n  },\n  methods: {\n    handleAutofocus: function handleAutofocus() {\n      var _this = this;\n\n      this.$nextTick(function () {\n        requestAF(function () {\n          var el = _this.$el;\n\n          if (_this.autofocus && isVisible(el)) {\n            if (!matches(el, SELECTOR)) {\n              el = select(SELECTOR, el);\n            }\n\n            attemptFocus(el);\n          }\n        });\n      });\n    }\n  }\n});"]},"metadata":{},"sourceType":"module"}