{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.function.name.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} //\n// Private component used by `b-form-datepicker` and `b-form-timepicker`\n//\n\n\nimport { Vue } from '../../vue';\nimport { NAME_FORM_BUTTON_LABEL_CONTROL } from '../../constants/components';\nimport { PROP_TYPE_ARRAY_OBJECT_STRING, PROP_TYPE_BOOLEAN, PROP_TYPE_STRING } from '../../constants/props';\nimport { SLOT_NAME_BUTTON_CONTENT, SLOT_NAME_DEFAULT } from '../../constants/slots';\nimport { attemptBlur, attemptFocus } from '../../utils/dom';\nimport { stopEvent } from '../../utils/events';\nimport { omit, sortKeys } from '../../utils/object';\nimport { makeProp } from '../../utils/props';\nimport { toString } from '../../utils/string';\nimport { dropdownMixin, props as dropdownProps } from '../../mixins/dropdown';\nimport { props as formControlProps } from '../../mixins/form-control';\nimport { formSizeMixin, props as formSizeProps } from '../../mixins/form-size';\nimport { formStateMixin, props as formStateProps } from '../../mixins/form-state';\nimport { idMixin, props as idProps } from '../../mixins/id';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { VBHover } from '../../directives/hover/hover';\nimport { BIconChevronDown } from '../../icons/icons'; // --- Props ---\n\nexport var props = sortKeys(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, idProps), formSizeProps), formStateProps), omit(dropdownProps, ['disabled'])), omit(formControlProps, ['autofocus'])), {}, {\n  // When `true`, renders a `btn-group` wrapper and visually hides the label\n  buttonOnly: makeProp(PROP_TYPE_BOOLEAN, false),\n  // Applicable in button mode only\n  buttonVariant: makeProp(PROP_TYPE_STRING, 'secondary'),\n  // This is the value shown in the label\n  // Defaults back to `value`\n  formattedValue: makeProp(PROP_TYPE_STRING),\n  // Value placed in `.sr-only` span inside label when value is present\n  labelSelected: makeProp(PROP_TYPE_STRING),\n  lang: makeProp(PROP_TYPE_STRING),\n  // Extra classes to apply to the `dropdown-menu` div\n  menuClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\n  // This is the value placed on the hidden input when no value selected\n  placeholder: makeProp(PROP_TYPE_STRING),\n  readonly: makeProp(PROP_TYPE_BOOLEAN, false),\n  // Tri-state prop: `true`, `false` or `null`\n  rtl: makeProp(PROP_TYPE_BOOLEAN, null),\n  value: makeProp(PROP_TYPE_STRING, '')\n})); // --- Main component ---\n// @vue/component\n\nexport var BVFormBtnLabelControl = /*#__PURE__*/Vue.extend({\n  name: NAME_FORM_BUTTON_LABEL_CONTROL,\n  directives: {\n    'b-hover': VBHover\n  },\n  mixins: [idMixin, formSizeMixin, formStateMixin, dropdownMixin, normalizeSlotMixin],\n  props: props,\n  data: function data() {\n    return {\n      isHovered: false,\n      hasFocus: false\n    };\n  },\n  computed: {\n    idButton: function idButton() {\n      return this.safeId();\n    },\n    idLabel: function idLabel() {\n      return this.safeId('_value_');\n    },\n    idMenu: function idMenu() {\n      return this.safeId('_dialog_');\n    },\n    idWrapper: function idWrapper() {\n      return this.safeId('_outer_');\n    },\n    computedDir: function computedDir() {\n      return this.rtl === true ? 'rtl' : this.rtl === false ? 'ltr' : null;\n    }\n  },\n  methods: {\n    focus: function focus() {\n      if (!this.disabled) {\n        attemptFocus(this.$refs.toggle);\n      }\n    },\n    blur: function blur() {\n      if (!this.disabled) {\n        attemptBlur(this.$refs.toggle);\n      }\n    },\n    setFocus: function setFocus(event) {\n      this.hasFocus = event.type === 'focus';\n    },\n    handleHover: function handleHover(hovered) {\n      this.isHovered = hovered;\n    }\n  },\n  render: function render(h) {\n    var _class;\n\n    var idButton = this.idButton,\n        idLabel = this.idLabel,\n        idMenu = this.idMenu,\n        idWrapper = this.idWrapper,\n        disabled = this.disabled,\n        readonly = this.readonly,\n        required = this.required,\n        name = this.name,\n        state = this.state,\n        visible = this.visible,\n        size = this.size,\n        isHovered = this.isHovered,\n        hasFocus = this.hasFocus,\n        labelSelected = this.labelSelected,\n        buttonVariant = this.buttonVariant,\n        buttonOnly = this.buttonOnly;\n    var value = toString(this.value) || '';\n    var invalid = state === false || required && !value;\n    var btnScope = {\n      isHovered: isHovered,\n      hasFocus: hasFocus,\n      state: state,\n      opened: visible\n    };\n    var $button = h('button', {\n      staticClass: 'btn',\n      class: (_class = {}, _defineProperty(_class, \"btn-\".concat(buttonVariant), buttonOnly), _defineProperty(_class, \"btn-\".concat(size), size), _defineProperty(_class, 'h-auto', !buttonOnly), _defineProperty(_class, 'dropdown-toggle', buttonOnly), _defineProperty(_class, 'dropdown-toggle-no-caret', buttonOnly), _class),\n      attrs: {\n        id: idButton,\n        type: 'button',\n        disabled: disabled,\n        'aria-haspopup': 'dialog',\n        'aria-expanded': visible ? 'true' : 'false',\n        'aria-invalid': invalid ? 'true' : null,\n        'aria-required': required ? 'true' : null\n      },\n      directives: [{\n        name: 'b-hover',\n        value: this.handleHover\n      }],\n      on: {\n        mousedown: this.onMousedown,\n        click: this.toggle,\n        keydown: this.toggle,\n        // Handle ENTER, SPACE and DOWN\n        '!focus': this.setFocus,\n        '!blur': this.setFocus\n      },\n      ref: 'toggle'\n    }, [this.hasNormalizedSlot(SLOT_NAME_BUTTON_CONTENT) ? this.normalizeSlot(SLOT_NAME_BUTTON_CONTENT, btnScope) :\n    /* istanbul ignore next */\n    h(BIconChevronDown, {\n      props: {\n        scale: 1.25\n      }\n    })]); // Hidden input\n\n    var $hidden = h();\n\n    if (name && !disabled) {\n      $hidden = h('input', {\n        attrs: {\n          type: 'hidden',\n          name: name || null,\n          form: this.form || null,\n          value: value\n        }\n      });\n    } // Dropdown content\n\n\n    var $menu = h('div', {\n      staticClass: 'dropdown-menu',\n      class: [this.menuClass, {\n        show: visible,\n        'dropdown-menu-right': this.right\n      }],\n      attrs: {\n        id: idMenu,\n        role: 'dialog',\n        tabindex: '-1',\n        'aria-modal': 'false',\n        'aria-labelledby': idLabel\n      },\n      on: {\n        keydown: this.onKeydown // Handle ESC\n\n      },\n      ref: 'menu'\n    }, [this.normalizeSlot(SLOT_NAME_DEFAULT, {\n      opened: visible\n    })]); // Value label\n\n    var $label = h('label', {\n      class: buttonOnly ? 'sr-only' // Hidden in button only mode\n      : ['form-control', // Mute the text if showing the placeholder\n      {\n        'text-muted': !value\n      }, this.stateClass, this.sizeFormClass],\n      attrs: {\n        id: idLabel,\n        for: idButton,\n        'aria-invalid': invalid ? 'true' : null,\n        'aria-required': required ? 'true' : null\n      },\n      directives: [{\n        name: 'b-hover',\n        value: this.handleHover\n      }],\n      on: {\n        // Disable bubbling of the click event to\n        // prevent menu from closing and re-opening\n        '!click':\n        /* istanbul ignore next */\n        function click(event) {\n          stopEvent(event, {\n            preventDefault: false\n          });\n        }\n      }\n    }, [value ? this.formattedValue || value : this.placeholder || '', // Add the selected label for screen readers when a value is provided\n    value && labelSelected ? h('bdi', {\n      staticClass: 'sr-only'\n    }, labelSelected) : '']); // Return the custom form control wrapper\n\n    return h('div', {\n      staticClass: 'b-form-btn-label-control dropdown',\n      class: [this.directionClass, this.boundaryClass, [{\n        'btn-group': buttonOnly,\n        'form-control': !buttonOnly,\n        focus: hasFocus && !buttonOnly,\n        show: visible,\n        'is-valid': state === true,\n        'is-invalid': state === false\n      }, buttonOnly ? null : this.sizeFormClass]],\n      attrs: {\n        id: idWrapper,\n        role: buttonOnly ? null : 'group',\n        lang: this.lang || null,\n        dir: this.computedDir,\n        'aria-disabled': disabled,\n        'aria-readonly': readonly && !disabled,\n        'aria-labelledby': idLabel,\n        'aria-invalid': state === false || required && !value ? 'true' : null,\n        'aria-required': required ? 'true' : null\n      }\n    }, [$button, $hidden, $menu, $label]);\n  }\n});","map":{"version":3,"sources":["C:/Users/Yago/Documents/Eclipse/Yago/farolshopping/src/frontend/farolshopping/node_modules/bootstrap-vue/esm/components/form-btn-label-control/bv-form-btn-label-control.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","Vue","NAME_FORM_BUTTON_LABEL_CONTROL","PROP_TYPE_ARRAY_OBJECT_STRING","PROP_TYPE_BOOLEAN","PROP_TYPE_STRING","SLOT_NAME_BUTTON_CONTENT","SLOT_NAME_DEFAULT","attemptBlur","attemptFocus","stopEvent","omit","sortKeys","makeProp","toString","dropdownMixin","props","dropdownProps","formControlProps","formSizeMixin","formSizeProps","formStateMixin","formStateProps","idMixin","idProps","normalizeSlotMixin","VBHover","BIconChevronDown","buttonOnly","buttonVariant","formattedValue","labelSelected","lang","menuClass","placeholder","readonly","rtl","BVFormBtnLabelControl","extend","name","directives","mixins","data","isHovered","hasFocus","computed","idButton","safeId","idLabel","idMenu","idWrapper","computedDir","methods","focus","disabled","$refs","toggle","blur","setFocus","event","type","handleHover","hovered","render","h","_class","required","state","visible","size","invalid","btnScope","opened","$button","staticClass","class","concat","attrs","id","on","mousedown","onMousedown","click","keydown","ref","hasNormalizedSlot","normalizeSlot","scale","$hidden","form","$menu","show","right","role","tabindex","onKeydown","$label","stateClass","sizeFormClass","for","preventDefault","directionClass","boundaryClass","dir"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n// Private component used by `b-form-datepicker` and `b-form-timepicker`\n//\nimport { Vue } from '../../vue';\nimport { NAME_FORM_BUTTON_LABEL_CONTROL } from '../../constants/components';\nimport { PROP_TYPE_ARRAY_OBJECT_STRING, PROP_TYPE_BOOLEAN, PROP_TYPE_STRING } from '../../constants/props';\nimport { SLOT_NAME_BUTTON_CONTENT, SLOT_NAME_DEFAULT } from '../../constants/slots';\nimport { attemptBlur, attemptFocus } from '../../utils/dom';\nimport { stopEvent } from '../../utils/events';\nimport { omit, sortKeys } from '../../utils/object';\nimport { makeProp } from '../../utils/props';\nimport { toString } from '../../utils/string';\nimport { dropdownMixin, props as dropdownProps } from '../../mixins/dropdown';\nimport { props as formControlProps } from '../../mixins/form-control';\nimport { formSizeMixin, props as formSizeProps } from '../../mixins/form-size';\nimport { formStateMixin, props as formStateProps } from '../../mixins/form-state';\nimport { idMixin, props as idProps } from '../../mixins/id';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { VBHover } from '../../directives/hover/hover';\nimport { BIconChevronDown } from '../../icons/icons'; // --- Props ---\n\nexport var props = sortKeys(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, idProps), formSizeProps), formStateProps), omit(dropdownProps, ['disabled'])), omit(formControlProps, ['autofocus'])), {}, {\n  // When `true`, renders a `btn-group` wrapper and visually hides the label\n  buttonOnly: makeProp(PROP_TYPE_BOOLEAN, false),\n  // Applicable in button mode only\n  buttonVariant: makeProp(PROP_TYPE_STRING, 'secondary'),\n  // This is the value shown in the label\n  // Defaults back to `value`\n  formattedValue: makeProp(PROP_TYPE_STRING),\n  // Value placed in `.sr-only` span inside label when value is present\n  labelSelected: makeProp(PROP_TYPE_STRING),\n  lang: makeProp(PROP_TYPE_STRING),\n  // Extra classes to apply to the `dropdown-menu` div\n  menuClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\n  // This is the value placed on the hidden input when no value selected\n  placeholder: makeProp(PROP_TYPE_STRING),\n  readonly: makeProp(PROP_TYPE_BOOLEAN, false),\n  // Tri-state prop: `true`, `false` or `null`\n  rtl: makeProp(PROP_TYPE_BOOLEAN, null),\n  value: makeProp(PROP_TYPE_STRING, '')\n})); // --- Main component ---\n// @vue/component\n\nexport var BVFormBtnLabelControl = /*#__PURE__*/Vue.extend({\n  name: NAME_FORM_BUTTON_LABEL_CONTROL,\n  directives: {\n    'b-hover': VBHover\n  },\n  mixins: [idMixin, formSizeMixin, formStateMixin, dropdownMixin, normalizeSlotMixin],\n  props: props,\n  data: function data() {\n    return {\n      isHovered: false,\n      hasFocus: false\n    };\n  },\n  computed: {\n    idButton: function idButton() {\n      return this.safeId();\n    },\n    idLabel: function idLabel() {\n      return this.safeId('_value_');\n    },\n    idMenu: function idMenu() {\n      return this.safeId('_dialog_');\n    },\n    idWrapper: function idWrapper() {\n      return this.safeId('_outer_');\n    },\n    computedDir: function computedDir() {\n      return this.rtl === true ? 'rtl' : this.rtl === false ? 'ltr' : null;\n    }\n  },\n  methods: {\n    focus: function focus() {\n      if (!this.disabled) {\n        attemptFocus(this.$refs.toggle);\n      }\n    },\n    blur: function blur() {\n      if (!this.disabled) {\n        attemptBlur(this.$refs.toggle);\n      }\n    },\n    setFocus: function setFocus(event) {\n      this.hasFocus = event.type === 'focus';\n    },\n    handleHover: function handleHover(hovered) {\n      this.isHovered = hovered;\n    }\n  },\n  render: function render(h) {\n    var _class;\n\n    var idButton = this.idButton,\n        idLabel = this.idLabel,\n        idMenu = this.idMenu,\n        idWrapper = this.idWrapper,\n        disabled = this.disabled,\n        readonly = this.readonly,\n        required = this.required,\n        name = this.name,\n        state = this.state,\n        visible = this.visible,\n        size = this.size,\n        isHovered = this.isHovered,\n        hasFocus = this.hasFocus,\n        labelSelected = this.labelSelected,\n        buttonVariant = this.buttonVariant,\n        buttonOnly = this.buttonOnly;\n    var value = toString(this.value) || '';\n    var invalid = state === false || required && !value;\n    var btnScope = {\n      isHovered: isHovered,\n      hasFocus: hasFocus,\n      state: state,\n      opened: visible\n    };\n    var $button = h('button', {\n      staticClass: 'btn',\n      class: (_class = {}, _defineProperty(_class, \"btn-\".concat(buttonVariant), buttonOnly), _defineProperty(_class, \"btn-\".concat(size), size), _defineProperty(_class, 'h-auto', !buttonOnly), _defineProperty(_class, 'dropdown-toggle', buttonOnly), _defineProperty(_class, 'dropdown-toggle-no-caret', buttonOnly), _class),\n      attrs: {\n        id: idButton,\n        type: 'button',\n        disabled: disabled,\n        'aria-haspopup': 'dialog',\n        'aria-expanded': visible ? 'true' : 'false',\n        'aria-invalid': invalid ? 'true' : null,\n        'aria-required': required ? 'true' : null\n      },\n      directives: [{\n        name: 'b-hover',\n        value: this.handleHover\n      }],\n      on: {\n        mousedown: this.onMousedown,\n        click: this.toggle,\n        keydown: this.toggle,\n        // Handle ENTER, SPACE and DOWN\n        '!focus': this.setFocus,\n        '!blur': this.setFocus\n      },\n      ref: 'toggle'\n    }, [this.hasNormalizedSlot(SLOT_NAME_BUTTON_CONTENT) ? this.normalizeSlot(SLOT_NAME_BUTTON_CONTENT, btnScope) :\n    /* istanbul ignore next */\n    h(BIconChevronDown, {\n      props: {\n        scale: 1.25\n      }\n    })]); // Hidden input\n\n    var $hidden = h();\n\n    if (name && !disabled) {\n      $hidden = h('input', {\n        attrs: {\n          type: 'hidden',\n          name: name || null,\n          form: this.form || null,\n          value: value\n        }\n      });\n    } // Dropdown content\n\n\n    var $menu = h('div', {\n      staticClass: 'dropdown-menu',\n      class: [this.menuClass, {\n        show: visible,\n        'dropdown-menu-right': this.right\n      }],\n      attrs: {\n        id: idMenu,\n        role: 'dialog',\n        tabindex: '-1',\n        'aria-modal': 'false',\n        'aria-labelledby': idLabel\n      },\n      on: {\n        keydown: this.onKeydown // Handle ESC\n\n      },\n      ref: 'menu'\n    }, [this.normalizeSlot(SLOT_NAME_DEFAULT, {\n      opened: visible\n    })]); // Value label\n\n    var $label = h('label', {\n      class: buttonOnly ? 'sr-only' // Hidden in button only mode\n      : ['form-control', // Mute the text if showing the placeholder\n      {\n        'text-muted': !value\n      }, this.stateClass, this.sizeFormClass],\n      attrs: {\n        id: idLabel,\n        for: idButton,\n        'aria-invalid': invalid ? 'true' : null,\n        'aria-required': required ? 'true' : null\n      },\n      directives: [{\n        name: 'b-hover',\n        value: this.handleHover\n      }],\n      on: {\n        // Disable bubbling of the click event to\n        // prevent menu from closing and re-opening\n        '!click':\n        /* istanbul ignore next */\n        function click(event) {\n          stopEvent(event, {\n            preventDefault: false\n          });\n        }\n      }\n    }, [value ? this.formattedValue || value : this.placeholder || '', // Add the selected label for screen readers when a value is provided\n    value && labelSelected ? h('bdi', {\n      staticClass: 'sr-only'\n    }, labelSelected) : '']); // Return the custom form control wrapper\n\n    return h('div', {\n      staticClass: 'b-form-btn-label-control dropdown',\n      class: [this.directionClass, this.boundaryClass, [{\n        'btn-group': buttonOnly,\n        'form-control': !buttonOnly,\n        focus: hasFocus && !buttonOnly,\n        show: visible,\n        'is-valid': state === true,\n        'is-invalid': state === false\n      }, buttonOnly ? null : this.sizeFormClass]],\n      attrs: {\n        id: idWrapper,\n        role: buttonOnly ? null : 'group',\n        lang: this.lang || null,\n        dir: this.computedDir,\n        'aria-disabled': disabled,\n        'aria-readonly': readonly && !disabled,\n        'aria-labelledby': idLabel,\n        'aria-invalid': state === false || required && !value ? 'true' : null,\n        'aria-required': required ? 'true' : null\n      }\n    }, [$button, $hidden, $menu, $label]);\n  }\n});"]},"metadata":{},"sourceType":"module"}