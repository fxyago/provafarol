{"ast":null,"code":"import { Vue } from '../../vue';\nimport { NAME_COLLAPSE, NAME_NAVBAR_TOGGLE } from '../../constants/components';\nimport { EVENT_NAME_CLICK } from '../../constants/events';\nimport { PROP_TYPE_ARRAY_STRING, PROP_TYPE_BOOLEAN, PROP_TYPE_STRING } from '../../constants/props';\nimport { SLOT_NAME_DEFAULT } from '../../constants/slots';\nimport { getRootEventName } from '../../utils/events';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { listenOnRootMixin } from '../../mixins/listen-on-root';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { VBToggle } from '../../directives/toggle/toggle'; // --- Constants ---\n\nvar CLASS_NAME = 'navbar-toggler';\nvar ROOT_EVENT_NAME_STATE = getRootEventName(NAME_COLLAPSE, 'state');\nvar ROOT_EVENT_NAME_SYNC_STATE = getRootEventName(NAME_COLLAPSE, 'sync-state'); // --- Props ---\n\nexport var props = makePropsConfigurable({\n  disabled: makeProp(PROP_TYPE_BOOLEAN, false),\n  label: makeProp(PROP_TYPE_STRING, 'Toggle navigation'),\n  target: makeProp(PROP_TYPE_ARRAY_STRING, undefined, true) // Required\n\n}, NAME_NAVBAR_TOGGLE); // --- Main component ---\n// @vue/component\n\nexport var BNavbarToggle = /*#__PURE__*/Vue.extend({\n  name: NAME_NAVBAR_TOGGLE,\n  directives: {\n    VBToggle: VBToggle\n  },\n  mixins: [listenOnRootMixin, normalizeSlotMixin],\n  props: props,\n  data: function data() {\n    return {\n      toggleState: false\n    };\n  },\n  created: function created() {\n    this.listenOnRoot(ROOT_EVENT_NAME_STATE, this.handleStateEvt);\n    this.listenOnRoot(ROOT_EVENT_NAME_SYNC_STATE, this.handleStateEvt);\n  },\n  methods: {\n    onClick: function onClick(event) {\n      if (!this.disabled) {\n        // Emit courtesy `click` event\n        this.$emit(EVENT_NAME_CLICK, event);\n      }\n    },\n    handleStateEvt: function handleStateEvt(id, state) {\n      // We listen for state events so that we can pass the\n      // boolean expanded state to the default scoped slot\n      if (id === this.target) {\n        this.toggleState = state;\n      }\n    }\n  },\n  render: function render(h) {\n    var disabled = this.disabled;\n    return h('button', {\n      staticClass: CLASS_NAME,\n      class: {\n        disabled: disabled\n      },\n      directives: [{\n        name: 'VBToggle',\n        value: this.target\n      }],\n      attrs: {\n        type: 'button',\n        disabled: disabled,\n        'aria-label': this.label\n      },\n      on: {\n        click: this.onClick\n      }\n    }, [this.normalizeSlot(SLOT_NAME_DEFAULT, {\n      expanded: this.toggleState\n    }) || h('span', {\n      staticClass: \"\".concat(CLASS_NAME, \"-icon\")\n    })]);\n  }\n});","map":{"version":3,"sources":["C:/Users/Yago/Documents/Eclipse/Yago/farolshopping/src/frontend/farolshopping/node_modules/bootstrap-vue/esm/components/navbar/navbar-toggle.js"],"names":["Vue","NAME_COLLAPSE","NAME_NAVBAR_TOGGLE","EVENT_NAME_CLICK","PROP_TYPE_ARRAY_STRING","PROP_TYPE_BOOLEAN","PROP_TYPE_STRING","SLOT_NAME_DEFAULT","getRootEventName","makeProp","makePropsConfigurable","listenOnRootMixin","normalizeSlotMixin","VBToggle","CLASS_NAME","ROOT_EVENT_NAME_STATE","ROOT_EVENT_NAME_SYNC_STATE","props","disabled","label","target","undefined","BNavbarToggle","extend","name","directives","mixins","data","toggleState","created","listenOnRoot","handleStateEvt","methods","onClick","event","$emit","id","state","render","h","staticClass","class","value","attrs","type","on","click","normalizeSlot","expanded","concat"],"mappings":"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","sourcesContent":["import { Vue } from '../../vue';\nimport { NAME_COLLAPSE, NAME_NAVBAR_TOGGLE } from '../../constants/components';\nimport { EVENT_NAME_CLICK } from '../../constants/events';\nimport { PROP_TYPE_ARRAY_STRING, PROP_TYPE_BOOLEAN, PROP_TYPE_STRING } from '../../constants/props';\nimport { SLOT_NAME_DEFAULT } from '../../constants/slots';\nimport { getRootEventName } from '../../utils/events';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { listenOnRootMixin } from '../../mixins/listen-on-root';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { VBToggle } from '../../directives/toggle/toggle'; // --- Constants ---\n\nvar CLASS_NAME = 'navbar-toggler';\nvar ROOT_EVENT_NAME_STATE = getRootEventName(NAME_COLLAPSE, 'state');\nvar ROOT_EVENT_NAME_SYNC_STATE = getRootEventName(NAME_COLLAPSE, 'sync-state'); // --- Props ---\n\nexport var props = makePropsConfigurable({\n  disabled: makeProp(PROP_TYPE_BOOLEAN, false),\n  label: makeProp(PROP_TYPE_STRING, 'Toggle navigation'),\n  target: makeProp(PROP_TYPE_ARRAY_STRING, undefined, true) // Required\n\n}, NAME_NAVBAR_TOGGLE); // --- Main component ---\n// @vue/component\n\nexport var BNavbarToggle = /*#__PURE__*/Vue.extend({\n  name: NAME_NAVBAR_TOGGLE,\n  directives: {\n    VBToggle: VBToggle\n  },\n  mixins: [listenOnRootMixin, normalizeSlotMixin],\n  props: props,\n  data: function data() {\n    return {\n      toggleState: false\n    };\n  },\n  created: function created() {\n    this.listenOnRoot(ROOT_EVENT_NAME_STATE, this.handleStateEvt);\n    this.listenOnRoot(ROOT_EVENT_NAME_SYNC_STATE, this.handleStateEvt);\n  },\n  methods: {\n    onClick: function onClick(event) {\n      if (!this.disabled) {\n        // Emit courtesy `click` event\n        this.$emit(EVENT_NAME_CLICK, event);\n      }\n    },\n    handleStateEvt: function handleStateEvt(id, state) {\n      // We listen for state events so that we can pass the\n      // boolean expanded state to the default scoped slot\n      if (id === this.target) {\n        this.toggleState = state;\n      }\n    }\n  },\n  render: function render(h) {\n    var disabled = this.disabled;\n    return h('button', {\n      staticClass: CLASS_NAME,\n      class: {\n        disabled: disabled\n      },\n      directives: [{\n        name: 'VBToggle',\n        value: this.target\n      }],\n      attrs: {\n        type: 'button',\n        disabled: disabled,\n        'aria-label': this.label\n      },\n      on: {\n        click: this.onClick\n      }\n    }, [this.normalizeSlot(SLOT_NAME_DEFAULT, {\n      expanded: this.toggleState\n    }) || h('span', {\n      staticClass: \"\".concat(CLASS_NAME, \"-icon\")\n    })]);\n  }\n});"]},"metadata":{},"sourceType":"module"}