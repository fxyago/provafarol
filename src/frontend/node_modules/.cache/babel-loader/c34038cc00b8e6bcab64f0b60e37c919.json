{"ast":null,"code":"// Mixin to determine if an event listener has been registered\n// either via `v-on:name` (in the parent) or programmatically\n// via `vm.$on('name', ...)`\n// See: https://github.com/vuejs/vue/issues/10825\nimport { Vue } from '../vue';\nimport { isArray, isUndefined } from '../utils/inspect'; // @vue/component\n\nexport var hasListenerMixin = Vue.extend({\n  methods: {\n    hasListener: function hasListener(name) {\n      // Only includes listeners registered via `v-on:name`\n      var $listeners = this.$listeners || {}; // Includes `v-on:name` and `this.$on('name')` registered listeners\n      // Note this property is not part of the public Vue API, but it is\n      // the only way to determine if a listener was added via `vm.$on`\n\n      var $events = this._events || {}; // Registered listeners in `this._events` are always an array,\n      // but might be zero length\n\n      return !isUndefined($listeners[name]) || isArray($events[name]) && $events[name].length > 0;\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/Yago/Documents/Eclipse/Yago/farolshopping/src/frontend/farolshopping/node_modules/bootstrap-vue/esm/mixins/has-listener.js"],"names":["Vue","isArray","isUndefined","hasListenerMixin","extend","methods","hasListener","name","$listeners","$events","_events","length"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,GAAT,QAAoB,QAApB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,kBAArC,C,CAAyD;;AAEzD,OAAO,IAAIC,gBAAgB,GAAGH,GAAG,CAACI,MAAJ,CAAW;AACvCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,WAAW,EAAE,SAASA,WAAT,CAAqBC,IAArB,EAA2B;AACtC;AACA,UAAIC,UAAU,GAAG,KAAKA,UAAL,IAAmB,EAApC,CAFsC,CAEE;AACxC;AACA;;AAEA,UAAIC,OAAO,GAAG,KAAKC,OAAL,IAAgB,EAA9B,CANsC,CAMJ;AAClC;;AAEA,aAAO,CAACR,WAAW,CAACM,UAAU,CAACD,IAAD,CAAX,CAAZ,IAAkCN,OAAO,CAACQ,OAAO,CAACF,IAAD,CAAR,CAAP,IAA0BE,OAAO,CAACF,IAAD,CAAP,CAAcI,MAAd,GAAuB,CAA1F;AACD;AAXM;AAD8B,CAAX,CAAvB","sourcesContent":["// Mixin to determine if an event listener has been registered\n// either via `v-on:name` (in the parent) or programmatically\n// via `vm.$on('name', ...)`\n// See: https://github.com/vuejs/vue/issues/10825\nimport { Vue } from '../vue';\nimport { isArray, isUndefined } from '../utils/inspect'; // @vue/component\n\nexport var hasListenerMixin = Vue.extend({\n  methods: {\n    hasListener: function hasListener(name) {\n      // Only includes listeners registered via `v-on:name`\n      var $listeners = this.$listeners || {}; // Includes `v-on:name` and `this.$on('name')` registered listeners\n      // Note this property is not part of the public Vue API, but it is\n      // the only way to determine if a listener was added via `vm.$on`\n\n      var $events = this._events || {}; // Registered listeners in `this._events` are always an array,\n      // but might be zero length\n\n      return !isUndefined($listeners[name]) || isArray($events[name]) && $events[name].length > 0;\n    }\n  }\n});"]},"metadata":{},"sourceType":"module"}