{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.string.link.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { Vue } from '../../vue';\nimport { NAME_PAGINATION_NAV } from '../../constants/components';\nimport { IS_BROWSER } from '../../constants/env';\nimport { EVENT_NAME_CHANGE, EVENT_NAME_PAGE_CLICK } from '../../constants/events';\nimport { PROP_TYPE_ARRAY, PROP_TYPE_BOOLEAN, PROP_TYPE_FUNCTION, PROP_TYPE_NUMBER_STRING, PROP_TYPE_STRING } from '../../constants/props';\nimport { BvEvent } from '../../utils/bv-event.class';\nimport { attemptBlur, requestAF } from '../../utils/dom';\nimport { isArray, isUndefined, isObject } from '../../utils/inspect';\nimport { looseEqual } from '../../utils/loose-equal';\nimport { mathMax } from '../../utils/math';\nimport { toInteger } from '../../utils/number';\nimport { omit, sortKeys } from '../../utils/object';\nimport { hasPropFunction, makeProp, makePropsConfigurable, pluckProps } from '../../utils/props';\nimport { computeHref, parseQuery } from '../../utils/router';\nimport { toString } from '../../utils/string';\nimport { warn } from '../../utils/warn';\nimport { paginationMixin, props as paginationProps } from '../../mixins/pagination';\nimport { props as BLinkProps } from '../link/link'; // --- Helper methods ---\n// Sanitize the provided number of pages (converting to a number)\n\nexport var sanitizeNumberOfPages = function sanitizeNumberOfPages(value) {\n  return mathMax(toInteger(value, 0), 1);\n}; // --- Props ---\n\nvar _linkProps = omit(BLinkProps, ['event', 'routerTag']);\n\nvar props = makePropsConfigurable(sortKeys(_objectSpread(_objectSpread(_objectSpread({}, paginationProps), _linkProps), {}, {\n  baseUrl: makeProp(PROP_TYPE_STRING, '/'),\n  linkGen: makeProp(PROP_TYPE_FUNCTION),\n  // Disable auto page number detection if `true`\n  noPageDetect: makeProp(PROP_TYPE_BOOLEAN, false),\n  numberOfPages: makeProp(PROP_TYPE_NUMBER_STRING, 1,\n  /* istanbul ignore next */\n  function (value) {\n    var number = toInteger(value, 0);\n\n    if (number < 1) {\n      warn('Prop \"number-of-pages\" must be a number greater than \"0\"', NAME_PAGINATION_NAV);\n      return false;\n    }\n\n    return true;\n  }),\n  pageGen: makeProp(PROP_TYPE_FUNCTION),\n  // Optional array of page links\n  pages: makeProp(PROP_TYPE_ARRAY),\n  useRouter: makeProp(PROP_TYPE_BOOLEAN, false)\n})), NAME_PAGINATION_NAV); // --- Main component ---\n// @vue/component\n\nexport var BPaginationNav = /*#__PURE__*/Vue.extend({\n  name: NAME_PAGINATION_NAV,\n  // The render function is brought in via the pagination mixin\n  mixins: [paginationMixin],\n  props: props,\n  computed: {\n    // Used by render function to trigger wrapping in '<nav>' element\n    isNav: function isNav() {\n      return true;\n    },\n    computedValue: function computedValue() {\n      // Returns the value prop as a number or `null` if undefined or < 1\n      var value = toInteger(this.value, 0);\n      return value < 1 ? null : value;\n    }\n  },\n  watch: {\n    numberOfPages: function numberOfPages() {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.setNumberOfPages();\n      });\n    },\n    pages: function pages() {\n      var _this2 = this;\n\n      this.$nextTick(function () {\n        _this2.setNumberOfPages();\n      });\n    }\n  },\n  created: function created() {\n    this.setNumberOfPages();\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n\n    if (this.$router) {\n      // We only add the watcher if vue router is detected\n      this.$watch('$route', function () {\n        _this3.$nextTick(function () {\n          requestAF(function () {\n            _this3.guessCurrentPage();\n          });\n        });\n      });\n    }\n  },\n  methods: {\n    setNumberOfPages: function setNumberOfPages() {\n      var _this4 = this;\n\n      if (isArray(this.pages) && this.pages.length > 0) {\n        this.localNumberOfPages = this.pages.length;\n      } else {\n        this.localNumberOfPages = sanitizeNumberOfPages(this.numberOfPages);\n      }\n\n      this.$nextTick(function () {\n        _this4.guessCurrentPage();\n      });\n    },\n    onClick: function onClick(event, pageNumber) {\n      var _this5 = this; // Dont do anything if clicking the current active page\n\n\n      if (pageNumber === this.currentPage) {\n        return;\n      }\n\n      var target = event.currentTarget || event.target; // Emit a user-cancelable `page-click` event\n\n      var clickEvt = new BvEvent(EVENT_NAME_PAGE_CLICK, {\n        cancelable: true,\n        vueTarget: this,\n        target: target\n      });\n      this.$emit(clickEvt.type, clickEvt, pageNumber);\n\n      if (clickEvt.defaultPrevented) {\n        return;\n      } // Update the `v-model`\n      // Done in in requestAF() to allow browser to complete the\n      // native browser click handling of a link\n\n\n      requestAF(function () {\n        _this5.currentPage = pageNumber;\n\n        _this5.$emit(EVENT_NAME_CHANGE, pageNumber);\n      }); // Emulate native link click page reloading behaviour by blurring the\n      // paginator and returning focus to the document\n      // Done in a `nextTick()` to ensure rendering complete\n\n      this.$nextTick(function () {\n        attemptBlur(target);\n      });\n    },\n    getPageInfo: function getPageInfo(pageNumber) {\n      if (!isArray(this.pages) || this.pages.length === 0 || isUndefined(this.pages[pageNumber - 1])) {\n        var link = \"\".concat(this.baseUrl).concat(pageNumber);\n        return {\n          link: this.useRouter ? {\n            path: link\n          } : link,\n          text: toString(pageNumber)\n        };\n      }\n\n      var info = this.pages[pageNumber - 1];\n\n      if (isObject(info)) {\n        var _link = info.link;\n        return {\n          // Normalize link for router use\n          link: isObject(_link) ? _link : this.useRouter ? {\n            path: _link\n          } : _link,\n          // Make sure text has a value\n          text: toString(info.text || pageNumber)\n        };\n      } else {\n        return {\n          link: toString(info),\n          text: toString(pageNumber)\n        };\n      }\n    },\n    makePage: function makePage(pageNumber) {\n      var pageGen = this.pageGen;\n      var info = this.getPageInfo(pageNumber);\n\n      if (hasPropFunction(pageGen)) {\n        return pageGen(pageNumber, info);\n      }\n\n      return info.text;\n    },\n    makeLink: function makeLink(pageNumber) {\n      var linkGen = this.linkGen;\n      var info = this.getPageInfo(pageNumber);\n\n      if (hasPropFunction(linkGen)) {\n        return linkGen(pageNumber, info);\n      }\n\n      return info.link;\n    },\n    linkProps: function linkProps(pageNumber) {\n      var props = pluckProps(_linkProps, this);\n      var link = this.makeLink(pageNumber);\n\n      if (this.useRouter || isObject(link)) {\n        props.to = link;\n      } else {\n        props.href = link;\n      }\n\n      return props;\n    },\n    resolveLink: function resolveLink() {\n      var to = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ''; // Given a to (or href string), convert to normalized route-like structure\n      // Works only client side!\n\n      var link;\n\n      try {\n        // Convert the `to` to a HREF via a temporary `a` tag\n        link = document.createElement('a');\n        link.href = computeHref({\n          to: to\n        }, 'a', '/', '/'); // We need to add the anchor to the document to make sure the\n        // `pathname` is correctly detected in any browser (i.e. IE)\n\n        document.body.appendChild(link); // Once href is assigned, the link will be normalized to the full URL bits\n\n        var _link2 = link,\n            pathname = _link2.pathname,\n            hash = _link2.hash,\n            search = _link2.search; // Remove link from document\n\n        document.body.removeChild(link); // Return the location in a route-like object\n\n        return {\n          path: pathname,\n          hash: hash,\n          query: parseQuery(search)\n        };\n      } catch (e) {\n        /* istanbul ignore next */\n        try {\n          link && link.parentNode && link.parentNode.removeChild(link);\n        } catch (_unused) {}\n        /* istanbul ignore next */\n\n\n        return {};\n      }\n    },\n    resolveRoute: function resolveRoute() {\n      var to = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ''; // Given a to (or href string), convert to normalized route location structure\n      // Works only when router available!\n\n      try {\n        var route = this.$router.resolve(to, this.$route).route;\n        return {\n          path: route.path,\n          hash: route.hash,\n          query: route.query\n        };\n      } catch (e) {\n        /* istanbul ignore next */\n        return {};\n      }\n    },\n    guessCurrentPage: function guessCurrentPage() {\n      var $router = this.$router,\n          $route = this.$route;\n      var guess = this.computedValue; // This section only occurs if we are client side, or server-side with `$router`\n\n      if (!this.noPageDetect && !guess && (IS_BROWSER || !IS_BROWSER && $router)) {\n        // Current route (if router available)\n        var currentRoute = $router && $route ? {\n          path: $route.path,\n          hash: $route.hash,\n          query: $route.query\n        } : {}; // Current page full HREF (if client side)\n        // Can't be done as a computed prop!\n\n        var loc = IS_BROWSER ? window.location || document.location : null;\n        var currentLink = loc ? {\n          path: loc.pathname,\n          hash: loc.hash,\n          query: parseQuery(loc.search)\n        } :\n        /* istanbul ignore next */\n        {}; // Loop through the possible pages looking for a match until found\n\n        for (var pageNumber = 1; !guess && pageNumber <= this.localNumberOfPages; pageNumber++) {\n          var to = this.makeLink(pageNumber);\n\n          if ($router && (isObject(to) || this.useRouter)) {\n            // Resolve the page via the `$router`\n            guess = looseEqual(this.resolveRoute(to), currentRoute) ? pageNumber : null;\n          } else if (IS_BROWSER) {\n            // If no `$router` available (or `!this.useRouter` when `to` is a string)\n            // we compare using parsed URIs\n            guess = looseEqual(this.resolveLink(to), currentLink) ? pageNumber : null;\n          } else {\n            // Probably SSR, but no `$router` so we can't guess,\n            // so lets break out of the loop early\n\n            /* istanbul ignore next */\n            guess = -1;\n          }\n        }\n      } // We set `currentPage` to `0` to trigger an `$emit('input', null)`\n      // As the default for `currentPage` is `-1` when no value is specified\n      // Valid page numbers are greater than `0`\n\n\n      this.currentPage = guess > 0 ? guess : 0;\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/Yago/Documents/Eclipse/Yago/farolshopping/src/frontend/farolshopping/node_modules/bootstrap-vue/esm/components/pagination-nav/pagination-nav.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","Vue","NAME_PAGINATION_NAV","IS_BROWSER","EVENT_NAME_CHANGE","EVENT_NAME_PAGE_CLICK","PROP_TYPE_ARRAY","PROP_TYPE_BOOLEAN","PROP_TYPE_FUNCTION","PROP_TYPE_NUMBER_STRING","PROP_TYPE_STRING","BvEvent","attemptBlur","requestAF","isArray","isUndefined","isObject","looseEqual","mathMax","toInteger","omit","sortKeys","hasPropFunction","makeProp","makePropsConfigurable","pluckProps","computeHref","parseQuery","toString","warn","paginationMixin","props","paginationProps","BLinkProps","sanitizeNumberOfPages","_linkProps","baseUrl","linkGen","noPageDetect","numberOfPages","number","pageGen","pages","useRouter","BPaginationNav","extend","name","mixins","computed","isNav","computedValue","watch","_this","$nextTick","setNumberOfPages","_this2","created","mounted","_this3","$router","$watch","guessCurrentPage","methods","_this4","localNumberOfPages","onClick","event","pageNumber","_this5","currentPage","currentTarget","clickEvt","cancelable","vueTarget","$emit","type","defaultPrevented","getPageInfo","link","concat","path","text","info","_link","makePage","makeLink","linkProps","to","href","resolveLink","undefined","document","createElement","body","appendChild","_link2","pathname","hash","search","removeChild","query","e","parentNode","_unused","resolveRoute","route","resolve","$route","guess","currentRoute","loc","window","location","currentLink"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Vue } from '../../vue';\nimport { NAME_PAGINATION_NAV } from '../../constants/components';\nimport { IS_BROWSER } from '../../constants/env';\nimport { EVENT_NAME_CHANGE, EVENT_NAME_PAGE_CLICK } from '../../constants/events';\nimport { PROP_TYPE_ARRAY, PROP_TYPE_BOOLEAN, PROP_TYPE_FUNCTION, PROP_TYPE_NUMBER_STRING, PROP_TYPE_STRING } from '../../constants/props';\nimport { BvEvent } from '../../utils/bv-event.class';\nimport { attemptBlur, requestAF } from '../../utils/dom';\nimport { isArray, isUndefined, isObject } from '../../utils/inspect';\nimport { looseEqual } from '../../utils/loose-equal';\nimport { mathMax } from '../../utils/math';\nimport { toInteger } from '../../utils/number';\nimport { omit, sortKeys } from '../../utils/object';\nimport { hasPropFunction, makeProp, makePropsConfigurable, pluckProps } from '../../utils/props';\nimport { computeHref, parseQuery } from '../../utils/router';\nimport { toString } from '../../utils/string';\nimport { warn } from '../../utils/warn';\nimport { paginationMixin, props as paginationProps } from '../../mixins/pagination';\nimport { props as BLinkProps } from '../link/link'; // --- Helper methods ---\n// Sanitize the provided number of pages (converting to a number)\n\nexport var sanitizeNumberOfPages = function sanitizeNumberOfPages(value) {\n  return mathMax(toInteger(value, 0), 1);\n}; // --- Props ---\n\nvar _linkProps = omit(BLinkProps, ['event', 'routerTag']);\n\nvar props = makePropsConfigurable(sortKeys(_objectSpread(_objectSpread(_objectSpread({}, paginationProps), _linkProps), {}, {\n  baseUrl: makeProp(PROP_TYPE_STRING, '/'),\n  linkGen: makeProp(PROP_TYPE_FUNCTION),\n  // Disable auto page number detection if `true`\n  noPageDetect: makeProp(PROP_TYPE_BOOLEAN, false),\n  numberOfPages: makeProp(PROP_TYPE_NUMBER_STRING, 1,\n  /* istanbul ignore next */\n  function (value) {\n    var number = toInteger(value, 0);\n\n    if (number < 1) {\n      warn('Prop \"number-of-pages\" must be a number greater than \"0\"', NAME_PAGINATION_NAV);\n      return false;\n    }\n\n    return true;\n  }),\n  pageGen: makeProp(PROP_TYPE_FUNCTION),\n  // Optional array of page links\n  pages: makeProp(PROP_TYPE_ARRAY),\n  useRouter: makeProp(PROP_TYPE_BOOLEAN, false)\n})), NAME_PAGINATION_NAV); // --- Main component ---\n// @vue/component\n\nexport var BPaginationNav = /*#__PURE__*/Vue.extend({\n  name: NAME_PAGINATION_NAV,\n  // The render function is brought in via the pagination mixin\n  mixins: [paginationMixin],\n  props: props,\n  computed: {\n    // Used by render function to trigger wrapping in '<nav>' element\n    isNav: function isNav() {\n      return true;\n    },\n    computedValue: function computedValue() {\n      // Returns the value prop as a number or `null` if undefined or < 1\n      var value = toInteger(this.value, 0);\n      return value < 1 ? null : value;\n    }\n  },\n  watch: {\n    numberOfPages: function numberOfPages() {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.setNumberOfPages();\n      });\n    },\n    pages: function pages() {\n      var _this2 = this;\n\n      this.$nextTick(function () {\n        _this2.setNumberOfPages();\n      });\n    }\n  },\n  created: function created() {\n    this.setNumberOfPages();\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n\n    if (this.$router) {\n      // We only add the watcher if vue router is detected\n      this.$watch('$route', function () {\n        _this3.$nextTick(function () {\n          requestAF(function () {\n            _this3.guessCurrentPage();\n          });\n        });\n      });\n    }\n  },\n  methods: {\n    setNumberOfPages: function setNumberOfPages() {\n      var _this4 = this;\n\n      if (isArray(this.pages) && this.pages.length > 0) {\n        this.localNumberOfPages = this.pages.length;\n      } else {\n        this.localNumberOfPages = sanitizeNumberOfPages(this.numberOfPages);\n      }\n\n      this.$nextTick(function () {\n        _this4.guessCurrentPage();\n      });\n    },\n    onClick: function onClick(event, pageNumber) {\n      var _this5 = this;\n\n      // Dont do anything if clicking the current active page\n      if (pageNumber === this.currentPage) {\n        return;\n      }\n\n      var target = event.currentTarget || event.target; // Emit a user-cancelable `page-click` event\n\n      var clickEvt = new BvEvent(EVENT_NAME_PAGE_CLICK, {\n        cancelable: true,\n        vueTarget: this,\n        target: target\n      });\n      this.$emit(clickEvt.type, clickEvt, pageNumber);\n\n      if (clickEvt.defaultPrevented) {\n        return;\n      } // Update the `v-model`\n      // Done in in requestAF() to allow browser to complete the\n      // native browser click handling of a link\n\n\n      requestAF(function () {\n        _this5.currentPage = pageNumber;\n\n        _this5.$emit(EVENT_NAME_CHANGE, pageNumber);\n      }); // Emulate native link click page reloading behaviour by blurring the\n      // paginator and returning focus to the document\n      // Done in a `nextTick()` to ensure rendering complete\n\n      this.$nextTick(function () {\n        attemptBlur(target);\n      });\n    },\n    getPageInfo: function getPageInfo(pageNumber) {\n      if (!isArray(this.pages) || this.pages.length === 0 || isUndefined(this.pages[pageNumber - 1])) {\n        var link = \"\".concat(this.baseUrl).concat(pageNumber);\n        return {\n          link: this.useRouter ? {\n            path: link\n          } : link,\n          text: toString(pageNumber)\n        };\n      }\n\n      var info = this.pages[pageNumber - 1];\n\n      if (isObject(info)) {\n        var _link = info.link;\n        return {\n          // Normalize link for router use\n          link: isObject(_link) ? _link : this.useRouter ? {\n            path: _link\n          } : _link,\n          // Make sure text has a value\n          text: toString(info.text || pageNumber)\n        };\n      } else {\n        return {\n          link: toString(info),\n          text: toString(pageNumber)\n        };\n      }\n    },\n    makePage: function makePage(pageNumber) {\n      var pageGen = this.pageGen;\n      var info = this.getPageInfo(pageNumber);\n\n      if (hasPropFunction(pageGen)) {\n        return pageGen(pageNumber, info);\n      }\n\n      return info.text;\n    },\n    makeLink: function makeLink(pageNumber) {\n      var linkGen = this.linkGen;\n      var info = this.getPageInfo(pageNumber);\n\n      if (hasPropFunction(linkGen)) {\n        return linkGen(pageNumber, info);\n      }\n\n      return info.link;\n    },\n    linkProps: function linkProps(pageNumber) {\n      var props = pluckProps(_linkProps, this);\n      var link = this.makeLink(pageNumber);\n\n      if (this.useRouter || isObject(link)) {\n        props.to = link;\n      } else {\n        props.href = link;\n      }\n\n      return props;\n    },\n    resolveLink: function resolveLink() {\n      var to = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      // Given a to (or href string), convert to normalized route-like structure\n      // Works only client side!\n      var link;\n\n      try {\n        // Convert the `to` to a HREF via a temporary `a` tag\n        link = document.createElement('a');\n        link.href = computeHref({\n          to: to\n        }, 'a', '/', '/'); // We need to add the anchor to the document to make sure the\n        // `pathname` is correctly detected in any browser (i.e. IE)\n\n        document.body.appendChild(link); // Once href is assigned, the link will be normalized to the full URL bits\n\n        var _link2 = link,\n            pathname = _link2.pathname,\n            hash = _link2.hash,\n            search = _link2.search; // Remove link from document\n\n        document.body.removeChild(link); // Return the location in a route-like object\n\n        return {\n          path: pathname,\n          hash: hash,\n          query: parseQuery(search)\n        };\n      } catch (e) {\n        /* istanbul ignore next */\n        try {\n          link && link.parentNode && link.parentNode.removeChild(link);\n        } catch (_unused) {}\n        /* istanbul ignore next */\n\n\n        return {};\n      }\n    },\n    resolveRoute: function resolveRoute() {\n      var to = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n      // Given a to (or href string), convert to normalized route location structure\n      // Works only when router available!\n      try {\n        var route = this.$router.resolve(to, this.$route).route;\n        return {\n          path: route.path,\n          hash: route.hash,\n          query: route.query\n        };\n      } catch (e) {\n        /* istanbul ignore next */\n        return {};\n      }\n    },\n    guessCurrentPage: function guessCurrentPage() {\n      var $router = this.$router,\n          $route = this.$route;\n      var guess = this.computedValue; // This section only occurs if we are client side, or server-side with `$router`\n\n      if (!this.noPageDetect && !guess && (IS_BROWSER || !IS_BROWSER && $router)) {\n        // Current route (if router available)\n        var currentRoute = $router && $route ? {\n          path: $route.path,\n          hash: $route.hash,\n          query: $route.query\n        } : {}; // Current page full HREF (if client side)\n        // Can't be done as a computed prop!\n\n        var loc = IS_BROWSER ? window.location || document.location : null;\n        var currentLink = loc ? {\n          path: loc.pathname,\n          hash: loc.hash,\n          query: parseQuery(loc.search)\n        } :\n        /* istanbul ignore next */\n        {}; // Loop through the possible pages looking for a match until found\n\n        for (var pageNumber = 1; !guess && pageNumber <= this.localNumberOfPages; pageNumber++) {\n          var to = this.makeLink(pageNumber);\n\n          if ($router && (isObject(to) || this.useRouter)) {\n            // Resolve the page via the `$router`\n            guess = looseEqual(this.resolveRoute(to), currentRoute) ? pageNumber : null;\n          } else if (IS_BROWSER) {\n            // If no `$router` available (or `!this.useRouter` when `to` is a string)\n            // we compare using parsed URIs\n            guess = looseEqual(this.resolveLink(to), currentLink) ? pageNumber : null;\n          } else {\n            // Probably SSR, but no `$router` so we can't guess,\n            // so lets break out of the loop early\n\n            /* istanbul ignore next */\n            guess = -1;\n          }\n        }\n      } // We set `currentPage` to `0` to trigger an `$emit('input', null)`\n      // As the default for `currentPage` is `-1` when no value is specified\n      // Valid page numbers are greater than `0`\n\n\n      this.currentPage = guess > 0 ? guess : 0;\n    }\n  }\n});"]},"metadata":{},"sourceType":"module"}