{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nimport { Vue } from '../../../vue';\nimport { NAME_TABLE } from '../../../constants/components';\nimport { EVENT_NAME_FILTERED } from '../../../constants/events';\nimport { PROP_TYPE_REG_EXP, PROP_TYPE_ARRAY_OBJECT_STRING, PROP_TYPE_FUNCTION, PROP_TYPE_ARRAY, PROP_TYPE_NUMBER_STRING } from '../../../constants/props';\nimport { RX_DIGITS, RX_SPACES } from '../../../constants/regex';\nimport { concat } from '../../../utils/array';\nimport { cloneDeep } from '../../../utils/clone-deep';\nimport { identity } from '../../../utils/identity';\nimport { isFunction, isString, isRegExp } from '../../../utils/inspect';\nimport { looseEqual } from '../../../utils/loose-equal';\nimport { toInteger } from '../../../utils/number';\nimport { hasPropFunction, makeProp } from '../../../utils/props';\nimport { escapeRegExp } from '../../../utils/string';\nimport { warn } from '../../../utils/warn';\nimport { stringifyRecordValues } from './stringify-record-values'; // --- Constants ---\n\nvar DEBOUNCE_DEPRECATED_MSG = 'Prop \"filter-debounce\" is deprecated. Use the debounce feature of \"<b-form-input>\" instead.'; // --- Props ---\n\nexport var props = {\n  filter: makeProp([].concat(_toConsumableArray(PROP_TYPE_ARRAY_OBJECT_STRING), [PROP_TYPE_REG_EXP])),\n  filterDebounce: makeProp(PROP_TYPE_NUMBER_STRING, 0, function (value) {\n    return RX_DIGITS.test(String(value));\n  }),\n  filterFunction: makeProp(PROP_TYPE_FUNCTION),\n  filterIgnoredFields: makeProp(PROP_TYPE_ARRAY, []),\n  filterIncludedFields: makeProp(PROP_TYPE_ARRAY, [])\n}; // --- Mixin ---\n// @vue/component\n\nexport var filteringMixin = Vue.extend({\n  props: props,\n  data: function data() {\n    return {\n      // Flag for displaying which empty slot to show and some event triggering\n      isFiltered: false,\n      // Where we store the copy of the filter criteria after debouncing\n      // We pre-set it with the sanitized filter value\n      localFilter: this.filterSanitize(this.filter)\n    };\n  },\n  computed: {\n    computedFilterIgnored: function computedFilterIgnored() {\n      return concat(this.filterIgnoredFields || []).filter(identity);\n    },\n    computedFilterIncluded: function computedFilterIncluded() {\n      return concat(this.filterIncludedFields || []).filter(identity);\n    },\n    computedFilterDebounce: function computedFilterDebounce() {\n      var ms = toInteger(this.filterDebounce, 0);\n      /* istanbul ignore next */\n\n      if (ms > 0) {\n        warn(DEBOUNCE_DEPRECATED_MSG, NAME_TABLE);\n      }\n\n      return ms;\n    },\n    localFiltering: function localFiltering() {\n      return this.hasProvider ? !!this.noProviderFiltering : true;\n    },\n    // For watching changes to `filteredItems` vs `localItems`\n    filteredCheck: function filteredCheck() {\n      var filteredItems = this.filteredItems,\n          localItems = this.localItems,\n          localFilter = this.localFilter;\n      return {\n        filteredItems: filteredItems,\n        localItems: localItems,\n        localFilter: localFilter\n      };\n    },\n    // Sanitized/normalize filter-function prop\n    localFilterFn: function localFilterFn() {\n      // Return `null` to signal to use internal filter function\n      var filterFunction = this.filterFunction;\n      return hasPropFunction(filterFunction) ? filterFunction : null;\n    },\n    // Returns the records in `localItems` that match the filter criteria\n    // Returns the original `localItems` array if not sorting\n    filteredItems: function filteredItems() {\n      // Note the criteria is debounced and sanitized\n      var items = this.localItems,\n          criteria = this.localFilter; // Resolve the filtering function, when requested\n      // We prefer the provided filtering function and fallback to the internal one\n      // When no filtering criteria is specified the filtering factories will return `null`\n\n      var filterFn = this.localFiltering ? this.filterFnFactory(this.localFilterFn, criteria) || this.defaultFilterFnFactory(criteria) : null; // We only do local filtering when requested and there are records to filter\n\n      return filterFn && items.length > 0 ? items.filter(filterFn) : items;\n    }\n  },\n  watch: {\n    // Watch for debounce being set to 0\n    computedFilterDebounce: function computedFilterDebounce(newValue) {\n      if (!newValue && this.$_filterTimer) {\n        this.clearFilterTimer();\n        this.localFilter = this.filterSanitize(this.filter);\n      }\n    },\n    // Watch for changes to the filter criteria, and debounce if necessary\n    filter: {\n      // We need a deep watcher in case the user passes\n      // an object when using `filter-function`\n      deep: true,\n      handler: function handler(newCriteria) {\n        var _this = this;\n\n        var timeout = this.computedFilterDebounce;\n        this.clearFilterTimer();\n\n        if (timeout && timeout > 0) {\n          // If we have a debounce time, delay the update of `localFilter`\n          this.$_filterTimer = setTimeout(function () {\n            _this.localFilter = _this.filterSanitize(newCriteria);\n          }, timeout);\n        } else {\n          // Otherwise, immediately update `localFilter` with `newFilter` value\n          this.localFilter = this.filterSanitize(newCriteria);\n        }\n      }\n    },\n    // Watch for changes to the filter criteria and filtered items vs `localItems`\n    // Set visual state and emit events as required\n    filteredCheck: function filteredCheck(_ref) {\n      var filteredItems = _ref.filteredItems,\n          localFilter = _ref.localFilter; // Determine if the dataset is filtered or not\n\n      var isFiltered = false;\n\n      if (!localFilter) {\n        // If filter criteria is falsey\n        isFiltered = false;\n      } else if (looseEqual(localFilter, []) || looseEqual(localFilter, {})) {\n        // If filter criteria is an empty array or object\n        isFiltered = false;\n      } else if (localFilter) {\n        // If filter criteria is truthy\n        isFiltered = true;\n      }\n\n      if (isFiltered) {\n        this.$emit(EVENT_NAME_FILTERED, filteredItems, filteredItems.length);\n      }\n\n      this.isFiltered = isFiltered;\n    },\n    isFiltered: function isFiltered(newValue, oldValue) {\n      if (newValue === false && oldValue === true) {\n        // We need to emit a filtered event if `isFiltered` transitions from `true` to\n        // `false` so that users can update their pagination controls\n        var localItems = this.localItems;\n        this.$emit(EVENT_NAME_FILTERED, localItems, localItems.length);\n      }\n    }\n  },\n  created: function created() {\n    var _this2 = this; // Create private non-reactive props\n\n\n    this.$_filterTimer = null; // If filter is \"pre-set\", set the criteria\n    // This will trigger any watchers/dependents\n    // this.localFilter = this.filterSanitize(this.filter)\n    // Set the initial filtered state in a `$nextTick()` so that\n    // we trigger a filtered event if needed\n\n    this.$nextTick(function () {\n      _this2.isFiltered = Boolean(_this2.localFilter);\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.clearFilterTimer();\n  },\n  methods: {\n    clearFilterTimer: function clearFilterTimer() {\n      clearTimeout(this.$_filterTimer);\n      this.$_filterTimer = null;\n    },\n    filterSanitize: function filterSanitize(criteria) {\n      // Sanitizes filter criteria based on internal or external filtering\n      if (this.localFiltering && !this.localFilterFn && !(isString(criteria) || isRegExp(criteria))) {\n        // If using internal filter function, which only accepts string or RegExp,\n        // return '' to signify no filter\n        return '';\n      } // Could be a string, object or array, as needed by external filter function\n      // We use `cloneDeep` to ensure we have a new copy of an object or array\n      // without Vue's reactive observers\n\n\n      return cloneDeep(criteria);\n    },\n    // Filter Function factories\n    filterFnFactory: function filterFnFactory(filterFn, criteria) {\n      // Wrapper factory for external filter functions\n      // Wrap the provided filter-function and return a new function\n      // Returns `null` if no filter-function defined or if criteria is falsey\n      // Rather than directly grabbing `this.computedLocalFilterFn` or `this.filterFunction`\n      // we have it passed, so that the caller computed prop will be reactive to changes\n      // in the original filter-function (as this routine is a method)\n      if (!filterFn || !isFunction(filterFn) || !criteria || looseEqual(criteria, []) || looseEqual(criteria, {})) {\n        return null;\n      } // Build the wrapped filter test function, passing the criteria to the provided function\n\n\n      var fn = function fn(item) {\n        // Generated function returns true if the criteria matches part\n        // of the serialized data, otherwise false\n        return filterFn(item, criteria);\n      }; // Return the wrapped function\n\n\n      return fn;\n    },\n    defaultFilterFnFactory: function defaultFilterFnFactory(criteria) {\n      var _this3 = this; // Generates the default filter function, using the given filter criteria\n      // Returns `null` if no criteria or criteria format not supported\n\n\n      if (!criteria || !(isString(criteria) || isRegExp(criteria))) {\n        // Built in filter can only support strings or RegExp criteria (at the moment)\n        return null;\n      } // Build the RegExp needed for filtering\n\n\n      var regExp = criteria;\n\n      if (isString(regExp)) {\n        // Escape special RegExp characters in the string and convert contiguous\n        // whitespace to \\s+ matches\n        var pattern = escapeRegExp(criteria).replace(RX_SPACES, '\\\\s+'); // Build the RegExp (no need for global flag, as we only need\n        // to find the value once in the string)\n\n        regExp = new RegExp(\".*\".concat(pattern, \".*\"), 'i');\n      } // Generate the wrapped filter test function to use\n\n\n      var fn = function fn(item) {\n        // This searches all row values (and sub property values) in the entire (excluding\n        // special `_` prefixed keys), because we convert the record to a space-separated\n        // string containing all the value properties (recursively), even ones that are\n        // not visible (not specified in this.fields)\n        // Users can ignore filtering on specific fields, or on only certain fields,\n        // and can optionall specify searching results of fields with formatter\n        //\n        // TODO: Enable searching on scoped slots (optional, as it will be SLOW)\n        //\n        // Generated function returns true if the criteria matches part of\n        // the serialized data, otherwise false\n        //\n        // We set `lastIndex = 0` on the `RegExp` in case someone specifies the `/g` global flag\n        regExp.lastIndex = 0;\n        return regExp.test(stringifyRecordValues(item, _this3.computedFilterIgnored, _this3.computedFilterIncluded, _this3.computedFieldsObj));\n      }; // Return the generated function\n\n\n      return fn;\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/Yago/Documents/Eclipse/Yago/farolshopping/src/frontend/farolshopping/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-filtering.js"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","Vue","NAME_TABLE","EVENT_NAME_FILTERED","PROP_TYPE_REG_EXP","PROP_TYPE_ARRAY_OBJECT_STRING","PROP_TYPE_FUNCTION","PROP_TYPE_ARRAY","PROP_TYPE_NUMBER_STRING","RX_DIGITS","RX_SPACES","concat","cloneDeep","identity","isFunction","isString","isRegExp","looseEqual","toInteger","hasPropFunction","makeProp","escapeRegExp","warn","stringifyRecordValues","DEBOUNCE_DEPRECATED_MSG","props","filter","filterDebounce","value","String","filterFunction","filterIgnoredFields","filterIncludedFields","filteringMixin","extend","data","isFiltered","localFilter","filterSanitize","computed","computedFilterIgnored","computedFilterIncluded","computedFilterDebounce","ms","localFiltering","hasProvider","noProviderFiltering","filteredCheck","filteredItems","localItems","localFilterFn","items","criteria","filterFn","filterFnFactory","defaultFilterFnFactory","watch","newValue","$_filterTimer","clearFilterTimer","deep","handler","newCriteria","_this","timeout","setTimeout","_ref","$emit","oldValue","created","_this2","$nextTick","Boolean","beforeDestroy","methods","clearTimeout","fn","item","_this3","regExp","pattern","replace","RegExp","lastIndex","computedFieldsObj"],"mappings":"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","sourcesContent":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { Vue } from '../../../vue';\nimport { NAME_TABLE } from '../../../constants/components';\nimport { EVENT_NAME_FILTERED } from '../../../constants/events';\nimport { PROP_TYPE_REG_EXP, PROP_TYPE_ARRAY_OBJECT_STRING, PROP_TYPE_FUNCTION, PROP_TYPE_ARRAY, PROP_TYPE_NUMBER_STRING } from '../../../constants/props';\nimport { RX_DIGITS, RX_SPACES } from '../../../constants/regex';\nimport { concat } from '../../../utils/array';\nimport { cloneDeep } from '../../../utils/clone-deep';\nimport { identity } from '../../../utils/identity';\nimport { isFunction, isString, isRegExp } from '../../../utils/inspect';\nimport { looseEqual } from '../../../utils/loose-equal';\nimport { toInteger } from '../../../utils/number';\nimport { hasPropFunction, makeProp } from '../../../utils/props';\nimport { escapeRegExp } from '../../../utils/string';\nimport { warn } from '../../../utils/warn';\nimport { stringifyRecordValues } from './stringify-record-values'; // --- Constants ---\n\nvar DEBOUNCE_DEPRECATED_MSG = 'Prop \"filter-debounce\" is deprecated. Use the debounce feature of \"<b-form-input>\" instead.'; // --- Props ---\n\nexport var props = {\n  filter: makeProp([].concat(_toConsumableArray(PROP_TYPE_ARRAY_OBJECT_STRING), [PROP_TYPE_REG_EXP])),\n  filterDebounce: makeProp(PROP_TYPE_NUMBER_STRING, 0, function (value) {\n    return RX_DIGITS.test(String(value));\n  }),\n  filterFunction: makeProp(PROP_TYPE_FUNCTION),\n  filterIgnoredFields: makeProp(PROP_TYPE_ARRAY, []),\n  filterIncludedFields: makeProp(PROP_TYPE_ARRAY, [])\n}; // --- Mixin ---\n// @vue/component\n\nexport var filteringMixin = Vue.extend({\n  props: props,\n  data: function data() {\n    return {\n      // Flag for displaying which empty slot to show and some event triggering\n      isFiltered: false,\n      // Where we store the copy of the filter criteria after debouncing\n      // We pre-set it with the sanitized filter value\n      localFilter: this.filterSanitize(this.filter)\n    };\n  },\n  computed: {\n    computedFilterIgnored: function computedFilterIgnored() {\n      return concat(this.filterIgnoredFields || []).filter(identity);\n    },\n    computedFilterIncluded: function computedFilterIncluded() {\n      return concat(this.filterIncludedFields || []).filter(identity);\n    },\n    computedFilterDebounce: function computedFilterDebounce() {\n      var ms = toInteger(this.filterDebounce, 0);\n      /* istanbul ignore next */\n\n      if (ms > 0) {\n        warn(DEBOUNCE_DEPRECATED_MSG, NAME_TABLE);\n      }\n\n      return ms;\n    },\n    localFiltering: function localFiltering() {\n      return this.hasProvider ? !!this.noProviderFiltering : true;\n    },\n    // For watching changes to `filteredItems` vs `localItems`\n    filteredCheck: function filteredCheck() {\n      var filteredItems = this.filteredItems,\n          localItems = this.localItems,\n          localFilter = this.localFilter;\n      return {\n        filteredItems: filteredItems,\n        localItems: localItems,\n        localFilter: localFilter\n      };\n    },\n    // Sanitized/normalize filter-function prop\n    localFilterFn: function localFilterFn() {\n      // Return `null` to signal to use internal filter function\n      var filterFunction = this.filterFunction;\n      return hasPropFunction(filterFunction) ? filterFunction : null;\n    },\n    // Returns the records in `localItems` that match the filter criteria\n    // Returns the original `localItems` array if not sorting\n    filteredItems: function filteredItems() {\n      // Note the criteria is debounced and sanitized\n      var items = this.localItems,\n          criteria = this.localFilter; // Resolve the filtering function, when requested\n      // We prefer the provided filtering function and fallback to the internal one\n      // When no filtering criteria is specified the filtering factories will return `null`\n\n      var filterFn = this.localFiltering ? this.filterFnFactory(this.localFilterFn, criteria) || this.defaultFilterFnFactory(criteria) : null; // We only do local filtering when requested and there are records to filter\n\n      return filterFn && items.length > 0 ? items.filter(filterFn) : items;\n    }\n  },\n  watch: {\n    // Watch for debounce being set to 0\n    computedFilterDebounce: function computedFilterDebounce(newValue) {\n      if (!newValue && this.$_filterTimer) {\n        this.clearFilterTimer();\n        this.localFilter = this.filterSanitize(this.filter);\n      }\n    },\n    // Watch for changes to the filter criteria, and debounce if necessary\n    filter: {\n      // We need a deep watcher in case the user passes\n      // an object when using `filter-function`\n      deep: true,\n      handler: function handler(newCriteria) {\n        var _this = this;\n\n        var timeout = this.computedFilterDebounce;\n        this.clearFilterTimer();\n\n        if (timeout && timeout > 0) {\n          // If we have a debounce time, delay the update of `localFilter`\n          this.$_filterTimer = setTimeout(function () {\n            _this.localFilter = _this.filterSanitize(newCriteria);\n          }, timeout);\n        } else {\n          // Otherwise, immediately update `localFilter` with `newFilter` value\n          this.localFilter = this.filterSanitize(newCriteria);\n        }\n      }\n    },\n    // Watch for changes to the filter criteria and filtered items vs `localItems`\n    // Set visual state and emit events as required\n    filteredCheck: function filteredCheck(_ref) {\n      var filteredItems = _ref.filteredItems,\n          localFilter = _ref.localFilter;\n      // Determine if the dataset is filtered or not\n      var isFiltered = false;\n\n      if (!localFilter) {\n        // If filter criteria is falsey\n        isFiltered = false;\n      } else if (looseEqual(localFilter, []) || looseEqual(localFilter, {})) {\n        // If filter criteria is an empty array or object\n        isFiltered = false;\n      } else if (localFilter) {\n        // If filter criteria is truthy\n        isFiltered = true;\n      }\n\n      if (isFiltered) {\n        this.$emit(EVENT_NAME_FILTERED, filteredItems, filteredItems.length);\n      }\n\n      this.isFiltered = isFiltered;\n    },\n    isFiltered: function isFiltered(newValue, oldValue) {\n      if (newValue === false && oldValue === true) {\n        // We need to emit a filtered event if `isFiltered` transitions from `true` to\n        // `false` so that users can update their pagination controls\n        var localItems = this.localItems;\n        this.$emit(EVENT_NAME_FILTERED, localItems, localItems.length);\n      }\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n\n    // Create private non-reactive props\n    this.$_filterTimer = null; // If filter is \"pre-set\", set the criteria\n    // This will trigger any watchers/dependents\n    // this.localFilter = this.filterSanitize(this.filter)\n    // Set the initial filtered state in a `$nextTick()` so that\n    // we trigger a filtered event if needed\n\n    this.$nextTick(function () {\n      _this2.isFiltered = Boolean(_this2.localFilter);\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.clearFilterTimer();\n  },\n  methods: {\n    clearFilterTimer: function clearFilterTimer() {\n      clearTimeout(this.$_filterTimer);\n      this.$_filterTimer = null;\n    },\n    filterSanitize: function filterSanitize(criteria) {\n      // Sanitizes filter criteria based on internal or external filtering\n      if (this.localFiltering && !this.localFilterFn && !(isString(criteria) || isRegExp(criteria))) {\n        // If using internal filter function, which only accepts string or RegExp,\n        // return '' to signify no filter\n        return '';\n      } // Could be a string, object or array, as needed by external filter function\n      // We use `cloneDeep` to ensure we have a new copy of an object or array\n      // without Vue's reactive observers\n\n\n      return cloneDeep(criteria);\n    },\n    // Filter Function factories\n    filterFnFactory: function filterFnFactory(filterFn, criteria) {\n      // Wrapper factory for external filter functions\n      // Wrap the provided filter-function and return a new function\n      // Returns `null` if no filter-function defined or if criteria is falsey\n      // Rather than directly grabbing `this.computedLocalFilterFn` or `this.filterFunction`\n      // we have it passed, so that the caller computed prop will be reactive to changes\n      // in the original filter-function (as this routine is a method)\n      if (!filterFn || !isFunction(filterFn) || !criteria || looseEqual(criteria, []) || looseEqual(criteria, {})) {\n        return null;\n      } // Build the wrapped filter test function, passing the criteria to the provided function\n\n\n      var fn = function fn(item) {\n        // Generated function returns true if the criteria matches part\n        // of the serialized data, otherwise false\n        return filterFn(item, criteria);\n      }; // Return the wrapped function\n\n\n      return fn;\n    },\n    defaultFilterFnFactory: function defaultFilterFnFactory(criteria) {\n      var _this3 = this;\n\n      // Generates the default filter function, using the given filter criteria\n      // Returns `null` if no criteria or criteria format not supported\n      if (!criteria || !(isString(criteria) || isRegExp(criteria))) {\n        // Built in filter can only support strings or RegExp criteria (at the moment)\n        return null;\n      } // Build the RegExp needed for filtering\n\n\n      var regExp = criteria;\n\n      if (isString(regExp)) {\n        // Escape special RegExp characters in the string and convert contiguous\n        // whitespace to \\s+ matches\n        var pattern = escapeRegExp(criteria).replace(RX_SPACES, '\\\\s+'); // Build the RegExp (no need for global flag, as we only need\n        // to find the value once in the string)\n\n        regExp = new RegExp(\".*\".concat(pattern, \".*\"), 'i');\n      } // Generate the wrapped filter test function to use\n\n\n      var fn = function fn(item) {\n        // This searches all row values (and sub property values) in the entire (excluding\n        // special `_` prefixed keys), because we convert the record to a space-separated\n        // string containing all the value properties (recursively), even ones that are\n        // not visible (not specified in this.fields)\n        // Users can ignore filtering on specific fields, or on only certain fields,\n        // and can optionall specify searching results of fields with formatter\n        //\n        // TODO: Enable searching on scoped slots (optional, as it will be SLOW)\n        //\n        // Generated function returns true if the criteria matches part of\n        // the serialized data, otherwise false\n        //\n        // We set `lastIndex = 0` on the `RegExp` in case someone specifies the `/g` global flag\n        regExp.lastIndex = 0;\n        return regExp.test(stringifyRecordValues(item, _this3.computedFilterIgnored, _this3.computedFilterIncluded, _this3.computedFieldsObj));\n      }; // Return the generated function\n\n\n      return fn;\n    }\n  }\n});"]},"metadata":{},"sourceType":"module"}