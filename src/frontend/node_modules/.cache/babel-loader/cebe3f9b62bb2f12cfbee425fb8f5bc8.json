{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { Vue, mergeData } from '../../vue';\nimport { NAME_FORM_TEXT } from '../../constants/components';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_STRING } from '../../constants/props';\nimport { makeProp, makePropsConfigurable } from '../../utils/props'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  id: makeProp(PROP_TYPE_STRING),\n  inline: makeProp(PROP_TYPE_BOOLEAN, false),\n  tag: makeProp(PROP_TYPE_STRING, 'small'),\n  textVariant: makeProp(PROP_TYPE_STRING, 'muted')\n}, NAME_FORM_TEXT); // --- Main component ---\n// @vue/component\n\nexport var BFormText = /*#__PURE__*/Vue.extend({\n  name: NAME_FORM_TEXT,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        children = _ref.children;\n    return h(props.tag, mergeData(data, {\n      class: _defineProperty({\n        'form-text': !props.inline\n      }, \"text-\".concat(props.textVariant), props.textVariant),\n      attrs: {\n        id: props.id\n      }\n    }), children);\n  }\n});","map":{"version":3,"sources":["C:/Users/Yago/Documents/Eclipse/Yago/farolshopping/src/frontend/farolshopping/node_modules/bootstrap-vue/esm/components/form/form-text.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Vue","mergeData","NAME_FORM_TEXT","PROP_TYPE_BOOLEAN","PROP_TYPE_STRING","makeProp","makePropsConfigurable","props","id","inline","tag","textVariant","BFormText","extend","name","functional","render","h","_ref","data","children","class","concat","attrs"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;AAAE,MAAID,GAAG,IAAID,GAAX,EAAgB;AAAEG,IAAAA,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2BC,GAA3B,EAAgC;AAAEC,MAAAA,KAAK,EAAEA,KAAT;AAAgBG,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEP,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;AAAmB;;AAAC,SAAOF,GAAP;AAAa;;AAEjN,SAASQ,GAAT,EAAcC,SAAd,QAA+B,WAA/B;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,uBAApD;AACA,SAASC,QAAT,EAAmBC,qBAAnB,QAAgD,mBAAhD,C,CAAqE;;AAErE,OAAO,IAAIC,KAAK,GAAGD,qBAAqB,CAAC;AACvCE,EAAAA,EAAE,EAAEH,QAAQ,CAACD,gBAAD,CAD2B;AAEvCK,EAAAA,MAAM,EAAEJ,QAAQ,CAACF,iBAAD,EAAoB,KAApB,CAFuB;AAGvCO,EAAAA,GAAG,EAAEL,QAAQ,CAACD,gBAAD,EAAmB,OAAnB,CAH0B;AAIvCO,EAAAA,WAAW,EAAEN,QAAQ,CAACD,gBAAD,EAAmB,OAAnB;AAJkB,CAAD,EAKrCF,cALqC,CAAjC,C,CAKa;AACpB;;AAEA,OAAO,IAAIU,SAAS,GAAG,aAAaZ,GAAG,CAACa,MAAJ,CAAW;AAC7CC,EAAAA,IAAI,EAAEZ,cADuC;AAE7Ca,EAAAA,UAAU,EAAE,IAFiC;AAG7CR,EAAAA,KAAK,EAAEA,KAHsC;AAI7CS,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,IAAnB,EAAyB;AAC/B,QAAIX,KAAK,GAAGW,IAAI,CAACX,KAAjB;AAAA,QACIY,IAAI,GAAGD,IAAI,CAACC,IADhB;AAAA,QAEIC,QAAQ,GAAGF,IAAI,CAACE,QAFpB;AAGA,WAAOH,CAAC,CAACV,KAAK,CAACG,GAAP,EAAYT,SAAS,CAACkB,IAAD,EAAO;AAClCE,MAAAA,KAAK,EAAE9B,eAAe,CAAC;AACrB,qBAAa,CAACgB,KAAK,CAACE;AADC,OAAD,EAEnB,QAAQa,MAAR,CAAef,KAAK,CAACI,WAArB,CAFmB,EAEgBJ,KAAK,CAACI,WAFtB,CADY;AAIlCY,MAAAA,KAAK,EAAE;AACLf,QAAAA,EAAE,EAAED,KAAK,CAACC;AADL;AAJ2B,KAAP,CAArB,EAOJY,QAPI,CAAR;AAQD;AAhB4C,CAAX,CAA7B","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Vue, mergeData } from '../../vue';\nimport { NAME_FORM_TEXT } from '../../constants/components';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_STRING } from '../../constants/props';\nimport { makeProp, makePropsConfigurable } from '../../utils/props'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  id: makeProp(PROP_TYPE_STRING),\n  inline: makeProp(PROP_TYPE_BOOLEAN, false),\n  tag: makeProp(PROP_TYPE_STRING, 'small'),\n  textVariant: makeProp(PROP_TYPE_STRING, 'muted')\n}, NAME_FORM_TEXT); // --- Main component ---\n// @vue/component\n\nexport var BFormText = /*#__PURE__*/Vue.extend({\n  name: NAME_FORM_TEXT,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        children = _ref.children;\n    return h(props.tag, mergeData(data, {\n      class: _defineProperty({\n        'form-text': !props.inline\n      }, \"text-\".concat(props.textVariant), props.textVariant),\n      attrs: {\n        id: props.id\n      }\n    }), children);\n  }\n});"]},"metadata":{},"sourceType":"module"}