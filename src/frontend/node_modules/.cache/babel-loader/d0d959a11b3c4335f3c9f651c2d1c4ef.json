{"ast":null,"code":"import { Vue } from '../../../vue';\nimport { SLOT_NAME_BOTTOM_ROW } from '../../../constants/slots';\nimport { isFunction } from '../../../utils/inspect';\nimport { BTr } from '../tr'; // --- Props ---\n\nexport var props = {}; // --- Mixin ---\n// @vue/component\n\nexport var bottomRowMixin = Vue.extend({\n  props: props,\n  methods: {\n    renderBottomRow: function renderBottomRow() {\n      var fields = this.computedFields,\n          stacked = this.stacked,\n          tbodyTrClass = this.tbodyTrClass,\n          tbodyTrAttr = this.tbodyTrAttr;\n      var h = this.$createElement; // Static bottom row slot (hidden in visibly stacked mode as we can't control the data-label)\n      // If in *always* stacked mode, we don't bother rendering the row\n\n      if (!this.hasNormalizedSlot(SLOT_NAME_BOTTOM_ROW) || stacked === true || stacked === '') {\n        return h();\n      }\n\n      return h(BTr, {\n        staticClass: 'b-table-bottom-row',\n        class: [isFunction(tbodyTrClass) ?\n        /* istanbul ignore next */\n        tbodyTrClass(null, 'row-bottom') : tbodyTrClass],\n        attrs: isFunction(tbodyTrAttr) ?\n        /* istanbul ignore next */\n        tbodyTrAttr(null, 'row-bottom') : tbodyTrAttr,\n        key: 'b-bottom-row'\n      }, this.normalizeSlot(SLOT_NAME_BOTTOM_ROW, {\n        columns: fields.length,\n        fields: fields\n      }));\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/Yago/Documents/Eclipse/Yago/farolshopping/src/frontend/farolshopping/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-bottom-row.js"],"names":["Vue","SLOT_NAME_BOTTOM_ROW","isFunction","BTr","props","bottomRowMixin","extend","methods","renderBottomRow","fields","computedFields","stacked","tbodyTrClass","tbodyTrAttr","h","$createElement","hasNormalizedSlot","staticClass","class","attrs","key","normalizeSlot","columns","length"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,SAASC,oBAAT,QAAqC,0BAArC;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,GAAT,QAAoB,OAApB,C,CAA6B;;AAE7B,OAAO,IAAIC,KAAK,GAAG,EAAZ,C,CAAgB;AACvB;;AAEA,OAAO,IAAIC,cAAc,GAAGL,GAAG,CAACM,MAAJ,CAAW;AACrCF,EAAAA,KAAK,EAAEA,KAD8B;AAErCG,EAAAA,OAAO,EAAE;AACPC,IAAAA,eAAe,EAAE,SAASA,eAAT,GAA2B;AAC1C,UAAIC,MAAM,GAAG,KAAKC,cAAlB;AAAA,UACIC,OAAO,GAAG,KAAKA,OADnB;AAAA,UAEIC,YAAY,GAAG,KAAKA,YAFxB;AAAA,UAGIC,WAAW,GAAG,KAAKA,WAHvB;AAIA,UAAIC,CAAC,GAAG,KAAKC,cAAb,CAL0C,CAKb;AAC7B;;AAEA,UAAI,CAAC,KAAKC,iBAAL,CAAuBf,oBAAvB,CAAD,IAAiDU,OAAO,KAAK,IAA7D,IAAqEA,OAAO,KAAK,EAArF,EAAyF;AACvF,eAAOG,CAAC,EAAR;AACD;;AAED,aAAOA,CAAC,CAACX,GAAD,EAAM;AACZc,QAAAA,WAAW,EAAE,oBADD;AAEZC,QAAAA,KAAK,EAAE,CAAChB,UAAU,CAACU,YAAD,CAAV;AACR;AACAA,QAAAA,YAAY,CAAC,IAAD,EAAO,YAAP,CAFJ,GAE2BA,YAF5B,CAFK;AAKZO,QAAAA,KAAK,EAAEjB,UAAU,CAACW,WAAD,CAAV;AACP;AACAA,QAAAA,WAAW,CAAC,IAAD,EAAO,YAAP,CAFJ,GAE2BA,WAPtB;AAQZO,QAAAA,GAAG,EAAE;AARO,OAAN,EASL,KAAKC,aAAL,CAAmBpB,oBAAnB,EAAyC;AAC1CqB,QAAAA,OAAO,EAAEb,MAAM,CAACc,MAD0B;AAE1Cd,QAAAA,MAAM,EAAEA;AAFkC,OAAzC,CATK,CAAR;AAaD;AA1BM;AAF4B,CAAX,CAArB","sourcesContent":["import { Vue } from '../../../vue';\nimport { SLOT_NAME_BOTTOM_ROW } from '../../../constants/slots';\nimport { isFunction } from '../../../utils/inspect';\nimport { BTr } from '../tr'; // --- Props ---\n\nexport var props = {}; // --- Mixin ---\n// @vue/component\n\nexport var bottomRowMixin = Vue.extend({\n  props: props,\n  methods: {\n    renderBottomRow: function renderBottomRow() {\n      var fields = this.computedFields,\n          stacked = this.stacked,\n          tbodyTrClass = this.tbodyTrClass,\n          tbodyTrAttr = this.tbodyTrAttr;\n      var h = this.$createElement; // Static bottom row slot (hidden in visibly stacked mode as we can't control the data-label)\n      // If in *always* stacked mode, we don't bother rendering the row\n\n      if (!this.hasNormalizedSlot(SLOT_NAME_BOTTOM_ROW) || stacked === true || stacked === '') {\n        return h();\n      }\n\n      return h(BTr, {\n        staticClass: 'b-table-bottom-row',\n        class: [isFunction(tbodyTrClass) ?\n        /* istanbul ignore next */\n        tbodyTrClass(null, 'row-bottom') : tbodyTrClass],\n        attrs: isFunction(tbodyTrAttr) ?\n        /* istanbul ignore next */\n        tbodyTrAttr(null, 'row-bottom') : tbodyTrAttr,\n        key: 'b-bottom-row'\n      }, this.normalizeSlot(SLOT_NAME_BOTTOM_ROW, {\n        columns: fields.length,\n        fields: fields\n      }));\n    }\n  }\n});"]},"metadata":{},"sourceType":"module"}