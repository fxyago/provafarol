{"ast":null,"code":"import { Vue } from '../../../vue';\nimport { PROP_TYPE_STRING } from '../../../constants/props';\nimport { SLOT_NAME_TABLE_CAPTION } from '../../../constants/slots';\nimport { htmlOrText } from '../../../utils/html';\nimport { makeProp } from '../../../utils/props'; // --- Props ---\n\nexport var props = {\n  caption: makeProp(PROP_TYPE_STRING),\n  captionHtml: makeProp(PROP_TYPE_STRING) // `caption-top` is part of table-render mixin (styling)\n  // captionTop: makeProp(PROP_TYPE_BOOLEAN, false)\n\n}; // --- Mixin ---\n// @vue/component\n\nexport var captionMixin = Vue.extend({\n  props: props,\n  computed: {\n    captionId: function captionId() {\n      return this.isStacked ? this.safeId('_caption_') : null;\n    }\n  },\n  methods: {\n    renderCaption: function renderCaption() {\n      var caption = this.caption,\n          captionHtml = this.captionHtml;\n      var h = this.$createElement;\n      var $caption = h();\n      var hasCaptionSlot = this.hasNormalizedSlot(SLOT_NAME_TABLE_CAPTION);\n\n      if (hasCaptionSlot || caption || captionHtml) {\n        $caption = h('caption', {\n          attrs: {\n            id: this.captionId\n          },\n          domProps: hasCaptionSlot ? {} : htmlOrText(captionHtml, caption),\n          key: 'caption',\n          ref: 'caption'\n        }, this.normalizeSlot(SLOT_NAME_TABLE_CAPTION));\n      }\n\n      return $caption;\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/Yago/Documents/Eclipse/Yago/farolshopping/src/frontend/farolshopping/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-caption.js"],"names":["Vue","PROP_TYPE_STRING","SLOT_NAME_TABLE_CAPTION","htmlOrText","makeProp","props","caption","captionHtml","captionMixin","extend","computed","captionId","isStacked","safeId","methods","renderCaption","h","$createElement","$caption","hasCaptionSlot","hasNormalizedSlot","attrs","id","domProps","key","ref","normalizeSlot"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SAASC,uBAAT,QAAwC,0BAAxC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,QAAT,QAAyB,sBAAzB,C,CAAiD;;AAEjD,OAAO,IAAIC,KAAK,GAAG;AACjBC,EAAAA,OAAO,EAAEF,QAAQ,CAACH,gBAAD,CADA;AAEjBM,EAAAA,WAAW,EAAEH,QAAQ,CAACH,gBAAD,CAFJ,CAEuB;AACxC;;AAHiB,CAAZ,C,CAKJ;AACH;;AAEA,OAAO,IAAIO,YAAY,GAAGR,GAAG,CAACS,MAAJ,CAAW;AACnCJ,EAAAA,KAAK,EAAEA,KAD4B;AAEnCK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,SAASA,SAAT,GAAqB;AAC9B,aAAO,KAAKC,SAAL,GAAiB,KAAKC,MAAL,CAAY,WAAZ,CAAjB,GAA4C,IAAnD;AACD;AAHO,GAFyB;AAOnCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,aAAa,EAAE,SAASA,aAAT,GAAyB;AACtC,UAAIT,OAAO,GAAG,KAAKA,OAAnB;AAAA,UACIC,WAAW,GAAG,KAAKA,WADvB;AAEA,UAAIS,CAAC,GAAG,KAAKC,cAAb;AACA,UAAIC,QAAQ,GAAGF,CAAC,EAAhB;AACA,UAAIG,cAAc,GAAG,KAAKC,iBAAL,CAAuBlB,uBAAvB,CAArB;;AAEA,UAAIiB,cAAc,IAAIb,OAAlB,IAA6BC,WAAjC,EAA8C;AAC5CW,QAAAA,QAAQ,GAAGF,CAAC,CAAC,SAAD,EAAY;AACtBK,UAAAA,KAAK,EAAE;AACLC,YAAAA,EAAE,EAAE,KAAKX;AADJ,WADe;AAItBY,UAAAA,QAAQ,EAAEJ,cAAc,GAAG,EAAH,GAAQhB,UAAU,CAACI,WAAD,EAAcD,OAAd,CAJpB;AAKtBkB,UAAAA,GAAG,EAAE,SALiB;AAMtBC,UAAAA,GAAG,EAAE;AANiB,SAAZ,EAOT,KAAKC,aAAL,CAAmBxB,uBAAnB,CAPS,CAAZ;AAQD;;AAED,aAAOgB,QAAP;AACD;AApBM;AAP0B,CAAX,CAAnB","sourcesContent":["import { Vue } from '../../../vue';\nimport { PROP_TYPE_STRING } from '../../../constants/props';\nimport { SLOT_NAME_TABLE_CAPTION } from '../../../constants/slots';\nimport { htmlOrText } from '../../../utils/html';\nimport { makeProp } from '../../../utils/props'; // --- Props ---\n\nexport var props = {\n  caption: makeProp(PROP_TYPE_STRING),\n  captionHtml: makeProp(PROP_TYPE_STRING) // `caption-top` is part of table-render mixin (styling)\n  // captionTop: makeProp(PROP_TYPE_BOOLEAN, false)\n\n}; // --- Mixin ---\n// @vue/component\n\nexport var captionMixin = Vue.extend({\n  props: props,\n  computed: {\n    captionId: function captionId() {\n      return this.isStacked ? this.safeId('_caption_') : null;\n    }\n  },\n  methods: {\n    renderCaption: function renderCaption() {\n      var caption = this.caption,\n          captionHtml = this.captionHtml;\n      var h = this.$createElement;\n      var $caption = h();\n      var hasCaptionSlot = this.hasNormalizedSlot(SLOT_NAME_TABLE_CAPTION);\n\n      if (hasCaptionSlot || caption || captionHtml) {\n        $caption = h('caption', {\n          attrs: {\n            id: this.captionId\n          },\n          domProps: hasCaptionSlot ? {} : htmlOrText(captionHtml, caption),\n          key: 'caption',\n          ref: 'caption'\n        }, this.normalizeSlot(SLOT_NAME_TABLE_CAPTION));\n      }\n\n      return $caption;\n    }\n  }\n});"]},"metadata":{},"sourceType":"module"}