{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.split.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/*\n * ScrollSpy class definition\n */\n\n\nimport { EVENT_OPTIONS_NO_CAPTURE } from '../../../constants/events';\nimport { RX_HREF } from '../../../constants/regex';\nimport { addClass, closest, getAttr, getBCR, hasClass, isElement, isVisible, matches, offset, position, removeClass, select, selectAll } from '../../../utils/dom';\nimport { getRootEventName, eventOn, eventOff } from '../../../utils/events';\nimport { identity } from '../../../utils/identity';\nimport { isString, isUndefined } from '../../../utils/inspect';\nimport { mathMax } from '../../../utils/math';\nimport { toInteger } from '../../../utils/number';\nimport { hasOwnProperty, toString as objectToString } from '../../../utils/object';\nimport { observeDom } from '../../../utils/observe-dom';\nimport { warn } from '../../../utils/warn';\n/*\n * Constants / Defaults\n */\n\nvar NAME = 'v-b-scrollspy';\nvar CLASS_NAME_DROPDOWN_ITEM = 'dropdown-item';\nvar CLASS_NAME_ACTIVE = 'active';\nvar SELECTOR_NAV_LIST_GROUP = '.nav, .list-group';\nvar SELECTOR_NAV_LINKS = '.nav-link';\nvar SELECTOR_NAV_ITEMS = '.nav-item';\nvar SELECTOR_LIST_ITEMS = '.list-group-item';\nvar SELECTOR_DROPDOWN = '.dropdown, .dropup';\nvar SELECTOR_DROPDOWN_ITEMS = '.dropdown-item';\nvar SELECTOR_DROPDOWN_TOGGLE = '.dropdown-toggle';\nvar ROOT_EVENT_NAME_ACTIVATE = getRootEventName('BVScrollspy', 'activate');\nvar METHOD_OFFSET = 'offset';\nvar METHOD_POSITION = 'position';\nvar Default = {\n  element: 'body',\n  offset: 10,\n  method: 'auto',\n  throttle: 75\n};\nvar DefaultType = {\n  element: '(string|element|component)',\n  offset: 'number',\n  method: 'string',\n  throttle: 'number'\n}; // Transition Events\n\nvar TransitionEndEvents = ['webkitTransitionEnd', 'transitionend', 'otransitionend', 'oTransitionEnd'];\n/*\n * Utility Methods\n */\n// Better var type detection\n\nvar toType = function toType(obj)\n/* istanbul ignore next: not easy to test */\n{\n  return objectToString(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n}; // Check config properties for expected types\n\n/* istanbul ignore next */\n\n\nvar typeCheckConfig = function typeCheckConfig(componentName, config, configTypes)\n/* istanbul ignore next: not easy to test */\n{\n  for (var property in configTypes) {\n    if (hasOwnProperty(configTypes, property)) {\n      var expectedTypes = configTypes[property];\n      var value = config[property];\n      var valueType = value && isElement(value) ? 'element' : toType(value); // handle Vue instances\n\n      valueType = value && value._isVue ? 'component' : valueType;\n\n      if (!new RegExp(expectedTypes).test(valueType)) {\n        /* istanbul ignore next */\n        warn(\"\".concat(componentName, \": Option \\\"\").concat(property, \"\\\" provided type \\\"\").concat(valueType, \"\\\" but expected type \\\"\").concat(expectedTypes, \"\\\"\"));\n      }\n    }\n  }\n};\n/*\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\n/* istanbul ignore next: not easy to test */\n\n\nexport var BVScrollSpy\n/* istanbul ignore next: not easy to test */\n= /*#__PURE__*/function () {\n  function BVScrollSpy(element, config, $root) {\n    _classCallCheck(this, BVScrollSpy); // The element we activate links in\n\n\n    this.$el = element;\n    this.$scroller = null;\n    this.$selector = [SELECTOR_NAV_LINKS, SELECTOR_LIST_ITEMS, SELECTOR_DROPDOWN_ITEMS].join(',');\n    this.$offsets = [];\n    this.$targets = [];\n    this.$activeTarget = null;\n    this.$scrollHeight = 0;\n    this.$resizeTimeout = null;\n    this.$scrollerObserver = null;\n    this.$targetsObserver = null;\n    this.$root = $root || null;\n    this.$config = null;\n    this.updateConfig(config);\n  }\n\n  _createClass(BVScrollSpy, [{\n    key: \"updateConfig\",\n    value: function updateConfig(config, $root) {\n      if (this.$scroller) {\n        // Just in case out scroll element has changed\n        this.unlisten();\n        this.$scroller = null;\n      }\n\n      var cfg = _objectSpread(_objectSpread({}, this.constructor.Default), config);\n\n      if ($root) {\n        this.$root = $root;\n      }\n\n      typeCheckConfig(this.constructor.Name, cfg, this.constructor.DefaultType);\n      this.$config = cfg;\n\n      if (this.$root) {\n        var self = this;\n        this.$root.$nextTick(function () {\n          self.listen();\n        });\n      } else {\n        this.listen();\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.unlisten();\n      clearTimeout(this.$resizeTimeout);\n      this.$resizeTimeout = null;\n      this.$el = null;\n      this.$config = null;\n      this.$scroller = null;\n      this.$selector = null;\n      this.$offsets = null;\n      this.$targets = null;\n      this.$activeTarget = null;\n      this.$scrollHeight = null;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen() {\n      var _this = this;\n\n      var scroller = this.getScroller();\n\n      if (scroller && scroller.tagName !== 'BODY') {\n        eventOn(scroller, 'scroll', this, EVENT_OPTIONS_NO_CAPTURE);\n      }\n\n      eventOn(window, 'scroll', this, EVENT_OPTIONS_NO_CAPTURE);\n      eventOn(window, 'resize', this, EVENT_OPTIONS_NO_CAPTURE);\n      eventOn(window, 'orientationchange', this, EVENT_OPTIONS_NO_CAPTURE);\n      TransitionEndEvents.forEach(function (eventName) {\n        eventOn(window, eventName, _this, EVENT_OPTIONS_NO_CAPTURE);\n      });\n      this.setObservers(true); // Schedule a refresh\n\n      this.handleEvent('refresh');\n    }\n  }, {\n    key: \"unlisten\",\n    value: function unlisten() {\n      var _this2 = this;\n\n      var scroller = this.getScroller();\n      this.setObservers(false);\n\n      if (scroller && scroller.tagName !== 'BODY') {\n        eventOff(scroller, 'scroll', this, EVENT_OPTIONS_NO_CAPTURE);\n      }\n\n      eventOff(window, 'scroll', this, EVENT_OPTIONS_NO_CAPTURE);\n      eventOff(window, 'resize', this, EVENT_OPTIONS_NO_CAPTURE);\n      eventOff(window, 'orientationchange', this, EVENT_OPTIONS_NO_CAPTURE);\n      TransitionEndEvents.forEach(function (eventName) {\n        eventOff(window, eventName, _this2, EVENT_OPTIONS_NO_CAPTURE);\n      });\n    }\n  }, {\n    key: \"setObservers\",\n    value: function setObservers(on) {\n      var _this3 = this; // We observe both the scroller for content changes, and the target links\n\n\n      this.$scrollerObserver && this.$scrollerObserver.disconnect();\n      this.$targetsObserver && this.$targetsObserver.disconnect();\n      this.$scrollerObserver = null;\n      this.$targetsObserver = null;\n\n      if (on) {\n        this.$targetsObserver = observeDom(this.$el, function () {\n          _this3.handleEvent('mutation');\n        }, {\n          subtree: true,\n          childList: true,\n          attributes: true,\n          attributeFilter: ['href']\n        });\n        this.$scrollerObserver = observeDom(this.getScroller(), function () {\n          _this3.handleEvent('mutation');\n        }, {\n          subtree: true,\n          childList: true,\n          characterData: true,\n          attributes: true,\n          attributeFilter: ['id', 'style', 'class']\n        });\n      }\n    } // General event handler\n\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(event) {\n      var type = isString(event) ? event : event.type;\n      var self = this;\n\n      var resizeThrottle = function resizeThrottle() {\n        if (!self.$resizeTimeout) {\n          self.$resizeTimeout = setTimeout(function () {\n            self.refresh();\n            self.process();\n            self.$resizeTimeout = null;\n          }, self.$config.throttle);\n        }\n      };\n\n      if (type === 'scroll') {\n        if (!this.$scrollerObserver) {\n          // Just in case we are added to the DOM before the scroll target is\n          // We re-instantiate our listeners, just in case\n          this.listen();\n        }\n\n        this.process();\n      } else if (/(resize|orientationchange|mutation|refresh)/.test(type)) {\n        // Postpone these events by throttle time\n        resizeThrottle();\n      }\n    } // Refresh the list of target links on the element we are applied to\n\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var _this4 = this;\n\n      var scroller = this.getScroller();\n\n      if (!scroller) {\n        return;\n      }\n\n      var autoMethod = scroller !== scroller.window ? METHOD_POSITION : METHOD_OFFSET;\n      var method = this.$config.method === 'auto' ? autoMethod : this.$config.method;\n      var methodFn = method === METHOD_POSITION ? position : offset;\n      var offsetBase = method === METHOD_POSITION ? this.getScrollTop() : 0;\n      this.$offsets = [];\n      this.$targets = [];\n      this.$scrollHeight = this.getScrollHeight(); // Find all the unique link HREFs that we will control\n\n      selectAll(this.$selector, this.$el) // Get HREF value\n      .map(function (link) {\n        return getAttr(link, 'href');\n      }) // Filter out HREFs that do not match our RegExp\n      .filter(function (href) {\n        return href && RX_HREF.test(href || '');\n      }) // Find all elements with ID that match HREF hash\n      .map(function (href) {\n        // Convert HREF into an ID (including # at beginning)\n        var id = href.replace(RX_HREF, '$1').trim();\n\n        if (!id) {\n          return null;\n        } // Find the element with the ID specified by id\n\n\n        var el = select(id, scroller);\n\n        if (el && isVisible(el)) {\n          return {\n            offset: toInteger(methodFn(el).top, 0) + offsetBase,\n            target: id\n          };\n        }\n\n        return null;\n      }).filter(identity) // Sort them by their offsets (smallest first)\n      .sort(function (a, b) {\n        return a.offset - b.offset;\n      }) // record only unique targets/offsets\n      .reduce(function (memo, item) {\n        if (!memo[item.target]) {\n          _this4.$offsets.push(item.offset);\n\n          _this4.$targets.push(item.target);\n\n          memo[item.target] = true;\n        }\n\n        return memo;\n      }, {}); // Return this for easy chaining\n\n      return this;\n    } // Handle activating/clearing\n\n  }, {\n    key: \"process\",\n    value: function process() {\n      var scrollTop = this.getScrollTop() + this.$config.offset;\n      var scrollHeight = this.getScrollHeight();\n      var maxScroll = this.$config.offset + scrollHeight - this.getOffsetHeight();\n\n      if (this.$scrollHeight !== scrollHeight) {\n        this.refresh();\n      }\n\n      if (scrollTop >= maxScroll) {\n        var target = this.$targets[this.$targets.length - 1];\n\n        if (this.$activeTarget !== target) {\n          this.activate(target);\n        }\n\n        return;\n      }\n\n      if (this.$activeTarget && scrollTop < this.$offsets[0] && this.$offsets[0] > 0) {\n        this.$activeTarget = null;\n        this.clear();\n        return;\n      }\n\n      for (var i = this.$offsets.length; i--;) {\n        var isActiveTarget = this.$activeTarget !== this.$targets[i] && scrollTop >= this.$offsets[i] && (isUndefined(this.$offsets[i + 1]) || scrollTop < this.$offsets[i + 1]);\n\n        if (isActiveTarget) {\n          this.activate(this.$targets[i]);\n        }\n      }\n    }\n  }, {\n    key: \"getScroller\",\n    value: function getScroller() {\n      if (this.$scroller) {\n        return this.$scroller;\n      }\n\n      var scroller = this.$config.element;\n\n      if (!scroller) {\n        return null;\n      } else if (isElement(scroller.$el)) {\n        scroller = scroller.$el;\n      } else if (isString(scroller)) {\n        scroller = select(scroller);\n      }\n\n      if (!scroller) {\n        return null;\n      }\n\n      this.$scroller = scroller.tagName === 'BODY' ? window : scroller;\n      return this.$scroller;\n    }\n  }, {\n    key: \"getScrollTop\",\n    value: function getScrollTop() {\n      var scroller = this.getScroller();\n      return scroller === window ? scroller.pageYOffset : scroller.scrollTop;\n    }\n  }, {\n    key: \"getScrollHeight\",\n    value: function getScrollHeight() {\n      return this.getScroller().scrollHeight || mathMax(document.body.scrollHeight, document.documentElement.scrollHeight);\n    }\n  }, {\n    key: \"getOffsetHeight\",\n    value: function getOffsetHeight() {\n      var scroller = this.getScroller();\n      return scroller === window ? window.innerHeight : getBCR(scroller).height;\n    }\n  }, {\n    key: \"activate\",\n    value: function activate(target) {\n      var _this5 = this;\n\n      this.$activeTarget = target;\n      this.clear(); // Grab the list of target links (<a href=\"{$target}\">)\n\n      var links = selectAll(this.$selector // Split out the base selectors\n      .split(',') // Map to a selector that matches links with HREF ending in the ID (including '#')\n      .map(function (selector) {\n        return \"\".concat(selector, \"[href$=\\\"\").concat(target, \"\\\"]\");\n      }) // Join back into a single selector string\n      .join(','), this.$el);\n      links.forEach(function (link) {\n        if (hasClass(link, CLASS_NAME_DROPDOWN_ITEM)) {\n          // This is a dropdown item, so find the .dropdown-toggle and set its state\n          var dropdown = closest(SELECTOR_DROPDOWN, link);\n\n          if (dropdown) {\n            _this5.setActiveState(select(SELECTOR_DROPDOWN_TOGGLE, dropdown), true);\n          } // Also set this link's state\n\n\n          _this5.setActiveState(link, true);\n        } else {\n          // Set triggered link as active\n          _this5.setActiveState(link, true);\n\n          if (matches(link.parentElement, SELECTOR_NAV_ITEMS)) {\n            // Handle nav-link inside nav-item, and set nav-item active\n            _this5.setActiveState(link.parentElement, true);\n          } // Set triggered links parents as active\n          // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n\n\n          var el = link;\n\n          while (el) {\n            el = closest(SELECTOR_NAV_LIST_GROUP, el);\n            var sibling = el ? el.previousElementSibling : null;\n\n            if (sibling && matches(sibling, \"\".concat(SELECTOR_NAV_LINKS, \", \").concat(SELECTOR_LIST_ITEMS))) {\n              _this5.setActiveState(sibling, true);\n            } // Handle special case where nav-link is inside a nav-item\n\n\n            if (sibling && matches(sibling, SELECTOR_NAV_ITEMS)) {\n              _this5.setActiveState(select(SELECTOR_NAV_LINKS, sibling), true); // Add active state to nav-item as well\n\n\n              _this5.setActiveState(sibling, true);\n            }\n          }\n        }\n      }); // Signal event to via $root, passing ID of activated target and reference to array of links\n\n      if (links && links.length > 0 && this.$root) {\n        this.$root.$emit(ROOT_EVENT_NAME_ACTIVATE, target, links);\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this6 = this;\n\n      selectAll(\"\".concat(this.$selector, \", \").concat(SELECTOR_NAV_ITEMS), this.$el).filter(function (el) {\n        return hasClass(el, CLASS_NAME_ACTIVE);\n      }).forEach(function (el) {\n        return _this6.setActiveState(el, false);\n      });\n    }\n  }, {\n    key: \"setActiveState\",\n    value: function setActiveState(el, active) {\n      if (!el) {\n        return;\n      }\n\n      if (active) {\n        addClass(el, CLASS_NAME_ACTIVE);\n      } else {\n        removeClass(el, CLASS_NAME_ACTIVE);\n      }\n    }\n  }], [{\n    key: \"Name\",\n    get: function get() {\n      return NAME;\n    }\n  }, {\n    key: \"Default\",\n    get: function get() {\n      return Default;\n    }\n  }, {\n    key: \"DefaultType\",\n    get: function get() {\n      return DefaultType;\n    }\n  }]);\n\n  return BVScrollSpy;\n}();","map":{"version":3,"sources":["C:/Users/Yago/Documents/Eclipse/Yago/farolshopping/src/frontend/farolshopping/node_modules/bootstrap-vue/esm/directives/scrollspy/helpers/bv-scrollspy.class.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","prototype","EVENT_OPTIONS_NO_CAPTURE","RX_HREF","addClass","closest","getAttr","getBCR","hasClass","isElement","isVisible","matches","offset","position","removeClass","select","selectAll","getRootEventName","eventOn","eventOff","identity","isString","isUndefined","mathMax","toInteger","hasOwnProperty","toString","objectToString","observeDom","warn","NAME","CLASS_NAME_DROPDOWN_ITEM","CLASS_NAME_ACTIVE","SELECTOR_NAV_LIST_GROUP","SELECTOR_NAV_LINKS","SELECTOR_NAV_ITEMS","SELECTOR_LIST_ITEMS","SELECTOR_DROPDOWN","SELECTOR_DROPDOWN_ITEMS","SELECTOR_DROPDOWN_TOGGLE","ROOT_EVENT_NAME_ACTIVATE","METHOD_OFFSET","METHOD_POSITION","Default","element","method","throttle","DefaultType","TransitionEndEvents","toType","match","toLowerCase","typeCheckConfig","componentName","config","configTypes","property","expectedTypes","valueType","_isVue","RegExp","test","concat","BVScrollSpy","$root","$el","$scroller","$selector","join","$offsets","$targets","$activeTarget","$scrollHeight","$resizeTimeout","$scrollerObserver","$targetsObserver","$config","updateConfig","unlisten","cfg","constructor","Name","self","$nextTick","listen","dispose","clearTimeout","_this","scroller","getScroller","tagName","window","eventName","setObservers","handleEvent","_this2","on","_this3","disconnect","subtree","childList","attributes","attributeFilter","characterData","event","type","resizeThrottle","setTimeout","refresh","process","_this4","autoMethod","methodFn","offsetBase","getScrollTop","getScrollHeight","map","link","href","id","replace","trim","el","top","sort","a","b","reduce","memo","item","scrollTop","scrollHeight","maxScroll","getOffsetHeight","activate","clear","isActiveTarget","pageYOffset","document","body","documentElement","innerHeight","height","_this5","links","split","selector","dropdown","setActiveState","parentElement","sibling","previousElementSibling","$emit","_this6","active","get"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*\n * ScrollSpy class definition\n */\nimport { EVENT_OPTIONS_NO_CAPTURE } from '../../../constants/events';\nimport { RX_HREF } from '../../../constants/regex';\nimport { addClass, closest, getAttr, getBCR, hasClass, isElement, isVisible, matches, offset, position, removeClass, select, selectAll } from '../../../utils/dom';\nimport { getRootEventName, eventOn, eventOff } from '../../../utils/events';\nimport { identity } from '../../../utils/identity';\nimport { isString, isUndefined } from '../../../utils/inspect';\nimport { mathMax } from '../../../utils/math';\nimport { toInteger } from '../../../utils/number';\nimport { hasOwnProperty, toString as objectToString } from '../../../utils/object';\nimport { observeDom } from '../../../utils/observe-dom';\nimport { warn } from '../../../utils/warn';\n/*\n * Constants / Defaults\n */\n\nvar NAME = 'v-b-scrollspy';\nvar CLASS_NAME_DROPDOWN_ITEM = 'dropdown-item';\nvar CLASS_NAME_ACTIVE = 'active';\nvar SELECTOR_NAV_LIST_GROUP = '.nav, .list-group';\nvar SELECTOR_NAV_LINKS = '.nav-link';\nvar SELECTOR_NAV_ITEMS = '.nav-item';\nvar SELECTOR_LIST_ITEMS = '.list-group-item';\nvar SELECTOR_DROPDOWN = '.dropdown, .dropup';\nvar SELECTOR_DROPDOWN_ITEMS = '.dropdown-item';\nvar SELECTOR_DROPDOWN_TOGGLE = '.dropdown-toggle';\nvar ROOT_EVENT_NAME_ACTIVATE = getRootEventName('BVScrollspy', 'activate');\nvar METHOD_OFFSET = 'offset';\nvar METHOD_POSITION = 'position';\nvar Default = {\n  element: 'body',\n  offset: 10,\n  method: 'auto',\n  throttle: 75\n};\nvar DefaultType = {\n  element: '(string|element|component)',\n  offset: 'number',\n  method: 'string',\n  throttle: 'number'\n}; // Transition Events\n\nvar TransitionEndEvents = ['webkitTransitionEnd', 'transitionend', 'otransitionend', 'oTransitionEnd'];\n/*\n * Utility Methods\n */\n// Better var type detection\n\nvar toType = function toType(obj)\n/* istanbul ignore next: not easy to test */\n{\n  return objectToString(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n}; // Check config properties for expected types\n\n/* istanbul ignore next */\n\n\nvar typeCheckConfig = function typeCheckConfig(componentName, config, configTypes)\n/* istanbul ignore next: not easy to test */\n{\n  for (var property in configTypes) {\n    if (hasOwnProperty(configTypes, property)) {\n      var expectedTypes = configTypes[property];\n      var value = config[property];\n      var valueType = value && isElement(value) ? 'element' : toType(value); // handle Vue instances\n\n      valueType = value && value._isVue ? 'component' : valueType;\n\n      if (!new RegExp(expectedTypes).test(valueType)) {\n        /* istanbul ignore next */\n        warn(\"\".concat(componentName, \": Option \\\"\").concat(property, \"\\\" provided type \\\"\").concat(valueType, \"\\\" but expected type \\\"\").concat(expectedTypes, \"\\\"\"));\n      }\n    }\n  }\n};\n/*\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\n/* istanbul ignore next: not easy to test */\n\n\nexport var BVScrollSpy\n/* istanbul ignore next: not easy to test */\n= /*#__PURE__*/function () {\n  function BVScrollSpy(element, config, $root) {\n    _classCallCheck(this, BVScrollSpy);\n\n    // The element we activate links in\n    this.$el = element;\n    this.$scroller = null;\n    this.$selector = [SELECTOR_NAV_LINKS, SELECTOR_LIST_ITEMS, SELECTOR_DROPDOWN_ITEMS].join(',');\n    this.$offsets = [];\n    this.$targets = [];\n    this.$activeTarget = null;\n    this.$scrollHeight = 0;\n    this.$resizeTimeout = null;\n    this.$scrollerObserver = null;\n    this.$targetsObserver = null;\n    this.$root = $root || null;\n    this.$config = null;\n    this.updateConfig(config);\n  }\n\n  _createClass(BVScrollSpy, [{\n    key: \"updateConfig\",\n    value: function updateConfig(config, $root) {\n      if (this.$scroller) {\n        // Just in case out scroll element has changed\n        this.unlisten();\n        this.$scroller = null;\n      }\n\n      var cfg = _objectSpread(_objectSpread({}, this.constructor.Default), config);\n\n      if ($root) {\n        this.$root = $root;\n      }\n\n      typeCheckConfig(this.constructor.Name, cfg, this.constructor.DefaultType);\n      this.$config = cfg;\n\n      if (this.$root) {\n        var self = this;\n        this.$root.$nextTick(function () {\n          self.listen();\n        });\n      } else {\n        this.listen();\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.unlisten();\n      clearTimeout(this.$resizeTimeout);\n      this.$resizeTimeout = null;\n      this.$el = null;\n      this.$config = null;\n      this.$scroller = null;\n      this.$selector = null;\n      this.$offsets = null;\n      this.$targets = null;\n      this.$activeTarget = null;\n      this.$scrollHeight = null;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen() {\n      var _this = this;\n\n      var scroller = this.getScroller();\n\n      if (scroller && scroller.tagName !== 'BODY') {\n        eventOn(scroller, 'scroll', this, EVENT_OPTIONS_NO_CAPTURE);\n      }\n\n      eventOn(window, 'scroll', this, EVENT_OPTIONS_NO_CAPTURE);\n      eventOn(window, 'resize', this, EVENT_OPTIONS_NO_CAPTURE);\n      eventOn(window, 'orientationchange', this, EVENT_OPTIONS_NO_CAPTURE);\n      TransitionEndEvents.forEach(function (eventName) {\n        eventOn(window, eventName, _this, EVENT_OPTIONS_NO_CAPTURE);\n      });\n      this.setObservers(true); // Schedule a refresh\n\n      this.handleEvent('refresh');\n    }\n  }, {\n    key: \"unlisten\",\n    value: function unlisten() {\n      var _this2 = this;\n\n      var scroller = this.getScroller();\n      this.setObservers(false);\n\n      if (scroller && scroller.tagName !== 'BODY') {\n        eventOff(scroller, 'scroll', this, EVENT_OPTIONS_NO_CAPTURE);\n      }\n\n      eventOff(window, 'scroll', this, EVENT_OPTIONS_NO_CAPTURE);\n      eventOff(window, 'resize', this, EVENT_OPTIONS_NO_CAPTURE);\n      eventOff(window, 'orientationchange', this, EVENT_OPTIONS_NO_CAPTURE);\n      TransitionEndEvents.forEach(function (eventName) {\n        eventOff(window, eventName, _this2, EVENT_OPTIONS_NO_CAPTURE);\n      });\n    }\n  }, {\n    key: \"setObservers\",\n    value: function setObservers(on) {\n      var _this3 = this;\n\n      // We observe both the scroller for content changes, and the target links\n      this.$scrollerObserver && this.$scrollerObserver.disconnect();\n      this.$targetsObserver && this.$targetsObserver.disconnect();\n      this.$scrollerObserver = null;\n      this.$targetsObserver = null;\n\n      if (on) {\n        this.$targetsObserver = observeDom(this.$el, function () {\n          _this3.handleEvent('mutation');\n        }, {\n          subtree: true,\n          childList: true,\n          attributes: true,\n          attributeFilter: ['href']\n        });\n        this.$scrollerObserver = observeDom(this.getScroller(), function () {\n          _this3.handleEvent('mutation');\n        }, {\n          subtree: true,\n          childList: true,\n          characterData: true,\n          attributes: true,\n          attributeFilter: ['id', 'style', 'class']\n        });\n      }\n    } // General event handler\n\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(event) {\n      var type = isString(event) ? event : event.type;\n      var self = this;\n\n      var resizeThrottle = function resizeThrottle() {\n        if (!self.$resizeTimeout) {\n          self.$resizeTimeout = setTimeout(function () {\n            self.refresh();\n            self.process();\n            self.$resizeTimeout = null;\n          }, self.$config.throttle);\n        }\n      };\n\n      if (type === 'scroll') {\n        if (!this.$scrollerObserver) {\n          // Just in case we are added to the DOM before the scroll target is\n          // We re-instantiate our listeners, just in case\n          this.listen();\n        }\n\n        this.process();\n      } else if (/(resize|orientationchange|mutation|refresh)/.test(type)) {\n        // Postpone these events by throttle time\n        resizeThrottle();\n      }\n    } // Refresh the list of target links on the element we are applied to\n\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var _this4 = this;\n\n      var scroller = this.getScroller();\n\n      if (!scroller) {\n        return;\n      }\n\n      var autoMethod = scroller !== scroller.window ? METHOD_POSITION : METHOD_OFFSET;\n      var method = this.$config.method === 'auto' ? autoMethod : this.$config.method;\n      var methodFn = method === METHOD_POSITION ? position : offset;\n      var offsetBase = method === METHOD_POSITION ? this.getScrollTop() : 0;\n      this.$offsets = [];\n      this.$targets = [];\n      this.$scrollHeight = this.getScrollHeight(); // Find all the unique link HREFs that we will control\n\n      selectAll(this.$selector, this.$el) // Get HREF value\n      .map(function (link) {\n        return getAttr(link, 'href');\n      }) // Filter out HREFs that do not match our RegExp\n      .filter(function (href) {\n        return href && RX_HREF.test(href || '');\n      }) // Find all elements with ID that match HREF hash\n      .map(function (href) {\n        // Convert HREF into an ID (including # at beginning)\n        var id = href.replace(RX_HREF, '$1').trim();\n\n        if (!id) {\n          return null;\n        } // Find the element with the ID specified by id\n\n\n        var el = select(id, scroller);\n\n        if (el && isVisible(el)) {\n          return {\n            offset: toInteger(methodFn(el).top, 0) + offsetBase,\n            target: id\n          };\n        }\n\n        return null;\n      }).filter(identity) // Sort them by their offsets (smallest first)\n      .sort(function (a, b) {\n        return a.offset - b.offset;\n      }) // record only unique targets/offsets\n      .reduce(function (memo, item) {\n        if (!memo[item.target]) {\n          _this4.$offsets.push(item.offset);\n\n          _this4.$targets.push(item.target);\n\n          memo[item.target] = true;\n        }\n\n        return memo;\n      }, {}); // Return this for easy chaining\n\n      return this;\n    } // Handle activating/clearing\n\n  }, {\n    key: \"process\",\n    value: function process() {\n      var scrollTop = this.getScrollTop() + this.$config.offset;\n      var scrollHeight = this.getScrollHeight();\n      var maxScroll = this.$config.offset + scrollHeight - this.getOffsetHeight();\n\n      if (this.$scrollHeight !== scrollHeight) {\n        this.refresh();\n      }\n\n      if (scrollTop >= maxScroll) {\n        var target = this.$targets[this.$targets.length - 1];\n\n        if (this.$activeTarget !== target) {\n          this.activate(target);\n        }\n\n        return;\n      }\n\n      if (this.$activeTarget && scrollTop < this.$offsets[0] && this.$offsets[0] > 0) {\n        this.$activeTarget = null;\n        this.clear();\n        return;\n      }\n\n      for (var i = this.$offsets.length; i--;) {\n        var isActiveTarget = this.$activeTarget !== this.$targets[i] && scrollTop >= this.$offsets[i] && (isUndefined(this.$offsets[i + 1]) || scrollTop < this.$offsets[i + 1]);\n\n        if (isActiveTarget) {\n          this.activate(this.$targets[i]);\n        }\n      }\n    }\n  }, {\n    key: \"getScroller\",\n    value: function getScroller() {\n      if (this.$scroller) {\n        return this.$scroller;\n      }\n\n      var scroller = this.$config.element;\n\n      if (!scroller) {\n        return null;\n      } else if (isElement(scroller.$el)) {\n        scroller = scroller.$el;\n      } else if (isString(scroller)) {\n        scroller = select(scroller);\n      }\n\n      if (!scroller) {\n        return null;\n      }\n\n      this.$scroller = scroller.tagName === 'BODY' ? window : scroller;\n      return this.$scroller;\n    }\n  }, {\n    key: \"getScrollTop\",\n    value: function getScrollTop() {\n      var scroller = this.getScroller();\n      return scroller === window ? scroller.pageYOffset : scroller.scrollTop;\n    }\n  }, {\n    key: \"getScrollHeight\",\n    value: function getScrollHeight() {\n      return this.getScroller().scrollHeight || mathMax(document.body.scrollHeight, document.documentElement.scrollHeight);\n    }\n  }, {\n    key: \"getOffsetHeight\",\n    value: function getOffsetHeight() {\n      var scroller = this.getScroller();\n      return scroller === window ? window.innerHeight : getBCR(scroller).height;\n    }\n  }, {\n    key: \"activate\",\n    value: function activate(target) {\n      var _this5 = this;\n\n      this.$activeTarget = target;\n      this.clear(); // Grab the list of target links (<a href=\"{$target}\">)\n\n      var links = selectAll(this.$selector // Split out the base selectors\n      .split(',') // Map to a selector that matches links with HREF ending in the ID (including '#')\n      .map(function (selector) {\n        return \"\".concat(selector, \"[href$=\\\"\").concat(target, \"\\\"]\");\n      }) // Join back into a single selector string\n      .join(','), this.$el);\n      links.forEach(function (link) {\n        if (hasClass(link, CLASS_NAME_DROPDOWN_ITEM)) {\n          // This is a dropdown item, so find the .dropdown-toggle and set its state\n          var dropdown = closest(SELECTOR_DROPDOWN, link);\n\n          if (dropdown) {\n            _this5.setActiveState(select(SELECTOR_DROPDOWN_TOGGLE, dropdown), true);\n          } // Also set this link's state\n\n\n          _this5.setActiveState(link, true);\n        } else {\n          // Set triggered link as active\n          _this5.setActiveState(link, true);\n\n          if (matches(link.parentElement, SELECTOR_NAV_ITEMS)) {\n            // Handle nav-link inside nav-item, and set nav-item active\n            _this5.setActiveState(link.parentElement, true);\n          } // Set triggered links parents as active\n          // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n\n\n          var el = link;\n\n          while (el) {\n            el = closest(SELECTOR_NAV_LIST_GROUP, el);\n            var sibling = el ? el.previousElementSibling : null;\n\n            if (sibling && matches(sibling, \"\".concat(SELECTOR_NAV_LINKS, \", \").concat(SELECTOR_LIST_ITEMS))) {\n              _this5.setActiveState(sibling, true);\n            } // Handle special case where nav-link is inside a nav-item\n\n\n            if (sibling && matches(sibling, SELECTOR_NAV_ITEMS)) {\n              _this5.setActiveState(select(SELECTOR_NAV_LINKS, sibling), true); // Add active state to nav-item as well\n\n\n              _this5.setActiveState(sibling, true);\n            }\n          }\n        }\n      }); // Signal event to via $root, passing ID of activated target and reference to array of links\n\n      if (links && links.length > 0 && this.$root) {\n        this.$root.$emit(ROOT_EVENT_NAME_ACTIVATE, target, links);\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this6 = this;\n\n      selectAll(\"\".concat(this.$selector, \", \").concat(SELECTOR_NAV_ITEMS), this.$el).filter(function (el) {\n        return hasClass(el, CLASS_NAME_ACTIVE);\n      }).forEach(function (el) {\n        return _this6.setActiveState(el, false);\n      });\n    }\n  }, {\n    key: \"setActiveState\",\n    value: function setActiveState(el, active) {\n      if (!el) {\n        return;\n      }\n\n      if (active) {\n        addClass(el, CLASS_NAME_ACTIVE);\n      } else {\n        removeClass(el, CLASS_NAME_ACTIVE);\n      }\n    }\n  }], [{\n    key: \"Name\",\n    get: function get() {\n      return NAME;\n    }\n  }, {\n    key: \"Default\",\n    get: function get() {\n      return Default;\n    }\n  }, {\n    key: \"DefaultType\",\n    get: function get() {\n      return DefaultType;\n    }\n  }]);\n\n  return BVScrollSpy;\n}();"]},"metadata":{},"sourceType":"module"}