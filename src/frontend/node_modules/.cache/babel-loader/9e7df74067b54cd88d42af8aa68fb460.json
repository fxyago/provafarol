{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { Vue, mergeData } from '../../vue';\nimport { omit } from '../../utils/object';\nimport { kebabCase, pascalCase, trim } from '../../utils/string';\nimport { BVIconBase, props as BVIconBaseProps } from './icon-base';\n/**\n * Icon component generator function\n *\n * @param {string} icon name (minus the leading `BIcon`)\n * @param {string} raw `innerHTML` for SVG\n * @return {VueComponent}\n */\n\nexport var makeIcon = function makeIcon(name, content) {\n  // For performance reason we pre-compute some values, so that\n  // they are not computed on each render of the icon component\n  var kebabName = kebabCase(name);\n  var iconName = \"BIcon\".concat(pascalCase(name));\n  var iconNameClass = \"bi-\".concat(kebabName);\n  var iconTitle = kebabName.replace(/-/g, ' ');\n  var svgContent = trim(content || '');\n  return /*#__PURE__*/Vue.extend({\n    name: iconName,\n    functional: true,\n    props: omit(BVIconBaseProps, ['content']),\n    render: function render(h, _ref) {\n      var data = _ref.data,\n          props = _ref.props;\n      return h(BVIconBase, mergeData( // Defaults\n      {\n        props: {\n          title: iconTitle\n        },\n        attrs: {\n          'aria-label': iconTitle\n        }\n      }, // User data\n      data, // Required data\n      {\n        staticClass: iconNameClass,\n        props: _objectSpread(_objectSpread({}, props), {}, {\n          content: svgContent\n        })\n      }));\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/Yago/Documents/Eclipse/Yago/farolshopping/src/frontend/farolshopping/node_modules/bootstrap-vue/esm/icons/helpers/make-icon.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","Vue","mergeData","omit","kebabCase","pascalCase","trim","BVIconBase","props","BVIconBaseProps","makeIcon","name","content","kebabName","iconName","concat","iconNameClass","iconTitle","replace","svgContent","extend","functional","render","h","_ref","data","title","attrs","staticClass"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Vue, mergeData } from '../../vue';\nimport { omit } from '../../utils/object';\nimport { kebabCase, pascalCase, trim } from '../../utils/string';\nimport { BVIconBase, props as BVIconBaseProps } from './icon-base';\n/**\n * Icon component generator function\n *\n * @param {string} icon name (minus the leading `BIcon`)\n * @param {string} raw `innerHTML` for SVG\n * @return {VueComponent}\n */\n\nexport var makeIcon = function makeIcon(name, content) {\n  // For performance reason we pre-compute some values, so that\n  // they are not computed on each render of the icon component\n  var kebabName = kebabCase(name);\n  var iconName = \"BIcon\".concat(pascalCase(name));\n  var iconNameClass = \"bi-\".concat(kebabName);\n  var iconTitle = kebabName.replace(/-/g, ' ');\n  var svgContent = trim(content || '');\n  return /*#__PURE__*/Vue.extend({\n    name: iconName,\n    functional: true,\n    props: omit(BVIconBaseProps, ['content']),\n    render: function render(h, _ref) {\n      var data = _ref.data,\n          props = _ref.props;\n      return h(BVIconBase, mergeData( // Defaults\n      {\n        props: {\n          title: iconTitle\n        },\n        attrs: {\n          'aria-label': iconTitle\n        }\n      }, // User data\n      data, // Required data\n      {\n        staticClass: iconNameClass,\n        props: _objectSpread(_objectSpread({}, props), {}, {\n          content: svgContent\n        })\n      }));\n    }\n  });\n};"]},"metadata":{},"sourceType":"module"}