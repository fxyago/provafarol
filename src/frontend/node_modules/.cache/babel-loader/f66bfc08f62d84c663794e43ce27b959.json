{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport { Vue } from '../vue';\nimport { IS_BROWSER } from '../constants/env';\nimport { EVENT_OPTIONS_NO_CAPTURE } from '../constants/events';\nimport { arrayIncludes } from '../utils/array';\nimport { eventOn, eventOff } from '../utils/events';\nimport { isString, isFunction } from '../utils/inspect';\nimport { keys } from '../utils/object'; // --- Constants ---\n\nvar PROP = '$_bv_windowHandlers_'; // --- Mixin ---\n// @vue/component\n\nexport var listenOnWindowMixin = Vue.extend({\n  beforeCreate: function beforeCreate() {\n    // Declare non-reactive property\n    // Object of arrays, keyed by event name,\n    // where value is an array of handlers\n    this[PROP] = {};\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (IS_BROWSER) {\n      var items = this[PROP]; // Immediately delete this[PROP] to prevent the\n      // listenOn/Off methods from running (which may occur\n      // due to requestAnimationFrame delays)\n\n      delete this[PROP]; // Remove all registered event handlers\n\n      keys(items).forEach(function (eventName) {\n        var handlers = items[eventName] || [];\n        handlers.forEach(function (handler) {\n          return eventOff(window, eventName, handler, EVENT_OPTIONS_NO_CAPTURE);\n        });\n      });\n    }\n  },\n  methods: {\n    listenWindow: function listenWindow(on, eventName, handler) {\n      on ? this.listenOnWindow(eventName, handler) : this.listenOffWindow(eventName, handler);\n    },\n    listenOnWindow: function listenOnWindow(eventName, handler) {\n      if (IS_BROWSER && this[PROP] && isString(eventName) && isFunction(handler)) {\n        this[PROP][eventName] = this[PROP][eventName] || [];\n\n        if (!arrayIncludes(this[PROP][eventName], handler)) {\n          this[PROP][eventName].push(handler);\n          eventOn(window, eventName, handler, EVENT_OPTIONS_NO_CAPTURE);\n        }\n      }\n    },\n    listenOffWindow: function listenOffWindow(eventName, handler) {\n      if (IS_BROWSER && this[PROP] && isString(eventName) && isFunction(handler)) {\n        eventOff(window, eventName, handler, EVENT_OPTIONS_NO_CAPTURE);\n        this[PROP][eventName] = (this[PROP][eventName] || []).filter(function (h) {\n          return h !== handler;\n        });\n      }\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/Yago/Documents/Eclipse/Yago/farolshopping/src/frontend/farolshopping/node_modules/bootstrap-vue/esm/mixins/listen-on-window.js"],"names":["Vue","IS_BROWSER","EVENT_OPTIONS_NO_CAPTURE","arrayIncludes","eventOn","eventOff","isString","isFunction","keys","PROP","listenOnWindowMixin","extend","beforeCreate","beforeDestroy","items","forEach","eventName","handlers","handler","window","methods","listenWindow","on","listenOnWindow","listenOffWindow","push","filter","h"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,QAApB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,wBAAT,QAAyC,qBAAzC;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,iBAAlC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;AACA,SAASC,IAAT,QAAqB,iBAArB,C,CAAwC;;AAExC,IAAIC,IAAI,GAAG,sBAAX,C,CAAmC;AACnC;;AAEA,OAAO,IAAIC,mBAAmB,GAAGV,GAAG,CAACW,MAAJ,CAAW;AAC1CC,EAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpC;AACA;AACA;AACA,SAAKH,IAAL,IAAa,EAAb;AACD,GANyC;AAO1CI,EAAAA,aAAa,EAAE,SAASA,aAAT,GAAyB;AACtC,QAAIZ,UAAJ,EAAgB;AACd,UAAIa,KAAK,GAAG,KAAKL,IAAL,CAAZ,CADc,CACU;AACxB;AACA;;AAEA,aAAO,KAAKA,IAAL,CAAP,CALc,CAKK;;AAEnBD,MAAAA,IAAI,CAACM,KAAD,CAAJ,CAAYC,OAAZ,CAAoB,UAAUC,SAAV,EAAqB;AACvC,YAAIC,QAAQ,GAAGH,KAAK,CAACE,SAAD,CAAL,IAAoB,EAAnC;AACAC,QAAAA,QAAQ,CAACF,OAAT,CAAiB,UAAUG,OAAV,EAAmB;AAClC,iBAAOb,QAAQ,CAACc,MAAD,EAASH,SAAT,EAAoBE,OAApB,EAA6BhB,wBAA7B,CAAf;AACD,SAFD;AAGD,OALD;AAMD;AACF,GAtByC;AAuB1CkB,EAAAA,OAAO,EAAE;AACPC,IAAAA,YAAY,EAAE,SAASA,YAAT,CAAsBC,EAAtB,EAA0BN,SAA1B,EAAqCE,OAArC,EAA8C;AAC1DI,MAAAA,EAAE,GAAG,KAAKC,cAAL,CAAoBP,SAApB,EAA+BE,OAA/B,CAAH,GAA6C,KAAKM,eAAL,CAAqBR,SAArB,EAAgCE,OAAhC,CAA/C;AACD,KAHM;AAIPK,IAAAA,cAAc,EAAE,SAASA,cAAT,CAAwBP,SAAxB,EAAmCE,OAAnC,EAA4C;AAC1D,UAAIjB,UAAU,IAAI,KAAKQ,IAAL,CAAd,IAA4BH,QAAQ,CAACU,SAAD,CAApC,IAAmDT,UAAU,CAACW,OAAD,CAAjE,EAA4E;AAC1E,aAAKT,IAAL,EAAWO,SAAX,IAAwB,KAAKP,IAAL,EAAWO,SAAX,KAAyB,EAAjD;;AAEA,YAAI,CAACb,aAAa,CAAC,KAAKM,IAAL,EAAWO,SAAX,CAAD,EAAwBE,OAAxB,CAAlB,EAAoD;AAClD,eAAKT,IAAL,EAAWO,SAAX,EAAsBS,IAAtB,CAA2BP,OAA3B;AACAd,UAAAA,OAAO,CAACe,MAAD,EAASH,SAAT,EAAoBE,OAApB,EAA6BhB,wBAA7B,CAAP;AACD;AACF;AACF,KAbM;AAcPsB,IAAAA,eAAe,EAAE,SAASA,eAAT,CAAyBR,SAAzB,EAAoCE,OAApC,EAA6C;AAC5D,UAAIjB,UAAU,IAAI,KAAKQ,IAAL,CAAd,IAA4BH,QAAQ,CAACU,SAAD,CAApC,IAAmDT,UAAU,CAACW,OAAD,CAAjE,EAA4E;AAC1Eb,QAAAA,QAAQ,CAACc,MAAD,EAASH,SAAT,EAAoBE,OAApB,EAA6BhB,wBAA7B,CAAR;AACA,aAAKO,IAAL,EAAWO,SAAX,IAAwB,CAAC,KAAKP,IAAL,EAAWO,SAAX,KAAyB,EAA1B,EAA8BU,MAA9B,CAAqC,UAAUC,CAAV,EAAa;AACxE,iBAAOA,CAAC,KAAKT,OAAb;AACD,SAFuB,CAAxB;AAGD;AACF;AArBM;AAvBiC,CAAX,CAA1B","sourcesContent":["import { Vue } from '../vue';\nimport { IS_BROWSER } from '../constants/env';\nimport { EVENT_OPTIONS_NO_CAPTURE } from '../constants/events';\nimport { arrayIncludes } from '../utils/array';\nimport { eventOn, eventOff } from '../utils/events';\nimport { isString, isFunction } from '../utils/inspect';\nimport { keys } from '../utils/object'; // --- Constants ---\n\nvar PROP = '$_bv_windowHandlers_'; // --- Mixin ---\n// @vue/component\n\nexport var listenOnWindowMixin = Vue.extend({\n  beforeCreate: function beforeCreate() {\n    // Declare non-reactive property\n    // Object of arrays, keyed by event name,\n    // where value is an array of handlers\n    this[PROP] = {};\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (IS_BROWSER) {\n      var items = this[PROP]; // Immediately delete this[PROP] to prevent the\n      // listenOn/Off methods from running (which may occur\n      // due to requestAnimationFrame delays)\n\n      delete this[PROP]; // Remove all registered event handlers\n\n      keys(items).forEach(function (eventName) {\n        var handlers = items[eventName] || [];\n        handlers.forEach(function (handler) {\n          return eventOff(window, eventName, handler, EVENT_OPTIONS_NO_CAPTURE);\n        });\n      });\n    }\n  },\n  methods: {\n    listenWindow: function listenWindow(on, eventName, handler) {\n      on ? this.listenOnWindow(eventName, handler) : this.listenOffWindow(eventName, handler);\n    },\n    listenOnWindow: function listenOnWindow(eventName, handler) {\n      if (IS_BROWSER && this[PROP] && isString(eventName) && isFunction(handler)) {\n        this[PROP][eventName] = this[PROP][eventName] || [];\n\n        if (!arrayIncludes(this[PROP][eventName], handler)) {\n          this[PROP][eventName].push(handler);\n          eventOn(window, eventName, handler, EVENT_OPTIONS_NO_CAPTURE);\n        }\n      }\n    },\n    listenOffWindow: function listenOffWindow(eventName, handler) {\n      if (IS_BROWSER && this[PROP] && isString(eventName) && isFunction(handler)) {\n        eventOff(window, eventName, handler, EVENT_OPTIONS_NO_CAPTURE);\n        this[PROP][eventName] = (this[PROP][eventName] || []).filter(function (h) {\n          return h !== handler;\n        });\n      }\n    }\n  }\n});"]},"metadata":{},"sourceType":"module"}