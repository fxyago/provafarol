{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport { IS_BROWSER, HAS_PROMISE_SUPPORT, HAS_MUTATION_OBSERVER_SUPPORT } from '../constants/env';\nimport { getNoWarn } from './env';\n/**\n * Log a warning message to the console with BootstrapVue formatting\n * @param {string} message\n */\n\nexport var warn = function warn(message)\n/* istanbul ignore next */\n{\n  var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  if (!getNoWarn()) {\n    console.warn(\"[BootstrapVue warn]: \".concat(source ? \"\".concat(source, \" - \") : '').concat(message));\n  }\n};\n/**\n * Warn when no Promise support is given\n * @param {string} source\n * @returns {boolean} warned\n */\n\nexport var warnNotClient = function warnNotClient(source) {\n  /* istanbul ignore else */\n  if (IS_BROWSER) {\n    return false;\n  } else {\n    warn(\"\".concat(source, \": Can not be called during SSR.\"));\n    return true;\n  }\n};\n/**\n * Warn when no Promise support is given\n * @param {string} source\n * @returns {boolean} warned\n */\n\nexport var warnNoPromiseSupport = function warnNoPromiseSupport(source) {\n  /* istanbul ignore else */\n  if (HAS_PROMISE_SUPPORT) {\n    return false;\n  } else {\n    warn(\"\".concat(source, \": Requires Promise support.\"));\n    return true;\n  }\n};\n/**\n * Warn when no MutationObserver support is given\n * @param {string} source\n * @returns {boolean} warned\n */\n\nexport var warnNoMutationObserverSupport = function warnNoMutationObserverSupport(source) {\n  /* istanbul ignore else */\n  if (HAS_MUTATION_OBSERVER_SUPPORT) {\n    return false;\n  } else {\n    warn(\"\".concat(source, \": Requires MutationObserver support.\"));\n    return true;\n  }\n};","map":{"version":3,"sources":["C:/Users/Yago/Documents/Eclipse/Yago/farolshopping/src/frontend/farolshopping/node_modules/bootstrap-vue/esm/utils/warn.js"],"names":["IS_BROWSER","HAS_PROMISE_SUPPORT","HAS_MUTATION_OBSERVER_SUPPORT","getNoWarn","warn","message","source","arguments","length","undefined","console","concat","warnNotClient","warnNoPromiseSupport","warnNoMutationObserverSupport"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,mBAArB,EAA0CC,6BAA1C,QAA+E,kBAA/E;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,IAAI,GAAG,SAASA,IAAT,CAAcC,OAAd;AAClB;AACA;AACE,MAAIC,MAAM,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAAjF;;AAEA,MAAI,CAACJ,SAAS,EAAd,EAAkB;AAChBO,IAAAA,OAAO,CAACN,IAAR,CAAa,wBAAwBO,MAAxB,CAA+BL,MAAM,GAAG,GAAGK,MAAH,CAAUL,MAAV,EAAkB,KAAlB,CAAH,GAA8B,EAAnE,EAAuEK,MAAvE,CAA8EN,OAA9E,CAAb;AACD;AACF,CARM;AASP;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIO,aAAa,GAAG,SAASA,aAAT,CAAuBN,MAAvB,EAA+B;AACxD;AACA,MAAIN,UAAJ,EAAgB;AACd,WAAO,KAAP;AACD,GAFD,MAEO;AACLI,IAAAA,IAAI,CAAC,GAAGO,MAAH,CAAUL,MAAV,EAAkB,iCAAlB,CAAD,CAAJ;AACA,WAAO,IAAP;AACD;AACF,CARM;AASP;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIO,oBAAoB,GAAG,SAASA,oBAAT,CAA8BP,MAA9B,EAAsC;AACtE;AACA,MAAIL,mBAAJ,EAAyB;AACvB,WAAO,KAAP;AACD,GAFD,MAEO;AACLG,IAAAA,IAAI,CAAC,GAAGO,MAAH,CAAUL,MAAV,EAAkB,6BAAlB,CAAD,CAAJ;AACA,WAAO,IAAP;AACD;AACF,CARM;AASP;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIQ,6BAA6B,GAAG,SAASA,6BAAT,CAAuCR,MAAvC,EAA+C;AACxF;AACA,MAAIJ,6BAAJ,EAAmC;AACjC,WAAO,KAAP;AACD,GAFD,MAEO;AACLE,IAAAA,IAAI,CAAC,GAAGO,MAAH,CAAUL,MAAV,EAAkB,sCAAlB,CAAD,CAAJ;AACA,WAAO,IAAP;AACD;AACF,CARM","sourcesContent":["import { IS_BROWSER, HAS_PROMISE_SUPPORT, HAS_MUTATION_OBSERVER_SUPPORT } from '../constants/env';\nimport { getNoWarn } from './env';\n/**\n * Log a warning message to the console with BootstrapVue formatting\n * @param {string} message\n */\n\nexport var warn = function warn(message)\n/* istanbul ignore next */\n{\n  var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  if (!getNoWarn()) {\n    console.warn(\"[BootstrapVue warn]: \".concat(source ? \"\".concat(source, \" - \") : '').concat(message));\n  }\n};\n/**\n * Warn when no Promise support is given\n * @param {string} source\n * @returns {boolean} warned\n */\n\nexport var warnNotClient = function warnNotClient(source) {\n  /* istanbul ignore else */\n  if (IS_BROWSER) {\n    return false;\n  } else {\n    warn(\"\".concat(source, \": Can not be called during SSR.\"));\n    return true;\n  }\n};\n/**\n * Warn when no Promise support is given\n * @param {string} source\n * @returns {boolean} warned\n */\n\nexport var warnNoPromiseSupport = function warnNoPromiseSupport(source) {\n  /* istanbul ignore else */\n  if (HAS_PROMISE_SUPPORT) {\n    return false;\n  } else {\n    warn(\"\".concat(source, \": Requires Promise support.\"));\n    return true;\n  }\n};\n/**\n * Warn when no MutationObserver support is given\n * @param {string} source\n * @returns {boolean} warned\n */\n\nexport var warnNoMutationObserverSupport = function warnNoMutationObserverSupport(source) {\n  /* istanbul ignore else */\n  if (HAS_MUTATION_OBSERVER_SUPPORT) {\n    return false;\n  } else {\n    warn(\"\".concat(source, \": Requires MutationObserver support.\"));\n    return true;\n  }\n};"]},"metadata":{},"sourceType":"module"}