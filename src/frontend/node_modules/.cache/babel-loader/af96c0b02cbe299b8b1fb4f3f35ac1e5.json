{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.array.concat.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { Vue } from '../../vue';\nimport { NAME_AVATAR } from '../../constants/components';\nimport { EVENT_NAME_CLICK, EVENT_NAME_IMG_ERROR } from '../../constants/events';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_BOOLEAN_STRING, PROP_TYPE_NUMBER_STRING, PROP_TYPE_STRING } from '../../constants/props';\nimport { SLOT_NAME_BADGE } from '../../constants/slots';\nimport { isNumber, isNumeric, isString } from '../../utils/inspect';\nimport { toFloat } from '../../utils/number';\nimport { omit, sortKeys } from '../../utils/object';\nimport { makeProp, makePropsConfigurable, pluckProps } from '../../utils/props';\nimport { isLink } from '../../utils/router';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { BIcon } from '../../icons/icon';\nimport { BIconPersonFill } from '../../icons/icons';\nimport { BButton } from '../button/button';\nimport { BLink, props as BLinkProps } from '../link/link'; // --- Constants ---\n\nvar CLASS_NAME = 'b-avatar';\nvar SIZES = ['sm', null, 'lg'];\nvar FONT_SIZE_SCALE = 0.4;\nvar BADGE_FONT_SIZE_SCALE = FONT_SIZE_SCALE * 0.7; // --- Helper methods ---\n\nexport var computeSize = function computeSize(value) {\n  // Parse to number when value is a float-like string\n  value = isString(value) && isNumeric(value) ? toFloat(value, 0) : value; // Convert all numbers to pixel values\n\n  return isNumber(value) ? \"\".concat(value, \"px\") : value || null;\n}; // --- Props ---\n\nvar linkProps = omit(BLinkProps, ['active', 'event', 'routerTag']);\nexport var props = makePropsConfigurable(sortKeys(_objectSpread(_objectSpread({}, linkProps), {}, {\n  alt: makeProp(PROP_TYPE_STRING, 'avatar'),\n  ariaLabel: makeProp(PROP_TYPE_STRING),\n  badge: makeProp(PROP_TYPE_BOOLEAN_STRING, false),\n  badgeLeft: makeProp(PROP_TYPE_BOOLEAN, false),\n  badgeOffset: makeProp(PROP_TYPE_STRING),\n  badgeTop: makeProp(PROP_TYPE_BOOLEAN, false),\n  badgeVariant: makeProp(PROP_TYPE_STRING, 'primary'),\n  button: makeProp(PROP_TYPE_BOOLEAN, false),\n  buttonType: makeProp(PROP_TYPE_STRING, 'button'),\n  icon: makeProp(PROP_TYPE_STRING),\n  rounded: makeProp(PROP_TYPE_BOOLEAN_STRING, false),\n  size: makeProp(PROP_TYPE_NUMBER_STRING),\n  square: makeProp(PROP_TYPE_BOOLEAN, false),\n  src: makeProp(PROP_TYPE_STRING),\n  text: makeProp(PROP_TYPE_STRING),\n  variant: makeProp(PROP_TYPE_STRING, 'secondary')\n})), NAME_AVATAR); // --- Main component ---\n// @vue/component\n\nexport var BAvatar = /*#__PURE__*/Vue.extend({\n  name: NAME_AVATAR,\n  mixins: [normalizeSlotMixin],\n  inject: {\n    bvAvatarGroup: {\n      default: null\n    }\n  },\n  props: props,\n  data: function data() {\n    return {\n      localSrc: this.src || null\n    };\n  },\n  computed: {\n    computedSize: function computedSize() {\n      // Always use the avatar group size\n      var bvAvatarGroup = this.bvAvatarGroup;\n      return computeSize(bvAvatarGroup ? bvAvatarGroup.size : this.size);\n    },\n    computedVariant: function computedVariant() {\n      var bvAvatarGroup = this.bvAvatarGroup;\n      return bvAvatarGroup && bvAvatarGroup.variant ? bvAvatarGroup.variant : this.variant;\n    },\n    computedRounded: function computedRounded() {\n      var bvAvatarGroup = this.bvAvatarGroup;\n      var square = bvAvatarGroup && bvAvatarGroup.square ? true : this.square;\n      var rounded = bvAvatarGroup && bvAvatarGroup.rounded ? bvAvatarGroup.rounded : this.rounded;\n      return square ? '0' : rounded === '' ? true : rounded || 'circle';\n    },\n    fontStyle: function fontStyle() {\n      var size = this.computedSize;\n      var fontSize = SIZES.indexOf(size) === -1 ? \"calc(\".concat(size, \" * \").concat(FONT_SIZE_SCALE, \")\") : null;\n      return fontSize ? {\n        fontSize: fontSize\n      } : {};\n    },\n    marginStyle: function marginStyle() {\n      var size = this.computedSize,\n          bvAvatarGroup = this.bvAvatarGroup;\n      var overlapScale = bvAvatarGroup ? bvAvatarGroup.overlapScale : 0;\n      var value = size && overlapScale ? \"calc(\".concat(size, \" * -\").concat(overlapScale, \")\") : null;\n      return value ? {\n        marginLeft: value,\n        marginRight: value\n      } : {};\n    },\n    badgeStyle: function badgeStyle() {\n      var size = this.computedSize,\n          badgeTop = this.badgeTop,\n          badgeLeft = this.badgeLeft,\n          badgeOffset = this.badgeOffset;\n      var offset = badgeOffset || '0px';\n      return {\n        fontSize: SIZES.indexOf(size) === -1 ? \"calc(\".concat(size, \" * \").concat(BADGE_FONT_SIZE_SCALE, \" )\") : null,\n        top: badgeTop ? offset : null,\n        bottom: badgeTop ? null : offset,\n        left: badgeLeft ? offset : null,\n        right: badgeLeft ? null : offset\n      };\n    }\n  },\n  watch: {\n    src: function src(newValue, oldValue) {\n      if (newValue !== oldValue) {\n        this.localSrc = newValue || null;\n      }\n    }\n  },\n  methods: {\n    onImgError: function onImgError(event) {\n      this.localSrc = null;\n      this.$emit(EVENT_NAME_IMG_ERROR, event);\n    },\n    onClick: function onClick(event) {\n      this.$emit(EVENT_NAME_CLICK, event);\n    }\n  },\n  render: function render(h) {\n    var _class2;\n\n    var variant = this.computedVariant,\n        disabled = this.disabled,\n        rounded = this.computedRounded,\n        icon = this.icon,\n        src = this.localSrc,\n        text = this.text,\n        fontStyle = this.fontStyle,\n        marginStyle = this.marginStyle,\n        size = this.computedSize,\n        button = this.button,\n        type = this.buttonType,\n        badge = this.badge,\n        badgeVariant = this.badgeVariant,\n        badgeStyle = this.badgeStyle;\n    var link = !button && isLink(this);\n    var tag = button ? BButton : link ? BLink : 'span';\n    var alt = this.alt;\n    var ariaLabel = this.ariaLabel || null;\n    var $content = null;\n\n    if (this.hasNormalizedSlot()) {\n      // Default slot overrides props\n      $content = h('span', {\n        staticClass: 'b-avatar-custom'\n      }, [this.normalizeSlot()]);\n    } else if (src) {\n      $content = h('img', {\n        style: variant ? {} : {\n          width: '100%',\n          height: '100%'\n        },\n        attrs: {\n          src: src,\n          alt: alt\n        },\n        on: {\n          error: this.onImgError\n        }\n      });\n      $content = h('span', {\n        staticClass: 'b-avatar-img'\n      }, [$content]);\n    } else if (icon) {\n      $content = h(BIcon, {\n        props: {\n          icon: icon\n        },\n        attrs: {\n          'aria-hidden': 'true',\n          alt: alt\n        }\n      });\n    } else if (text) {\n      $content = h('span', {\n        staticClass: 'b-avatar-text',\n        style: fontStyle\n      }, [h('span', text)]);\n    } else {\n      // Fallback default avatar content\n      $content = h(BIconPersonFill, {\n        attrs: {\n          'aria-hidden': 'true',\n          alt: alt\n        }\n      });\n    }\n\n    var $badge = h();\n    var hasBadgeSlot = this.hasNormalizedSlot(SLOT_NAME_BADGE);\n\n    if (badge || badge === '' || hasBadgeSlot) {\n      var badgeText = badge === true ? '' : badge;\n      $badge = h('span', {\n        staticClass: 'b-avatar-badge',\n        class: _defineProperty({}, \"badge-\".concat(badgeVariant), badgeVariant),\n        style: badgeStyle\n      }, [hasBadgeSlot ? this.normalizeSlot(SLOT_NAME_BADGE) : badgeText]);\n    }\n\n    var componentData = {\n      staticClass: CLASS_NAME,\n      class: (_class2 = {}, _defineProperty(_class2, \"\".concat(CLASS_NAME, \"-\").concat(size), size && SIZES.indexOf(size) !== -1), _defineProperty(_class2, \"badge-\".concat(variant), !button && variant), _defineProperty(_class2, \"rounded\", rounded === true), _defineProperty(_class2, \"rounded-\".concat(rounded), rounded && rounded !== true), _defineProperty(_class2, \"disabled\", disabled), _class2),\n      style: _objectSpread(_objectSpread({}, marginStyle), {}, {\n        width: size,\n        height: size\n      }),\n      attrs: {\n        'aria-label': ariaLabel || null\n      },\n      props: button ? {\n        variant: variant,\n        disabled: disabled,\n        type: type\n      } : link ? pluckProps(linkProps, this) : {},\n      on: button || link ? {\n        click: this.onClick\n      } : {}\n    };\n    return h(tag, componentData, [$content, $badge]);\n  }\n});","map":{"version":3,"sources":["C:/Users/Yago/Documents/Eclipse/Yago/farolshopping/src/frontend/farolshopping/node_modules/bootstrap-vue/esm/components/avatar/avatar.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","Vue","NAME_AVATAR","EVENT_NAME_CLICK","EVENT_NAME_IMG_ERROR","PROP_TYPE_BOOLEAN","PROP_TYPE_BOOLEAN_STRING","PROP_TYPE_NUMBER_STRING","PROP_TYPE_STRING","SLOT_NAME_BADGE","isNumber","isNumeric","isString","toFloat","omit","sortKeys","makeProp","makePropsConfigurable","pluckProps","isLink","normalizeSlotMixin","BIcon","BIconPersonFill","BButton","BLink","props","BLinkProps","CLASS_NAME","SIZES","FONT_SIZE_SCALE","BADGE_FONT_SIZE_SCALE","computeSize","concat","linkProps","alt","ariaLabel","badge","badgeLeft","badgeOffset","badgeTop","badgeVariant","button","buttonType","icon","rounded","size","square","src","text","variant","BAvatar","extend","name","mixins","inject","bvAvatarGroup","default","data","localSrc","computed","computedSize","computedVariant","computedRounded","fontStyle","fontSize","indexOf","marginStyle","overlapScale","marginLeft","marginRight","badgeStyle","offset","top","bottom","left","right","watch","newValue","oldValue","methods","onImgError","event","$emit","onClick","render","h","_class2","disabled","type","link","tag","$content","hasNormalizedSlot","staticClass","normalizeSlot","style","width","height","attrs","on","error","$badge","hasBadgeSlot","badgeText","class","componentData","click"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Vue } from '../../vue';\nimport { NAME_AVATAR } from '../../constants/components';\nimport { EVENT_NAME_CLICK, EVENT_NAME_IMG_ERROR } from '../../constants/events';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_BOOLEAN_STRING, PROP_TYPE_NUMBER_STRING, PROP_TYPE_STRING } from '../../constants/props';\nimport { SLOT_NAME_BADGE } from '../../constants/slots';\nimport { isNumber, isNumeric, isString } from '../../utils/inspect';\nimport { toFloat } from '../../utils/number';\nimport { omit, sortKeys } from '../../utils/object';\nimport { makeProp, makePropsConfigurable, pluckProps } from '../../utils/props';\nimport { isLink } from '../../utils/router';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { BIcon } from '../../icons/icon';\nimport { BIconPersonFill } from '../../icons/icons';\nimport { BButton } from '../button/button';\nimport { BLink, props as BLinkProps } from '../link/link'; // --- Constants ---\n\nvar CLASS_NAME = 'b-avatar';\nvar SIZES = ['sm', null, 'lg'];\nvar FONT_SIZE_SCALE = 0.4;\nvar BADGE_FONT_SIZE_SCALE = FONT_SIZE_SCALE * 0.7; // --- Helper methods ---\n\nexport var computeSize = function computeSize(value) {\n  // Parse to number when value is a float-like string\n  value = isString(value) && isNumeric(value) ? toFloat(value, 0) : value; // Convert all numbers to pixel values\n\n  return isNumber(value) ? \"\".concat(value, \"px\") : value || null;\n}; // --- Props ---\n\nvar linkProps = omit(BLinkProps, ['active', 'event', 'routerTag']);\nexport var props = makePropsConfigurable(sortKeys(_objectSpread(_objectSpread({}, linkProps), {}, {\n  alt: makeProp(PROP_TYPE_STRING, 'avatar'),\n  ariaLabel: makeProp(PROP_TYPE_STRING),\n  badge: makeProp(PROP_TYPE_BOOLEAN_STRING, false),\n  badgeLeft: makeProp(PROP_TYPE_BOOLEAN, false),\n  badgeOffset: makeProp(PROP_TYPE_STRING),\n  badgeTop: makeProp(PROP_TYPE_BOOLEAN, false),\n  badgeVariant: makeProp(PROP_TYPE_STRING, 'primary'),\n  button: makeProp(PROP_TYPE_BOOLEAN, false),\n  buttonType: makeProp(PROP_TYPE_STRING, 'button'),\n  icon: makeProp(PROP_TYPE_STRING),\n  rounded: makeProp(PROP_TYPE_BOOLEAN_STRING, false),\n  size: makeProp(PROP_TYPE_NUMBER_STRING),\n  square: makeProp(PROP_TYPE_BOOLEAN, false),\n  src: makeProp(PROP_TYPE_STRING),\n  text: makeProp(PROP_TYPE_STRING),\n  variant: makeProp(PROP_TYPE_STRING, 'secondary')\n})), NAME_AVATAR); // --- Main component ---\n// @vue/component\n\nexport var BAvatar = /*#__PURE__*/Vue.extend({\n  name: NAME_AVATAR,\n  mixins: [normalizeSlotMixin],\n  inject: {\n    bvAvatarGroup: {\n      default: null\n    }\n  },\n  props: props,\n  data: function data() {\n    return {\n      localSrc: this.src || null\n    };\n  },\n  computed: {\n    computedSize: function computedSize() {\n      // Always use the avatar group size\n      var bvAvatarGroup = this.bvAvatarGroup;\n      return computeSize(bvAvatarGroup ? bvAvatarGroup.size : this.size);\n    },\n    computedVariant: function computedVariant() {\n      var bvAvatarGroup = this.bvAvatarGroup;\n      return bvAvatarGroup && bvAvatarGroup.variant ? bvAvatarGroup.variant : this.variant;\n    },\n    computedRounded: function computedRounded() {\n      var bvAvatarGroup = this.bvAvatarGroup;\n      var square = bvAvatarGroup && bvAvatarGroup.square ? true : this.square;\n      var rounded = bvAvatarGroup && bvAvatarGroup.rounded ? bvAvatarGroup.rounded : this.rounded;\n      return square ? '0' : rounded === '' ? true : rounded || 'circle';\n    },\n    fontStyle: function fontStyle() {\n      var size = this.computedSize;\n      var fontSize = SIZES.indexOf(size) === -1 ? \"calc(\".concat(size, \" * \").concat(FONT_SIZE_SCALE, \")\") : null;\n      return fontSize ? {\n        fontSize: fontSize\n      } : {};\n    },\n    marginStyle: function marginStyle() {\n      var size = this.computedSize,\n          bvAvatarGroup = this.bvAvatarGroup;\n      var overlapScale = bvAvatarGroup ? bvAvatarGroup.overlapScale : 0;\n      var value = size && overlapScale ? \"calc(\".concat(size, \" * -\").concat(overlapScale, \")\") : null;\n      return value ? {\n        marginLeft: value,\n        marginRight: value\n      } : {};\n    },\n    badgeStyle: function badgeStyle() {\n      var size = this.computedSize,\n          badgeTop = this.badgeTop,\n          badgeLeft = this.badgeLeft,\n          badgeOffset = this.badgeOffset;\n      var offset = badgeOffset || '0px';\n      return {\n        fontSize: SIZES.indexOf(size) === -1 ? \"calc(\".concat(size, \" * \").concat(BADGE_FONT_SIZE_SCALE, \" )\") : null,\n        top: badgeTop ? offset : null,\n        bottom: badgeTop ? null : offset,\n        left: badgeLeft ? offset : null,\n        right: badgeLeft ? null : offset\n      };\n    }\n  },\n  watch: {\n    src: function src(newValue, oldValue) {\n      if (newValue !== oldValue) {\n        this.localSrc = newValue || null;\n      }\n    }\n  },\n  methods: {\n    onImgError: function onImgError(event) {\n      this.localSrc = null;\n      this.$emit(EVENT_NAME_IMG_ERROR, event);\n    },\n    onClick: function onClick(event) {\n      this.$emit(EVENT_NAME_CLICK, event);\n    }\n  },\n  render: function render(h) {\n    var _class2;\n\n    var variant = this.computedVariant,\n        disabled = this.disabled,\n        rounded = this.computedRounded,\n        icon = this.icon,\n        src = this.localSrc,\n        text = this.text,\n        fontStyle = this.fontStyle,\n        marginStyle = this.marginStyle,\n        size = this.computedSize,\n        button = this.button,\n        type = this.buttonType,\n        badge = this.badge,\n        badgeVariant = this.badgeVariant,\n        badgeStyle = this.badgeStyle;\n    var link = !button && isLink(this);\n    var tag = button ? BButton : link ? BLink : 'span';\n    var alt = this.alt;\n    var ariaLabel = this.ariaLabel || null;\n    var $content = null;\n\n    if (this.hasNormalizedSlot()) {\n      // Default slot overrides props\n      $content = h('span', {\n        staticClass: 'b-avatar-custom'\n      }, [this.normalizeSlot()]);\n    } else if (src) {\n      $content = h('img', {\n        style: variant ? {} : {\n          width: '100%',\n          height: '100%'\n        },\n        attrs: {\n          src: src,\n          alt: alt\n        },\n        on: {\n          error: this.onImgError\n        }\n      });\n      $content = h('span', {\n        staticClass: 'b-avatar-img'\n      }, [$content]);\n    } else if (icon) {\n      $content = h(BIcon, {\n        props: {\n          icon: icon\n        },\n        attrs: {\n          'aria-hidden': 'true',\n          alt: alt\n        }\n      });\n    } else if (text) {\n      $content = h('span', {\n        staticClass: 'b-avatar-text',\n        style: fontStyle\n      }, [h('span', text)]);\n    } else {\n      // Fallback default avatar content\n      $content = h(BIconPersonFill, {\n        attrs: {\n          'aria-hidden': 'true',\n          alt: alt\n        }\n      });\n    }\n\n    var $badge = h();\n    var hasBadgeSlot = this.hasNormalizedSlot(SLOT_NAME_BADGE);\n\n    if (badge || badge === '' || hasBadgeSlot) {\n      var badgeText = badge === true ? '' : badge;\n      $badge = h('span', {\n        staticClass: 'b-avatar-badge',\n        class: _defineProperty({}, \"badge-\".concat(badgeVariant), badgeVariant),\n        style: badgeStyle\n      }, [hasBadgeSlot ? this.normalizeSlot(SLOT_NAME_BADGE) : badgeText]);\n    }\n\n    var componentData = {\n      staticClass: CLASS_NAME,\n      class: (_class2 = {}, _defineProperty(_class2, \"\".concat(CLASS_NAME, \"-\").concat(size), size && SIZES.indexOf(size) !== -1), _defineProperty(_class2, \"badge-\".concat(variant), !button && variant), _defineProperty(_class2, \"rounded\", rounded === true), _defineProperty(_class2, \"rounded-\".concat(rounded), rounded && rounded !== true), _defineProperty(_class2, \"disabled\", disabled), _class2),\n      style: _objectSpread(_objectSpread({}, marginStyle), {}, {\n        width: size,\n        height: size\n      }),\n      attrs: {\n        'aria-label': ariaLabel || null\n      },\n      props: button ? {\n        variant: variant,\n        disabled: disabled,\n        type: type\n      } : link ? pluckProps(linkProps, this) : {},\n      on: button || link ? {\n        click: this.onClick\n      } : {}\n    };\n    return h(tag, componentData, [$content, $badge]);\n  }\n});"]},"metadata":{},"sourceType":"module"}