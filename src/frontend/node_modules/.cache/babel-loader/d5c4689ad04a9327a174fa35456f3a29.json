{"ast":null,"code":"import { Vue } from '../vue'; // @vue/component\n\nexport var formValidityMixin = Vue.extend({\n  computed: {\n    validity: {\n      // Expose validity property\n      cache: false,\n\n      /* istanbul ignore next */\n      get: function get() {\n        return this.$refs.input.validity;\n      }\n    },\n    validationMessage: {\n      // Expose validationMessage property\n      cache: false,\n\n      /* istanbul ignore next */\n      get: function get() {\n        return this.$refs.input.validationMessage;\n      }\n    },\n    willValidate: {\n      // Expose willValidate property\n      cache: false,\n\n      /* istanbul ignore next */\n      get: function get() {\n        return this.$refs.input.willValidate;\n      }\n    }\n  },\n  methods: {\n    /* istanbul ignore next */\n    setCustomValidity: function setCustomValidity() {\n      var _this$$refs$input; // For external handler that may want a setCustomValidity(...) method\n\n\n      return (_this$$refs$input = this.$refs.input).setCustomValidity.apply(_this$$refs$input, arguments);\n    },\n\n    /* istanbul ignore next */\n    checkValidity: function checkValidity() {\n      var _this$$refs$input2; // For external handler that may want a checkValidity(...) method\n\n\n      return (_this$$refs$input2 = this.$refs.input).checkValidity.apply(_this$$refs$input2, arguments);\n    },\n\n    /* istanbul ignore next */\n    reportValidity: function reportValidity() {\n      var _this$$refs$input3; // For external handler that may want a reportValidity(...) method\n\n\n      return (_this$$refs$input3 = this.$refs.input).reportValidity.apply(_this$$refs$input3, arguments);\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/Yago/Documents/Eclipse/Yago/farolshopping/src/frontend/farolshopping/node_modules/bootstrap-vue/esm/mixins/form-validity.js"],"names":["Vue","formValidityMixin","extend","computed","validity","cache","get","$refs","input","validationMessage","willValidate","methods","setCustomValidity","_this$$refs$input","apply","arguments","checkValidity","_this$$refs$input2","reportValidity","_this$$refs$input3"],"mappings":"AAAA,SAASA,GAAT,QAAoB,QAApB,C,CAA8B;;AAE9B,OAAO,IAAIC,iBAAiB,GAAGD,GAAG,CAACE,MAAJ,CAAW;AACxCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE;AACR;AACAC,MAAAA,KAAK,EAAE,KAFC;;AAIR;AACAC,MAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,eAAO,KAAKC,KAAL,CAAWC,KAAX,CAAiBJ,QAAxB;AACD;AAPO,KADF;AAURK,IAAAA,iBAAiB,EAAE;AACjB;AACAJ,MAAAA,KAAK,EAAE,KAFU;;AAIjB;AACAC,MAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,eAAO,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,iBAAxB;AACD;AAPgB,KAVX;AAmBRC,IAAAA,YAAY,EAAE;AACZ;AACAL,MAAAA,KAAK,EAAE,KAFK;;AAIZ;AACAC,MAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,eAAO,KAAKC,KAAL,CAAWC,KAAX,CAAiBE,YAAxB;AACD;AAPW;AAnBN,GAD8B;AA8BxCC,EAAAA,OAAO,EAAE;AACP;AACAC,IAAAA,iBAAiB,EAAE,SAASA,iBAAT,GAA6B;AAC9C,UAAIC,iBAAJ,CAD8C,CAG9C;;;AACA,aAAO,CAACA,iBAAiB,GAAG,KAAKN,KAAL,CAAWC,KAAhC,EAAuCI,iBAAvC,CAAyDE,KAAzD,CAA+DD,iBAA/D,EAAkFE,SAAlF,CAAP;AACD,KAPM;;AASP;AACAC,IAAAA,aAAa,EAAE,SAASA,aAAT,GAAyB;AACtC,UAAIC,kBAAJ,CADsC,CAGtC;;;AACA,aAAO,CAACA,kBAAkB,GAAG,KAAKV,KAAL,CAAWC,KAAjC,EAAwCQ,aAAxC,CAAsDF,KAAtD,CAA4DG,kBAA5D,EAAgFF,SAAhF,CAAP;AACD,KAfM;;AAiBP;AACAG,IAAAA,cAAc,EAAE,SAASA,cAAT,GAA0B;AACxC,UAAIC,kBAAJ,CADwC,CAGxC;;;AACA,aAAO,CAACA,kBAAkB,GAAG,KAAKZ,KAAL,CAAWC,KAAjC,EAAwCU,cAAxC,CAAuDJ,KAAvD,CAA6DK,kBAA7D,EAAiFJ,SAAjF,CAAP;AACD;AAvBM;AA9B+B,CAAX,CAAxB","sourcesContent":["import { Vue } from '../vue'; // @vue/component\n\nexport var formValidityMixin = Vue.extend({\n  computed: {\n    validity: {\n      // Expose validity property\n      cache: false,\n\n      /* istanbul ignore next */\n      get: function get() {\n        return this.$refs.input.validity;\n      }\n    },\n    validationMessage: {\n      // Expose validationMessage property\n      cache: false,\n\n      /* istanbul ignore next */\n      get: function get() {\n        return this.$refs.input.validationMessage;\n      }\n    },\n    willValidate: {\n      // Expose willValidate property\n      cache: false,\n\n      /* istanbul ignore next */\n      get: function get() {\n        return this.$refs.input.willValidate;\n      }\n    }\n  },\n  methods: {\n    /* istanbul ignore next */\n    setCustomValidity: function setCustomValidity() {\n      var _this$$refs$input;\n\n      // For external handler that may want a setCustomValidity(...) method\n      return (_this$$refs$input = this.$refs.input).setCustomValidity.apply(_this$$refs$input, arguments);\n    },\n\n    /* istanbul ignore next */\n    checkValidity: function checkValidity() {\n      var _this$$refs$input2;\n\n      // For external handler that may want a checkValidity(...) method\n      return (_this$$refs$input2 = this.$refs.input).checkValidity.apply(_this$$refs$input2, arguments);\n    },\n\n    /* istanbul ignore next */\n    reportValidity: function reportValidity() {\n      var _this$$refs$input3;\n\n      // For external handler that may want a reportValidity(...) method\n      return (_this$$refs$input3 = this.$refs.input).reportValidity.apply(_this$$refs$input3, arguments);\n    }\n  }\n});"]},"metadata":{},"sourceType":"module"}