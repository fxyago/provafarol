{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.array.map.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { Vue, mergeData } from '../../vue';\nimport { NAME_BREADCRUMB } from '../../constants/components';\nimport { PROP_TYPE_ARRAY } from '../../constants/props';\nimport { isArray, isObject } from '../../utils/inspect';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { toString } from '../../utils/string';\nimport { BBreadcrumbItem } from './breadcrumb-item'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  items: makeProp(PROP_TYPE_ARRAY)\n}, NAME_BREADCRUMB); // --- Main component ---\n// @vue/component\n\nexport var BBreadcrumb = /*#__PURE__*/Vue.extend({\n  name: NAME_BREADCRUMB,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        children = _ref.children;\n    var items = props.items; // Build child nodes from items, if given\n\n    var childNodes = children;\n\n    if (isArray(items)) {\n      var activeDefined = false;\n      childNodes = items.map(function (item, idx) {\n        if (!isObject(item)) {\n          item = {\n            text: toString(item)\n          };\n        } // Copy the value here so we can normalize it\n\n\n        var _item = item,\n            active = _item.active;\n\n        if (active) {\n          activeDefined = true;\n        } // Auto-detect active by position in list\n\n\n        if (!active && !activeDefined) {\n          active = idx + 1 === items.length;\n        }\n\n        return h(BBreadcrumbItem, {\n          props: _objectSpread(_objectSpread({}, item), {}, {\n            active: active\n          })\n        });\n      });\n    }\n\n    return h('ol', mergeData(data, {\n      staticClass: 'breadcrumb'\n    }), childNodes);\n  }\n});","map":{"version":3,"sources":["C:/Users/Yago/Documents/Eclipse/Yago/farolshopping/src/frontend/farolshopping/node_modules/bootstrap-vue/esm/components/breadcrumb/breadcrumb.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","Vue","mergeData","NAME_BREADCRUMB","PROP_TYPE_ARRAY","isArray","isObject","makeProp","makePropsConfigurable","toString","BBreadcrumbItem","props","items","BBreadcrumb","extend","name","functional","render","h","_ref","data","children","childNodes","activeDefined","map","item","idx","text","_item","active","staticClass"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Vue, mergeData } from '../../vue';\nimport { NAME_BREADCRUMB } from '../../constants/components';\nimport { PROP_TYPE_ARRAY } from '../../constants/props';\nimport { isArray, isObject } from '../../utils/inspect';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { toString } from '../../utils/string';\nimport { BBreadcrumbItem } from './breadcrumb-item'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  items: makeProp(PROP_TYPE_ARRAY)\n}, NAME_BREADCRUMB); // --- Main component ---\n// @vue/component\n\nexport var BBreadcrumb = /*#__PURE__*/Vue.extend({\n  name: NAME_BREADCRUMB,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        children = _ref.children;\n    var items = props.items; // Build child nodes from items, if given\n\n    var childNodes = children;\n\n    if (isArray(items)) {\n      var activeDefined = false;\n      childNodes = items.map(function (item, idx) {\n        if (!isObject(item)) {\n          item = {\n            text: toString(item)\n          };\n        } // Copy the value here so we can normalize it\n\n\n        var _item = item,\n            active = _item.active;\n\n        if (active) {\n          activeDefined = true;\n        } // Auto-detect active by position in list\n\n\n        if (!active && !activeDefined) {\n          active = idx + 1 === items.length;\n        }\n\n        return h(BBreadcrumbItem, {\n          props: _objectSpread(_objectSpread({}, item), {}, {\n            active: active\n          })\n        });\n      });\n    }\n\n    return h('ol', mergeData(data, {\n      staticClass: 'breadcrumb'\n    }), childNodes);\n  }\n});"]},"metadata":{},"sourceType":"module"}