{"ast":null,"code":"import \"core-js/modules/es.string.fixed.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { Vue } from '../../vue';\nimport { NAME_NAVBAR } from '../../constants/components';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_BOOLEAN_STRING, PROP_TYPE_STRING } from '../../constants/props';\nimport { getBreakpoints } from '../../utils/config';\nimport { isTag } from '../../utils/dom';\nimport { isString } from '../../utils/inspect';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  fixed: makeProp(PROP_TYPE_STRING),\n  print: makeProp(PROP_TYPE_BOOLEAN, false),\n  sticky: makeProp(PROP_TYPE_BOOLEAN, false),\n  tag: makeProp(PROP_TYPE_STRING, 'nav'),\n  toggleable: makeProp(PROP_TYPE_BOOLEAN_STRING, false),\n  type: makeProp(PROP_TYPE_STRING, 'light'),\n  variant: makeProp(PROP_TYPE_STRING)\n}, NAME_NAVBAR); // --- Main component ---\n// @vue/component\n\nexport var BNavbar = /*#__PURE__*/Vue.extend({\n  name: NAME_NAVBAR,\n  mixins: [normalizeSlotMixin],\n  provide: function provide() {\n    return {\n      bvNavbar: this\n    };\n  },\n  props: props,\n  computed: {\n    breakpointClass: function breakpointClass() {\n      var toggleable = this.toggleable;\n      var xs = getBreakpoints()[0];\n      var breakpoint = null;\n\n      if (toggleable && isString(toggleable) && toggleable !== xs) {\n        breakpoint = \"navbar-expand-\".concat(toggleable);\n      } else if (toggleable === false) {\n        breakpoint = 'navbar-expand';\n      }\n\n      return breakpoint;\n    }\n  },\n  render: function render(h) {\n    var _ref;\n\n    var tag = this.tag,\n        type = this.type,\n        variant = this.variant,\n        fixed = this.fixed;\n    return h(tag, {\n      staticClass: 'navbar',\n      class: [(_ref = {\n        'd-print': this.print,\n        'sticky-top': this.sticky\n      }, _defineProperty(_ref, \"navbar-\".concat(type), type), _defineProperty(_ref, \"bg-\".concat(variant), variant), _defineProperty(_ref, \"fixed-\".concat(fixed), fixed), _ref), this.breakpointClass],\n      attrs: {\n        role: isTag(tag, 'nav') ? null : 'navigation'\n      }\n    }, [this.normalizeSlot()]);\n  }\n});","map":{"version":3,"sources":["C:/Users/Yago/Documents/Eclipse/Yago/farolshopping/src/frontend/farolshopping/node_modules/bootstrap-vue/esm/components/navbar/navbar.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Vue","NAME_NAVBAR","PROP_TYPE_BOOLEAN","PROP_TYPE_BOOLEAN_STRING","PROP_TYPE_STRING","getBreakpoints","isTag","isString","makeProp","makePropsConfigurable","normalizeSlotMixin","props","fixed","print","sticky","tag","toggleable","type","variant","BNavbar","extend","name","mixins","provide","bvNavbar","computed","breakpointClass","xs","breakpoint","concat","render","h","_ref","staticClass","class","attrs","role","normalizeSlot"],"mappings":"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","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Vue } from '../../vue';\nimport { NAME_NAVBAR } from '../../constants/components';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_BOOLEAN_STRING, PROP_TYPE_STRING } from '../../constants/props';\nimport { getBreakpoints } from '../../utils/config';\nimport { isTag } from '../../utils/dom';\nimport { isString } from '../../utils/inspect';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  fixed: makeProp(PROP_TYPE_STRING),\n  print: makeProp(PROP_TYPE_BOOLEAN, false),\n  sticky: makeProp(PROP_TYPE_BOOLEAN, false),\n  tag: makeProp(PROP_TYPE_STRING, 'nav'),\n  toggleable: makeProp(PROP_TYPE_BOOLEAN_STRING, false),\n  type: makeProp(PROP_TYPE_STRING, 'light'),\n  variant: makeProp(PROP_TYPE_STRING)\n}, NAME_NAVBAR); // --- Main component ---\n// @vue/component\n\nexport var BNavbar = /*#__PURE__*/Vue.extend({\n  name: NAME_NAVBAR,\n  mixins: [normalizeSlotMixin],\n  provide: function provide() {\n    return {\n      bvNavbar: this\n    };\n  },\n  props: props,\n  computed: {\n    breakpointClass: function breakpointClass() {\n      var toggleable = this.toggleable;\n      var xs = getBreakpoints()[0];\n      var breakpoint = null;\n\n      if (toggleable && isString(toggleable) && toggleable !== xs) {\n        breakpoint = \"navbar-expand-\".concat(toggleable);\n      } else if (toggleable === false) {\n        breakpoint = 'navbar-expand';\n      }\n\n      return breakpoint;\n    }\n  },\n  render: function render(h) {\n    var _ref;\n\n    var tag = this.tag,\n        type = this.type,\n        variant = this.variant,\n        fixed = this.fixed;\n    return h(tag, {\n      staticClass: 'navbar',\n      class: [(_ref = {\n        'd-print': this.print,\n        'sticky-top': this.sticky\n      }, _defineProperty(_ref, \"navbar-\".concat(type), type), _defineProperty(_ref, \"bg-\".concat(variant), variant), _defineProperty(_ref, \"fixed-\".concat(fixed), fixed), _ref), this.breakpointClass],\n      attrs: {\n        role: isTag(tag, 'nav') ? null : 'navigation'\n      }\n    }, [this.normalizeSlot()]);\n  }\n});"]},"metadata":{},"sourceType":"module"}