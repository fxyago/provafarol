{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { Vue } from '../../vue';\nimport { NAME_DROPDOWN } from '../../constants/components';\nimport { PROP_TYPE_ARRAY_OBJECT_STRING, PROP_TYPE_BOOLEAN, PROP_TYPE_OBJECT_STRING, PROP_TYPE_STRING } from '../../constants/props';\nimport { SLOT_NAME_BUTTON_CONTENT, SLOT_NAME_DEFAULT } from '../../constants/slots';\nimport { arrayIncludes } from '../../utils/array';\nimport { htmlOrText } from '../../utils/html';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { toString } from '../../utils/string';\nimport { dropdownMixin, props as dropdownProps } from '../../mixins/dropdown';\nimport { idMixin, props as idProps } from '../../mixins/id';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { BButton } from '../button/button';\nimport { sortKeys } from '../../utils/object'; // --- Props ---\n\nexport var props = makePropsConfigurable(sortKeys(_objectSpread(_objectSpread(_objectSpread({}, idProps), dropdownProps), {}, {\n  block: makeProp(PROP_TYPE_BOOLEAN, false),\n  html: makeProp(PROP_TYPE_STRING),\n  // If `true`, only render menu contents when open\n  lazy: makeProp(PROP_TYPE_BOOLEAN, false),\n  menuClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\n  noCaret: makeProp(PROP_TYPE_BOOLEAN, false),\n  role: makeProp(PROP_TYPE_STRING, 'menu'),\n  size: makeProp(PROP_TYPE_STRING),\n  split: makeProp(PROP_TYPE_BOOLEAN, false),\n  splitButtonType: makeProp(PROP_TYPE_STRING, 'button', function (value) {\n    return arrayIncludes(['button', 'submit', 'reset'], value);\n  }),\n  splitClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\n  splitHref: makeProp(PROP_TYPE_STRING),\n  splitTo: makeProp(PROP_TYPE_OBJECT_STRING),\n  splitVariant: makeProp(PROP_TYPE_STRING),\n  text: makeProp(PROP_TYPE_STRING),\n  toggleClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\n  toggleTag: makeProp(PROP_TYPE_STRING, 'button'),\n  // TODO: This really should be `toggleLabel`\n  toggleText: makeProp(PROP_TYPE_STRING, 'Toggle dropdown'),\n  variant: makeProp(PROP_TYPE_STRING, 'secondary')\n})), NAME_DROPDOWN); // --- Main component ---\n// @vue/component\n\nexport var BDropdown = /*#__PURE__*/Vue.extend({\n  name: NAME_DROPDOWN,\n  mixins: [idMixin, dropdownMixin, normalizeSlotMixin],\n  props: props,\n  computed: {\n    dropdownClasses: function dropdownClasses() {\n      var block = this.block,\n          split = this.split;\n      return [this.directionClass, this.boundaryClass, {\n        show: this.visible,\n        // The 'btn-group' class is required in `split` mode for button alignment\n        // It needs also to be applied when `block` is disabled to allow multiple\n        // dropdowns to be aligned one line\n        'btn-group': split || !block,\n        // When `block` is enabled and we are in `split` mode the 'd-flex' class\n        // needs to be applied to allow the buttons to stretch to full width\n        'd-flex': block && split\n      }];\n    },\n    menuClasses: function menuClasses() {\n      return [this.menuClass, {\n        'dropdown-menu-right': this.right,\n        show: this.visible\n      }];\n    },\n    toggleClasses: function toggleClasses() {\n      var split = this.split;\n      return [this.toggleClass, {\n        'dropdown-toggle-split': split,\n        'dropdown-toggle-no-caret': this.noCaret && !split\n      }];\n    }\n  },\n  render: function render(h) {\n    var visible = this.visible,\n        variant = this.variant,\n        size = this.size,\n        block = this.block,\n        disabled = this.disabled,\n        split = this.split,\n        role = this.role,\n        hide = this.hide,\n        toggle = this.toggle;\n    var commonProps = {\n      variant: variant,\n      size: size,\n      block: block,\n      disabled: disabled\n    };\n    var $buttonChildren = this.normalizeSlot(SLOT_NAME_BUTTON_CONTENT);\n    var buttonContentDomProps = this.hasNormalizedSlot(SLOT_NAME_BUTTON_CONTENT) ? {} : htmlOrText(this.html, this.text);\n    var $split = h();\n\n    if (split) {\n      var splitTo = this.splitTo,\n          splitHref = this.splitHref,\n          splitButtonType = this.splitButtonType;\n\n      var btnProps = _objectSpread(_objectSpread({}, commonProps), {}, {\n        variant: this.splitVariant || variant\n      }); // We add these as needed due to <router-link> issues with\n      // defined property with `undefined`/`null` values\n\n\n      if (splitTo) {\n        btnProps.to = splitTo;\n      } else if (splitHref) {\n        btnProps.href = splitHref;\n      } else if (splitButtonType) {\n        btnProps.type = splitButtonType;\n      }\n\n      $split = h(BButton, {\n        class: this.splitClass,\n        attrs: {\n          id: this.safeId('_BV_button_')\n        },\n        props: btnProps,\n        domProps: buttonContentDomProps,\n        on: {\n          click: this.onSplitClick\n        },\n        ref: 'button'\n      }, $buttonChildren); // Overwrite button content for the toggle when in `split` mode\n\n      $buttonChildren = [h('span', {\n        class: ['sr-only']\n      }, [this.toggleText])];\n      buttonContentDomProps = {};\n    }\n\n    var $toggle = h(BButton, {\n      staticClass: 'dropdown-toggle',\n      class: this.toggleClasses,\n      attrs: {\n        id: this.safeId('_BV_toggle_'),\n        'aria-haspopup': 'true',\n        'aria-expanded': toString(visible)\n      },\n      props: _objectSpread(_objectSpread({}, commonProps), {}, {\n        tag: this.toggleTag,\n        block: block && !split\n      }),\n      domProps: buttonContentDomProps,\n      on: {\n        mousedown: this.onMousedown,\n        click: toggle,\n        keydown: toggle // Handle ENTER, SPACE and DOWN\n\n      },\n      ref: 'toggle'\n    }, $buttonChildren);\n    var $menu = h('ul', {\n      staticClass: 'dropdown-menu',\n      class: this.menuClasses,\n      attrs: {\n        role: role,\n        tabindex: '-1',\n        'aria-labelledby': this.safeId(split ? '_BV_button_' : '_BV_toggle_')\n      },\n      on: {\n        keydown: this.onKeydown // Handle UP, DOWN and ESC\n\n      },\n      ref: 'menu'\n    }, [!this.lazy || visible ? this.normalizeSlot(SLOT_NAME_DEFAULT, {\n      hide: hide\n    }) : h()]);\n    return h('div', {\n      staticClass: 'dropdown b-dropdown',\n      class: this.dropdownClasses,\n      attrs: {\n        id: this.safeId()\n      }\n    }, [$split, $toggle, $menu]);\n  }\n});","map":{"version":3,"sources":["C:/Users/Yago/Documents/Eclipse/Yago/farolshopping/src/frontend/farolshopping/node_modules/bootstrap-vue/esm/components/dropdown/dropdown.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","Vue","NAME_DROPDOWN","PROP_TYPE_ARRAY_OBJECT_STRING","PROP_TYPE_BOOLEAN","PROP_TYPE_OBJECT_STRING","PROP_TYPE_STRING","SLOT_NAME_BUTTON_CONTENT","SLOT_NAME_DEFAULT","arrayIncludes","htmlOrText","makeProp","makePropsConfigurable","toString","dropdownMixin","props","dropdownProps","idMixin","idProps","normalizeSlotMixin","BButton","sortKeys","block","html","lazy","menuClass","noCaret","role","size","split","splitButtonType","splitClass","splitHref","splitTo","splitVariant","text","toggleClass","toggleTag","toggleText","variant","BDropdown","extend","name","mixins","computed","dropdownClasses","directionClass","boundaryClass","show","visible","menuClasses","right","toggleClasses","render","h","disabled","hide","toggle","commonProps","$buttonChildren","normalizeSlot","buttonContentDomProps","hasNormalizedSlot","$split","btnProps","to","href","type","class","attrs","id","safeId","domProps","on","click","onSplitClick","ref","$toggle","staticClass","tag","mousedown","onMousedown","keydown","$menu","tabindex","onKeydown"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Vue } from '../../vue';\nimport { NAME_DROPDOWN } from '../../constants/components';\nimport { PROP_TYPE_ARRAY_OBJECT_STRING, PROP_TYPE_BOOLEAN, PROP_TYPE_OBJECT_STRING, PROP_TYPE_STRING } from '../../constants/props';\nimport { SLOT_NAME_BUTTON_CONTENT, SLOT_NAME_DEFAULT } from '../../constants/slots';\nimport { arrayIncludes } from '../../utils/array';\nimport { htmlOrText } from '../../utils/html';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { toString } from '../../utils/string';\nimport { dropdownMixin, props as dropdownProps } from '../../mixins/dropdown';\nimport { idMixin, props as idProps } from '../../mixins/id';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { BButton } from '../button/button';\nimport { sortKeys } from '../../utils/object'; // --- Props ---\n\nexport var props = makePropsConfigurable(sortKeys(_objectSpread(_objectSpread(_objectSpread({}, idProps), dropdownProps), {}, {\n  block: makeProp(PROP_TYPE_BOOLEAN, false),\n  html: makeProp(PROP_TYPE_STRING),\n  // If `true`, only render menu contents when open\n  lazy: makeProp(PROP_TYPE_BOOLEAN, false),\n  menuClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\n  noCaret: makeProp(PROP_TYPE_BOOLEAN, false),\n  role: makeProp(PROP_TYPE_STRING, 'menu'),\n  size: makeProp(PROP_TYPE_STRING),\n  split: makeProp(PROP_TYPE_BOOLEAN, false),\n  splitButtonType: makeProp(PROP_TYPE_STRING, 'button', function (value) {\n    return arrayIncludes(['button', 'submit', 'reset'], value);\n  }),\n  splitClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\n  splitHref: makeProp(PROP_TYPE_STRING),\n  splitTo: makeProp(PROP_TYPE_OBJECT_STRING),\n  splitVariant: makeProp(PROP_TYPE_STRING),\n  text: makeProp(PROP_TYPE_STRING),\n  toggleClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\n  toggleTag: makeProp(PROP_TYPE_STRING, 'button'),\n  // TODO: This really should be `toggleLabel`\n  toggleText: makeProp(PROP_TYPE_STRING, 'Toggle dropdown'),\n  variant: makeProp(PROP_TYPE_STRING, 'secondary')\n})), NAME_DROPDOWN); // --- Main component ---\n// @vue/component\n\nexport var BDropdown = /*#__PURE__*/Vue.extend({\n  name: NAME_DROPDOWN,\n  mixins: [idMixin, dropdownMixin, normalizeSlotMixin],\n  props: props,\n  computed: {\n    dropdownClasses: function dropdownClasses() {\n      var block = this.block,\n          split = this.split;\n      return [this.directionClass, this.boundaryClass, {\n        show: this.visible,\n        // The 'btn-group' class is required in `split` mode for button alignment\n        // It needs also to be applied when `block` is disabled to allow multiple\n        // dropdowns to be aligned one line\n        'btn-group': split || !block,\n        // When `block` is enabled and we are in `split` mode the 'd-flex' class\n        // needs to be applied to allow the buttons to stretch to full width\n        'd-flex': block && split\n      }];\n    },\n    menuClasses: function menuClasses() {\n      return [this.menuClass, {\n        'dropdown-menu-right': this.right,\n        show: this.visible\n      }];\n    },\n    toggleClasses: function toggleClasses() {\n      var split = this.split;\n      return [this.toggleClass, {\n        'dropdown-toggle-split': split,\n        'dropdown-toggle-no-caret': this.noCaret && !split\n      }];\n    }\n  },\n  render: function render(h) {\n    var visible = this.visible,\n        variant = this.variant,\n        size = this.size,\n        block = this.block,\n        disabled = this.disabled,\n        split = this.split,\n        role = this.role,\n        hide = this.hide,\n        toggle = this.toggle;\n    var commonProps = {\n      variant: variant,\n      size: size,\n      block: block,\n      disabled: disabled\n    };\n    var $buttonChildren = this.normalizeSlot(SLOT_NAME_BUTTON_CONTENT);\n    var buttonContentDomProps = this.hasNormalizedSlot(SLOT_NAME_BUTTON_CONTENT) ? {} : htmlOrText(this.html, this.text);\n    var $split = h();\n\n    if (split) {\n      var splitTo = this.splitTo,\n          splitHref = this.splitHref,\n          splitButtonType = this.splitButtonType;\n\n      var btnProps = _objectSpread(_objectSpread({}, commonProps), {}, {\n        variant: this.splitVariant || variant\n      }); // We add these as needed due to <router-link> issues with\n      // defined property with `undefined`/`null` values\n\n\n      if (splitTo) {\n        btnProps.to = splitTo;\n      } else if (splitHref) {\n        btnProps.href = splitHref;\n      } else if (splitButtonType) {\n        btnProps.type = splitButtonType;\n      }\n\n      $split = h(BButton, {\n        class: this.splitClass,\n        attrs: {\n          id: this.safeId('_BV_button_')\n        },\n        props: btnProps,\n        domProps: buttonContentDomProps,\n        on: {\n          click: this.onSplitClick\n        },\n        ref: 'button'\n      }, $buttonChildren); // Overwrite button content for the toggle when in `split` mode\n\n      $buttonChildren = [h('span', {\n        class: ['sr-only']\n      }, [this.toggleText])];\n      buttonContentDomProps = {};\n    }\n\n    var $toggle = h(BButton, {\n      staticClass: 'dropdown-toggle',\n      class: this.toggleClasses,\n      attrs: {\n        id: this.safeId('_BV_toggle_'),\n        'aria-haspopup': 'true',\n        'aria-expanded': toString(visible)\n      },\n      props: _objectSpread(_objectSpread({}, commonProps), {}, {\n        tag: this.toggleTag,\n        block: block && !split\n      }),\n      domProps: buttonContentDomProps,\n      on: {\n        mousedown: this.onMousedown,\n        click: toggle,\n        keydown: toggle // Handle ENTER, SPACE and DOWN\n\n      },\n      ref: 'toggle'\n    }, $buttonChildren);\n    var $menu = h('ul', {\n      staticClass: 'dropdown-menu',\n      class: this.menuClasses,\n      attrs: {\n        role: role,\n        tabindex: '-1',\n        'aria-labelledby': this.safeId(split ? '_BV_button_' : '_BV_toggle_')\n      },\n      on: {\n        keydown: this.onKeydown // Handle UP, DOWN and ESC\n\n      },\n      ref: 'menu'\n    }, [!this.lazy || visible ? this.normalizeSlot(SLOT_NAME_DEFAULT, {\n      hide: hide\n    }) : h()]);\n    return h('div', {\n      staticClass: 'dropdown b-dropdown',\n      class: this.dropdownClasses,\n      attrs: {\n        id: this.safeId()\n      }\n    }, [$split, $toggle, $menu]);\n  }\n});"]},"metadata":{},"sourceType":"module"}