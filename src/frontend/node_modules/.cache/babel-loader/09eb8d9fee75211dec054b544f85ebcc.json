{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.string.trim.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { Vue } from '../vue';\nimport { EVENT_NAME_BLUR, EVENT_NAME_CHANGE, EVENT_NAME_INPUT, EVENT_NAME_UPDATE, HOOK_EVENT_NAME_BEFORE_DESTROY } from '../constants/events';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_BOOLEAN_STRING, PROP_TYPE_FUNCTION, PROP_TYPE_NUMBER_STRING, PROP_TYPE_STRING } from '../constants/props';\nimport { attemptBlur, attemptFocus } from '../utils/dom';\nimport { stopEvent } from '../utils/events';\nimport { mathMax } from '../utils/math';\nimport { makeModelMixin } from '../utils/model';\nimport { toInteger, toFloat } from '../utils/number';\nimport { sortKeys } from '../utils/object';\nimport { hasPropFunction, makeProp, makePropsConfigurable } from '../utils/props';\nimport { toString } from '../utils/string'; // --- Constants ---\n\nvar _makeModelMixin = makeModelMixin('value', {\n  type: PROP_TYPE_NUMBER_STRING,\n  defaultValue: '',\n  event: EVENT_NAME_UPDATE\n}),\n    modelMixin = _makeModelMixin.mixin,\n    modelProps = _makeModelMixin.props,\n    MODEL_PROP_NAME = _makeModelMixin.prop,\n    MODEL_EVENT_NAME = _makeModelMixin.event;\n\nexport { MODEL_PROP_NAME, MODEL_EVENT_NAME }; // --- Props ---\n\nexport var props = makePropsConfigurable(sortKeys(_objectSpread(_objectSpread({}, modelProps), {}, {\n  ariaInvalid: makeProp(PROP_TYPE_BOOLEAN_STRING, false),\n  autocomplete: makeProp(PROP_TYPE_STRING),\n  // Debounce timeout (in ms). Not applicable with `lazy` prop\n  debounce: makeProp(PROP_TYPE_NUMBER_STRING, 0),\n  formatter: makeProp(PROP_TYPE_FUNCTION),\n  // Only update the `v-model` on blur/change events\n  lazy: makeProp(PROP_TYPE_BOOLEAN, false),\n  lazyFormatter: makeProp(PROP_TYPE_BOOLEAN, false),\n  number: makeProp(PROP_TYPE_BOOLEAN, false),\n  placeholder: makeProp(PROP_TYPE_STRING),\n  plaintext: makeProp(PROP_TYPE_BOOLEAN, false),\n  readonly: makeProp(PROP_TYPE_BOOLEAN, false),\n  trim: makeProp(PROP_TYPE_BOOLEAN, false)\n})), 'formTextControls'); // --- Mixin ---\n// @vue/component\n\nexport var formTextMixin = Vue.extend({\n  mixins: [modelMixin],\n  props: props,\n  data: function data() {\n    var value = this[MODEL_PROP_NAME];\n    return {\n      localValue: toString(value),\n      vModelValue: this.modifyValue(value)\n    };\n  },\n  computed: {\n    computedClass: function computedClass() {\n      var plaintext = this.plaintext,\n          type = this.type;\n      var isRange = type === 'range';\n      var isColor = type === 'color';\n      return [{\n        // Range input needs class `custom-range`\n        'custom-range': isRange,\n        // `plaintext` not supported by `type=\"range\"` or `type=\"color\"`\n        'form-control-plaintext': plaintext && !isRange && !isColor,\n        // `form-control` not used by `type=\"range\"` or `plaintext`\n        // Always used by `type=\"color\"`\n        'form-control': isColor || !plaintext && !isRange\n      }, this.sizeFormClass, this.stateClass];\n    },\n    computedDebounce: function computedDebounce() {\n      // Ensure we have a positive number equal to or greater than 0\n      return mathMax(toInteger(this.debounce, 0), 0);\n    },\n    hasFormatter: function hasFormatter() {\n      return hasPropFunction(this.formatter);\n    }\n  },\n  watch: _defineProperty({}, MODEL_PROP_NAME, function (newValue) {\n    var stringifyValue = toString(newValue);\n    var modifiedValue = this.modifyValue(newValue);\n\n    if (stringifyValue !== this.localValue || modifiedValue !== this.vModelValue) {\n      // Clear any pending debounce timeout, as we are overwriting the user input\n      this.clearDebounce(); // Update the local values\n\n      this.localValue = stringifyValue;\n      this.vModelValue = modifiedValue;\n    }\n  }),\n  created: function created() {\n    // Create private non-reactive props\n    this.$_inputDebounceTimer = null;\n  },\n  mounted: function mounted() {\n    // Set up destroy handler\n    this.$on(HOOK_EVENT_NAME_BEFORE_DESTROY, this.clearDebounce);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.clearDebounce();\n  },\n  methods: {\n    clearDebounce: function clearDebounce() {\n      clearTimeout(this.$_inputDebounceTimer);\n      this.$_inputDebounceTimer = null;\n    },\n    formatValue: function formatValue(value, event) {\n      var force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      value = toString(value);\n\n      if (this.hasFormatter && (!this.lazyFormatter || force)) {\n        value = this.formatter(value, event);\n      }\n\n      return value;\n    },\n    modifyValue: function modifyValue(value) {\n      value = toString(value); // Emulate `.trim` modifier behaviour\n\n      if (this.trim) {\n        value = value.trim();\n      } // Emulate `.number` modifier behaviour\n\n\n      if (this.number) {\n        value = toFloat(value, value);\n      }\n\n      return value;\n    },\n    updateValue: function updateValue(value) {\n      var _this = this;\n\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var lazy = this.lazy;\n\n      if (lazy && !force) {\n        return;\n      } // Make sure to always clear the debounce when `updateValue()`\n      // is called, even when the v-model hasn't changed\n\n\n      this.clearDebounce(); // Define the shared update logic in a method to be able to use\n      // it for immediate and debounced value changes\n\n      var doUpdate = function doUpdate() {\n        value = _this.modifyValue(value);\n\n        if (value !== _this.vModelValue) {\n          _this.vModelValue = value;\n\n          _this.$emit(MODEL_EVENT_NAME, value);\n        } else if (_this.hasFormatter) {\n          // When the `vModelValue` hasn't changed but the actual input value\n          // is out of sync, make sure to change it to the given one\n          // Usually caused by browser autocomplete and how it triggers the\n          // change or input event, or depending on the formatter function\n          // https://github.com/bootstrap-vue/bootstrap-vue/issues/2657\n          // https://github.com/bootstrap-vue/bootstrap-vue/issues/3498\n\n          /* istanbul ignore next: hard to test */\n          var $input = _this.$refs.input;\n          /* istanbul ignore if: hard to test out of sync value */\n\n          if ($input && value !== $input.value) {\n            $input.value = value;\n          }\n        }\n      }; // Only debounce the value update when a value greater than `0`\n      // is set and we are not in lazy mode or this is a forced update\n\n\n      var debounce = this.computedDebounce;\n\n      if (debounce > 0 && !lazy && !force) {\n        this.$_inputDebounceTimer = setTimeout(doUpdate, debounce);\n      } else {\n        // Immediately update the v-model\n        doUpdate();\n      }\n    },\n    onInput: function onInput(event) {\n      // `event.target.composing` is set by Vue\n      // https://github.com/vuejs/vue/blob/dev/src/platforms/web/runtime/directives/model.js\n      // TODO: Is this needed now with the latest Vue?\n\n      /* istanbul ignore if: hard to test composition events */\n      if (event.target.composing) {\n        return;\n      }\n\n      var value = event.target.value;\n      var formattedValue = this.formatValue(value, event); // Exit when the `formatter` function strictly returned `false`\n      // or prevented the input event\n\n      /* istanbul ignore next */\n\n      if (formattedValue === false || event.defaultPrevented) {\n        stopEvent(event, {\n          propagation: false\n        });\n        return;\n      }\n\n      this.localValue = formattedValue;\n      this.updateValue(formattedValue);\n      this.$emit(EVENT_NAME_INPUT, formattedValue);\n    },\n    onChange: function onChange(event) {\n      var value = event.target.value;\n      var formattedValue = this.formatValue(value, event); // Exit when the `formatter` function strictly returned `false`\n      // or prevented the input event\n\n      /* istanbul ignore next */\n\n      if (formattedValue === false || event.defaultPrevented) {\n        stopEvent(event, {\n          propagation: false\n        });\n        return;\n      }\n\n      this.localValue = formattedValue;\n      this.updateValue(formattedValue, true);\n      this.$emit(EVENT_NAME_CHANGE, formattedValue);\n    },\n    onBlur: function onBlur(event) {\n      // Apply the `localValue` on blur to prevent cursor jumps\n      // on mobile browsers (e.g. caused by autocomplete)\n      var value = event.target.value;\n      var formattedValue = this.formatValue(value, event, true);\n\n      if (formattedValue !== false) {\n        // We need to use the modified value here to apply the\n        // `.trim` and `.number` modifiers properly\n        this.localValue = toString(this.modifyValue(formattedValue)); // We pass the formatted value here since the `updateValue` method\n        // handles the modifiers itself\n\n        this.updateValue(formattedValue, true);\n      } // Emit native blur event\n\n\n      this.$emit(EVENT_NAME_BLUR, event);\n    },\n    focus: function focus() {\n      // For external handler that may want a focus method\n      if (!this.disabled) {\n        attemptFocus(this.$el);\n      }\n    },\n    blur: function blur() {\n      // For external handler that may want a blur method\n      if (!this.disabled) {\n        attemptBlur(this.$el);\n      }\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/Yago/Documents/Eclipse/Yago/farolshopping/src/frontend/farolshopping/node_modules/bootstrap-vue/esm/mixins/form-text.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","Vue","EVENT_NAME_BLUR","EVENT_NAME_CHANGE","EVENT_NAME_INPUT","EVENT_NAME_UPDATE","HOOK_EVENT_NAME_BEFORE_DESTROY","PROP_TYPE_BOOLEAN","PROP_TYPE_BOOLEAN_STRING","PROP_TYPE_FUNCTION","PROP_TYPE_NUMBER_STRING","PROP_TYPE_STRING","attemptBlur","attemptFocus","stopEvent","mathMax","makeModelMixin","toInteger","toFloat","sortKeys","hasPropFunction","makeProp","makePropsConfigurable","toString","_makeModelMixin","type","defaultValue","event","modelMixin","mixin","modelProps","props","MODEL_PROP_NAME","prop","MODEL_EVENT_NAME","ariaInvalid","autocomplete","debounce","formatter","lazy","lazyFormatter","number","placeholder","plaintext","readonly","trim","formTextMixin","extend","mixins","data","localValue","vModelValue","modifyValue","computed","computedClass","isRange","isColor","sizeFormClass","stateClass","computedDebounce","hasFormatter","watch","newValue","stringifyValue","modifiedValue","clearDebounce","created","$_inputDebounceTimer","mounted","$on","beforeDestroy","methods","clearTimeout","formatValue","force","undefined","updateValue","_this","doUpdate","$emit","$input","$refs","input","setTimeout","onInput","composing","formattedValue","defaultPrevented","propagation","onChange","onBlur","focus","disabled","$el","blur"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Vue } from '../vue';\nimport { EVENT_NAME_BLUR, EVENT_NAME_CHANGE, EVENT_NAME_INPUT, EVENT_NAME_UPDATE, HOOK_EVENT_NAME_BEFORE_DESTROY } from '../constants/events';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_BOOLEAN_STRING, PROP_TYPE_FUNCTION, PROP_TYPE_NUMBER_STRING, PROP_TYPE_STRING } from '../constants/props';\nimport { attemptBlur, attemptFocus } from '../utils/dom';\nimport { stopEvent } from '../utils/events';\nimport { mathMax } from '../utils/math';\nimport { makeModelMixin } from '../utils/model';\nimport { toInteger, toFloat } from '../utils/number';\nimport { sortKeys } from '../utils/object';\nimport { hasPropFunction, makeProp, makePropsConfigurable } from '../utils/props';\nimport { toString } from '../utils/string'; // --- Constants ---\n\nvar _makeModelMixin = makeModelMixin('value', {\n  type: PROP_TYPE_NUMBER_STRING,\n  defaultValue: '',\n  event: EVENT_NAME_UPDATE\n}),\n    modelMixin = _makeModelMixin.mixin,\n    modelProps = _makeModelMixin.props,\n    MODEL_PROP_NAME = _makeModelMixin.prop,\n    MODEL_EVENT_NAME = _makeModelMixin.event;\n\nexport { MODEL_PROP_NAME, MODEL_EVENT_NAME }; // --- Props ---\n\nexport var props = makePropsConfigurable(sortKeys(_objectSpread(_objectSpread({}, modelProps), {}, {\n  ariaInvalid: makeProp(PROP_TYPE_BOOLEAN_STRING, false),\n  autocomplete: makeProp(PROP_TYPE_STRING),\n  // Debounce timeout (in ms). Not applicable with `lazy` prop\n  debounce: makeProp(PROP_TYPE_NUMBER_STRING, 0),\n  formatter: makeProp(PROP_TYPE_FUNCTION),\n  // Only update the `v-model` on blur/change events\n  lazy: makeProp(PROP_TYPE_BOOLEAN, false),\n  lazyFormatter: makeProp(PROP_TYPE_BOOLEAN, false),\n  number: makeProp(PROP_TYPE_BOOLEAN, false),\n  placeholder: makeProp(PROP_TYPE_STRING),\n  plaintext: makeProp(PROP_TYPE_BOOLEAN, false),\n  readonly: makeProp(PROP_TYPE_BOOLEAN, false),\n  trim: makeProp(PROP_TYPE_BOOLEAN, false)\n})), 'formTextControls'); // --- Mixin ---\n// @vue/component\n\nexport var formTextMixin = Vue.extend({\n  mixins: [modelMixin],\n  props: props,\n  data: function data() {\n    var value = this[MODEL_PROP_NAME];\n    return {\n      localValue: toString(value),\n      vModelValue: this.modifyValue(value)\n    };\n  },\n  computed: {\n    computedClass: function computedClass() {\n      var plaintext = this.plaintext,\n          type = this.type;\n      var isRange = type === 'range';\n      var isColor = type === 'color';\n      return [{\n        // Range input needs class `custom-range`\n        'custom-range': isRange,\n        // `plaintext` not supported by `type=\"range\"` or `type=\"color\"`\n        'form-control-plaintext': plaintext && !isRange && !isColor,\n        // `form-control` not used by `type=\"range\"` or `plaintext`\n        // Always used by `type=\"color\"`\n        'form-control': isColor || !plaintext && !isRange\n      }, this.sizeFormClass, this.stateClass];\n    },\n    computedDebounce: function computedDebounce() {\n      // Ensure we have a positive number equal to or greater than 0\n      return mathMax(toInteger(this.debounce, 0), 0);\n    },\n    hasFormatter: function hasFormatter() {\n      return hasPropFunction(this.formatter);\n    }\n  },\n  watch: _defineProperty({}, MODEL_PROP_NAME, function (newValue) {\n    var stringifyValue = toString(newValue);\n    var modifiedValue = this.modifyValue(newValue);\n\n    if (stringifyValue !== this.localValue || modifiedValue !== this.vModelValue) {\n      // Clear any pending debounce timeout, as we are overwriting the user input\n      this.clearDebounce(); // Update the local values\n\n      this.localValue = stringifyValue;\n      this.vModelValue = modifiedValue;\n    }\n  }),\n  created: function created() {\n    // Create private non-reactive props\n    this.$_inputDebounceTimer = null;\n  },\n  mounted: function mounted() {\n    // Set up destroy handler\n    this.$on(HOOK_EVENT_NAME_BEFORE_DESTROY, this.clearDebounce);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.clearDebounce();\n  },\n  methods: {\n    clearDebounce: function clearDebounce() {\n      clearTimeout(this.$_inputDebounceTimer);\n      this.$_inputDebounceTimer = null;\n    },\n    formatValue: function formatValue(value, event) {\n      var force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      value = toString(value);\n\n      if (this.hasFormatter && (!this.lazyFormatter || force)) {\n        value = this.formatter(value, event);\n      }\n\n      return value;\n    },\n    modifyValue: function modifyValue(value) {\n      value = toString(value); // Emulate `.trim` modifier behaviour\n\n      if (this.trim) {\n        value = value.trim();\n      } // Emulate `.number` modifier behaviour\n\n\n      if (this.number) {\n        value = toFloat(value, value);\n      }\n\n      return value;\n    },\n    updateValue: function updateValue(value) {\n      var _this = this;\n\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var lazy = this.lazy;\n\n      if (lazy && !force) {\n        return;\n      } // Make sure to always clear the debounce when `updateValue()`\n      // is called, even when the v-model hasn't changed\n\n\n      this.clearDebounce(); // Define the shared update logic in a method to be able to use\n      // it for immediate and debounced value changes\n\n      var doUpdate = function doUpdate() {\n        value = _this.modifyValue(value);\n\n        if (value !== _this.vModelValue) {\n          _this.vModelValue = value;\n\n          _this.$emit(MODEL_EVENT_NAME, value);\n        } else if (_this.hasFormatter) {\n          // When the `vModelValue` hasn't changed but the actual input value\n          // is out of sync, make sure to change it to the given one\n          // Usually caused by browser autocomplete and how it triggers the\n          // change or input event, or depending on the formatter function\n          // https://github.com/bootstrap-vue/bootstrap-vue/issues/2657\n          // https://github.com/bootstrap-vue/bootstrap-vue/issues/3498\n\n          /* istanbul ignore next: hard to test */\n          var $input = _this.$refs.input;\n          /* istanbul ignore if: hard to test out of sync value */\n\n          if ($input && value !== $input.value) {\n            $input.value = value;\n          }\n        }\n      }; // Only debounce the value update when a value greater than `0`\n      // is set and we are not in lazy mode or this is a forced update\n\n\n      var debounce = this.computedDebounce;\n\n      if (debounce > 0 && !lazy && !force) {\n        this.$_inputDebounceTimer = setTimeout(doUpdate, debounce);\n      } else {\n        // Immediately update the v-model\n        doUpdate();\n      }\n    },\n    onInput: function onInput(event) {\n      // `event.target.composing` is set by Vue\n      // https://github.com/vuejs/vue/blob/dev/src/platforms/web/runtime/directives/model.js\n      // TODO: Is this needed now with the latest Vue?\n\n      /* istanbul ignore if: hard to test composition events */\n      if (event.target.composing) {\n        return;\n      }\n\n      var value = event.target.value;\n      var formattedValue = this.formatValue(value, event); // Exit when the `formatter` function strictly returned `false`\n      // or prevented the input event\n\n      /* istanbul ignore next */\n\n      if (formattedValue === false || event.defaultPrevented) {\n        stopEvent(event, {\n          propagation: false\n        });\n        return;\n      }\n\n      this.localValue = formattedValue;\n      this.updateValue(formattedValue);\n      this.$emit(EVENT_NAME_INPUT, formattedValue);\n    },\n    onChange: function onChange(event) {\n      var value = event.target.value;\n      var formattedValue = this.formatValue(value, event); // Exit when the `formatter` function strictly returned `false`\n      // or prevented the input event\n\n      /* istanbul ignore next */\n\n      if (formattedValue === false || event.defaultPrevented) {\n        stopEvent(event, {\n          propagation: false\n        });\n        return;\n      }\n\n      this.localValue = formattedValue;\n      this.updateValue(formattedValue, true);\n      this.$emit(EVENT_NAME_CHANGE, formattedValue);\n    },\n    onBlur: function onBlur(event) {\n      // Apply the `localValue` on blur to prevent cursor jumps\n      // on mobile browsers (e.g. caused by autocomplete)\n      var value = event.target.value;\n      var formattedValue = this.formatValue(value, event, true);\n\n      if (formattedValue !== false) {\n        // We need to use the modified value here to apply the\n        // `.trim` and `.number` modifiers properly\n        this.localValue = toString(this.modifyValue(formattedValue)); // We pass the formatted value here since the `updateValue` method\n        // handles the modifiers itself\n\n        this.updateValue(formattedValue, true);\n      } // Emit native blur event\n\n\n      this.$emit(EVENT_NAME_BLUR, event);\n    },\n    focus: function focus() {\n      // For external handler that may want a focus method\n      if (!this.disabled) {\n        attemptFocus(this.$el);\n      }\n    },\n    blur: function blur() {\n      // For external handler that may want a blur method\n      if (!this.disabled) {\n        attemptBlur(this.$el);\n      }\n    }\n  }\n});"]},"metadata":{},"sourceType":"module"}