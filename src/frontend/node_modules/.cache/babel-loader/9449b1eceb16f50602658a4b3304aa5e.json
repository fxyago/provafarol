{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { PROP_TYPE_ANY } from '../constants/props';\nimport { cloneDeep } from './clone-deep';\nimport { getComponentConfig } from './config';\nimport { identity } from './identity';\nimport { isArray, isFunction, isObject, isUndefined } from './inspect';\nimport { clone, hasOwnProperty, keys } from './object';\nimport { lowerFirst, upperFirst } from './string'; // Prefix a property\n\nexport var prefixPropName = function prefixPropName(prefix, value) {\n  return prefix + upperFirst(value);\n}; // Remove a prefix from a property\n\nexport var unprefixPropName = function unprefixPropName(prefix, value) {\n  return lowerFirst(value.replace(prefix, ''));\n}; // Suffix can be a falsey value so nothing is appended to string\n// (helps when looping over props & some shouldn't change)\n// Use data last parameters to allow for currying\n\nexport var suffixPropName = function suffixPropName(suffix, value) {\n  return value + (suffix ? upperFirst(suffix) : '');\n}; // Generates a prop object\n\nexport var makeProp = function makeProp() {\n  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : PROP_TYPE_ANY;\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  var requiredOrValidator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  var validator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n  var required = requiredOrValidator === true;\n  validator = required ? validator : requiredOrValidator;\n  return _objectSpread(_objectSpread(_objectSpread({}, type ? {\n    type: type\n  } : {}), required ? {\n    required: required\n  } : isUndefined(value) ? {} : {\n    default: isObject(value) ? function () {\n      return value;\n    } : value\n  }), isUndefined(validator) ? {} : {\n    validator: validator\n  });\n}; // Copies props from one array/object to a new array/object\n// Prop values are also cloned as new references to prevent possible\n// mutation of original prop object values\n// Optionally accepts a function to transform the prop name\n\nexport var copyProps = function copyProps(props) {\n  var transformFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : identity;\n\n  if (isArray(props)) {\n    return props.map(transformFn);\n  }\n\n  var copied = {};\n\n  for (var prop in props) {\n    /* istanbul ignore else */\n    if (hasOwnProperty(props, prop)) {\n      // If the prop value is an object, do a shallow clone\n      // to prevent potential mutations to the original object\n      copied[transformFn(prop)] = isObject(props[prop]) ? clone(props[prop]) : props[prop];\n    }\n  }\n\n  return copied;\n}; // Given an array of properties or an object of property keys,\n// plucks all the values off the target object, returning a new object\n// that has props that reference the original prop values\n\nexport var pluckProps = function pluckProps(keysToPluck, objToPluck) {\n  var transformFn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : identity;\n  return (isArray(keysToPluck) ? keysToPluck.slice() : keys(keysToPluck)).reduce(function (memo, prop) {\n    memo[transformFn(prop)] = objToPluck[prop];\n    return memo;\n  }, {});\n}; // Make a prop object configurable by global configuration\n// Replaces the current `default` key of each prop with a `getComponentConfig()`\n// call that falls back to the current default value of the prop\n\nexport var makePropConfigurable = function makePropConfigurable(prop, key, componentKey) {\n  return _objectSpread(_objectSpread({}, cloneDeep(prop)), {}, {\n    default: function bvConfigurablePropDefault() {\n      var value = getComponentConfig(componentKey, key, prop.default);\n      return isFunction(value) ? value() : value;\n    }\n  });\n}; // Make a props object configurable by global configuration\n// Replaces the current `default` key of each prop with a `getComponentConfig()`\n// call that falls back to the current default value of the prop\n\nexport var makePropsConfigurable = function makePropsConfigurable(props, componentKey) {\n  return keys(props).reduce(function (result, key) {\n    return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, key, makePropConfigurable(props[key], key, componentKey)));\n  }, {});\n}; // Get function name we use in `makePropConfigurable()`\n// for the prop default value override to compare\n// against in `hasPropFunction()`\n\nvar configurablePropDefaultFnName = makePropConfigurable({}, '', '').default.name; // Detect wether the given value is currently a function\n// and isn't the props default function\n\nexport var hasPropFunction = function hasPropFunction(fn) {\n  return isFunction(fn) && fn.name !== configurablePropDefaultFnName;\n};","map":{"version":3,"sources":["C:/Users/Yago/Documents/Eclipse/Yago/farolshopping/src/frontend/farolshopping/node_modules/bootstrap-vue/esm/utils/props.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","PROP_TYPE_ANY","cloneDeep","getComponentConfig","identity","isArray","isFunction","isObject","isUndefined","clone","hasOwnProperty","lowerFirst","upperFirst","prefixPropName","prefix","unprefixPropName","replace","suffixPropName","suffix","makeProp","type","undefined","requiredOrValidator","validator","required","default","copyProps","props","transformFn","map","copied","prop","pluckProps","keysToPluck","objToPluck","slice","reduce","memo","makePropConfigurable","componentKey","bvConfigurablePropDefault","makePropsConfigurable","result","configurablePropDefaultFnName","name","hasPropFunction","fn"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PROP_TYPE_ANY } from '../constants/props';\nimport { cloneDeep } from './clone-deep';\nimport { getComponentConfig } from './config';\nimport { identity } from './identity';\nimport { isArray, isFunction, isObject, isUndefined } from './inspect';\nimport { clone, hasOwnProperty, keys } from './object';\nimport { lowerFirst, upperFirst } from './string'; // Prefix a property\n\nexport var prefixPropName = function prefixPropName(prefix, value) {\n  return prefix + upperFirst(value);\n}; // Remove a prefix from a property\n\nexport var unprefixPropName = function unprefixPropName(prefix, value) {\n  return lowerFirst(value.replace(prefix, ''));\n}; // Suffix can be a falsey value so nothing is appended to string\n// (helps when looping over props & some shouldn't change)\n// Use data last parameters to allow for currying\n\nexport var suffixPropName = function suffixPropName(suffix, value) {\n  return value + (suffix ? upperFirst(suffix) : '');\n}; // Generates a prop object\n\nexport var makeProp = function makeProp() {\n  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : PROP_TYPE_ANY;\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  var requiredOrValidator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  var validator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n  var required = requiredOrValidator === true;\n  validator = required ? validator : requiredOrValidator;\n  return _objectSpread(_objectSpread(_objectSpread({}, type ? {\n    type: type\n  } : {}), required ? {\n    required: required\n  } : isUndefined(value) ? {} : {\n    default: isObject(value) ? function () {\n      return value;\n    } : value\n  }), isUndefined(validator) ? {} : {\n    validator: validator\n  });\n}; // Copies props from one array/object to a new array/object\n// Prop values are also cloned as new references to prevent possible\n// mutation of original prop object values\n// Optionally accepts a function to transform the prop name\n\nexport var copyProps = function copyProps(props) {\n  var transformFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : identity;\n\n  if (isArray(props)) {\n    return props.map(transformFn);\n  }\n\n  var copied = {};\n\n  for (var prop in props) {\n    /* istanbul ignore else */\n    if (hasOwnProperty(props, prop)) {\n      // If the prop value is an object, do a shallow clone\n      // to prevent potential mutations to the original object\n      copied[transformFn(prop)] = isObject(props[prop]) ? clone(props[prop]) : props[prop];\n    }\n  }\n\n  return copied;\n}; // Given an array of properties or an object of property keys,\n// plucks all the values off the target object, returning a new object\n// that has props that reference the original prop values\n\nexport var pluckProps = function pluckProps(keysToPluck, objToPluck) {\n  var transformFn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : identity;\n  return (isArray(keysToPluck) ? keysToPluck.slice() : keys(keysToPluck)).reduce(function (memo, prop) {\n    memo[transformFn(prop)] = objToPluck[prop];\n    return memo;\n  }, {});\n}; // Make a prop object configurable by global configuration\n// Replaces the current `default` key of each prop with a `getComponentConfig()`\n// call that falls back to the current default value of the prop\n\nexport var makePropConfigurable = function makePropConfigurable(prop, key, componentKey) {\n  return _objectSpread(_objectSpread({}, cloneDeep(prop)), {}, {\n    default: function bvConfigurablePropDefault() {\n      var value = getComponentConfig(componentKey, key, prop.default);\n      return isFunction(value) ? value() : value;\n    }\n  });\n}; // Make a props object configurable by global configuration\n// Replaces the current `default` key of each prop with a `getComponentConfig()`\n// call that falls back to the current default value of the prop\n\nexport var makePropsConfigurable = function makePropsConfigurable(props, componentKey) {\n  return keys(props).reduce(function (result, key) {\n    return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, key, makePropConfigurable(props[key], key, componentKey)));\n  }, {});\n}; // Get function name we use in `makePropConfigurable()`\n// for the prop default value override to compare\n// against in `hasPropFunction()`\n\nvar configurablePropDefaultFnName = makePropConfigurable({}, '', '').default.name; // Detect wether the given value is currently a function\n// and isn't the props default function\n\nexport var hasPropFunction = function hasPropFunction(fn) {\n  return isFunction(fn) && fn.name !== configurablePropDefaultFnName;\n};"]},"metadata":{},"sourceType":"module"}